<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="18:SerialAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb6f39d00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb730b320"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb730b320"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb730ca28"/></to>
    </wire>
    <wire loc="19:SerialAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6f38060"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb6f59d98"/></to>
    </wire>
    <wire loc="51:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6f59d98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb6f534b0"/></to>
    </wire>
    <wire loc="20:SerialAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb6f2e278"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7202010"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7202010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb716fd18"/></to>
    </wire>
    <wire loc="21:SerialAppC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb6f2e888"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb70845d8"/></to>
    </wire>
    <wire loc="51:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb70845d8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb707ee28"/></to>
    </wire>
    <wire loc="22:SerialAppC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb6f2ece8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb7084a58"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb7084a58"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb707d290"/></to>
    </wire>
    <wire loc="23:SerialAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0xb6f30768"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6efe660"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6efe660"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6ef9b28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:SerialAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6f2d5f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb687d580"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb687d580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6437230"/></to>
    </wire>
    <wire loc="26:SerialAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6f2dce0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb687dc18"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb687dc18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb64378c8"/></to>
    </wire>
    <wire loc="27:SerialAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xb6f2fb20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6e03200"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6e03200"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6debca8"/></to>
    </wire>
    <wire loc="28:SerialAppC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6f2c9f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb687eed8"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb687eed8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb643ab50"/></to>
    </wire>
    <wire loc="29:SerialAppC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6f2b238"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb682e2c0"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb682e2c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6e02558"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb64759c8"/></to>
    </wire>
    <wire loc="120:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb6a644d8"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6b0f0e8"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb64ed330"/></to>
    </wire>
    <wire loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6bb5be0"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6509078"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb65756a0"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6ef3408"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0xb7041d80"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0xb7038920"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb707e6d8"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb716f980"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb730cdc0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb73aa5f0"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb73aa5f0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb73318a8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7213400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb69c8030"/></to>
    </wire>
    <wire loc="123:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7213400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb6a65e40"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7213400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb730d908"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb730d908"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7309d58"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7213808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb73029c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb68e5a00"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb73029c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6f8ec70"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7302268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7224010"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xb7300620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7225bf8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7300218"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6f3f870"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7300218"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7308630"/></to>
    </wire>
    <wire loc="46:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7308630"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb72fd5a0"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7308a00"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb73029c8"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xb72f5b10"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xb72f0dc8"/></to>
    </wire>
    <wire loc="141:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xb72f0dc8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb72a4170"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb72f8588"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7308a00"/></to>
    </wire>
    <wire loc="191:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xb72d2210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb72510b0"/></to>
    </wire>
    <wire loc="165:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xb72e2750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb728d090"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb728d090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb675e010"/></to>
    </wire>
    <wire loc="176:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xb72dbce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7284d68"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7284d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6722228"/></to>
    </wire>
    <wire loc="185:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xb72d6ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb727b7d0"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb727b7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66eac08"/></to>
    </wire>
    <wire loc="196:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0xb72cf750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7243880"/></to>
    </wire>
    <wire loc="143:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xb72ee2f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb72a34f0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb72a34f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67fe010"/></to>
    </wire>
    <wire loc="183:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xb72d7a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb727c4f0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb727c4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66ed7f8"/></to>
    </wire>
    <wire loc="146:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xb72ed750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb729e3d8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb729e3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67d4de8"/></to>
    </wire>
    <wire loc="157:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xb72e7ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7294170"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7294170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6795d70"/></to>
    </wire>
    <wire loc="168:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xb72df670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb728bd68"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb728bd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6758010"/></to>
    </wire>
    <wire loc="179:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xb72d9c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7282ac8"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7282ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb671d0b0"/></to>
    </wire>
    <wire loc="138:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xb72fcf20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb72a6410"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb72a6410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6807a08"/></to>
    </wire>
    <wire loc="149:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xb72eb670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb729c030"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb729c030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67ccc08"/></to>
    </wire>
    <wire loc="160:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xb72e5ce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7293e48"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7293e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6790c08"/></to>
    </wire>
    <wire loc="171:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xb72dd4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7289ac8"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7289ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6753010"/></to>
    </wire>
    <wire loc="188:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xb72d4ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb72794f0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb72794f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66e5a88"/></to>
    </wire>
    <wire loc="194:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xb72d02f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7248880"/></to>
    </wire>
    <wire loc="174:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xb72dc8e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7285a80"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7285a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6726de0"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb72a4170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb68029e8"/></to>
    </wire>
    <wire loc="152:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xb72e9590"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb729bc88"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb729bc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67c6a88"/></to>
    </wire>
    <wire loc="192:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xb72d2e08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb724e880"/></to>
    </wire>
    <wire loc="155:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xb72e8a08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7296dc8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7296dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6798938"/></to>
    </wire>
    <wire loc="166:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xb72e1210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb728d9e8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb728d9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb675c9e8"/></to>
    </wire>
    <wire loc="177:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xb72da750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7283790"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7283790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6721c08"/></to>
    </wire>
    <wire loc="186:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xb72d58e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb727a170"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb727a170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66e86c0"/></to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xb72eece8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb72a3e48"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb72a3e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67fd9e8"/></to>
    </wire>
    <wire loc="147:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xb72ec210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb729ed30"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb729ed30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67cf7f8"/></to>
    </wire>
    <wire loc="158:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xb72e68e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7294ac8"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7294ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67937f8"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xb72de0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb728a790"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb728a790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67579e8"/></to>
    </wire>
    <wire loc="180:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xb72d8670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb72804f0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb72804f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb671ca88"/></to>
    </wire>
    <wire loc="139:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xb72f1930"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb72a6d68"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb72a6d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6805538"/></to>
    </wire>
    <wire loc="150:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xb72ea0a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb729c988"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb729c988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67c96c0"/></to>
    </wire>
    <wire loc="161:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xb72e4750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb72927d0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb72927d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb678e6c0"/></to>
    </wire>
    <wire loc="189:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xb72d3750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7279e48"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7279e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66e3538"/></to>
    </wire>
    <wire loc="164:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xb72e3c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb728e6f8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb728e6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6760538"/></to>
    </wire>
    <wire loc="175:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xb72db2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7284410"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7284410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67247f8"/></to>
    </wire>
    <wire loc="184:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xb72d64b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb727ce48"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb727ce48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66eb228"/></to>
    </wire>
    <wire loc="195:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xb72d0ce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb72450b0"/></to>
    </wire>
    <wire loc="142:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xb72ef830"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb72a4ac8"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb72a4ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6800538"/></to>
    </wire>
    <wire loc="153:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xb72e8010"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb729a6b0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb729a6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67c4538"/></to>
    </wire>
    <wire loc="182:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xb72d70a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb727db00"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb727db00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66f3de8"/></to>
    </wire>
    <wire loc="156:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xb72e74b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7295790"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7295790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67963b0"/></to>
    </wire>
    <wire loc="167:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xb72e1c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb728b410"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb728b410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb675a538"/></to>
    </wire>
    <wire loc="178:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xb72d9210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7282170"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7282170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb671f6c0"/></to>
    </wire>
    <wire loc="187:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xb72d42f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb727aac8"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb727aac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66e60b0"/></to>
    </wire>
    <wire loc="137:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xb72fc528"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb72a7a28"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb72a7a28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6808050"/></to>
    </wire>
    <wire loc="148:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xb72ecc08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb729d6b0"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb729d6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67cd228"/></to>
    </wire>
    <wire loc="159:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xb72e52f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb72934f0"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb72934f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6791228"/></to>
    </wire>
    <wire loc="170:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xb72dea98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7289170"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7289170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6755538"/></to>
    </wire>
    <wire loc="193:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xb72d1830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb724b0b0"/></to>
    </wire>
    <wire loc="173:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xb72ddea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7285128"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7285128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6727418"/></to>
    </wire>
    <wire loc="162:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xb72e3210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7291170"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7291170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb678c0b0"/></to>
    </wire>
    <wire loc="140:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xb72f03d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb72a5790"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb72a5790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6803010"/></to>
    </wire>
    <wire loc="151:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xb72eab18"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb729b330"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb729b330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67c70b0"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7330100"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb7330d68"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb73ab728"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xb731c218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xb6e8d1e0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb716fd18"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7155de8"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb71c6d60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb71c1be8"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb71bb148"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7171310"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb71ff248"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb71a63a8"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb71ad308"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb71719a8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb71b2140"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb71a66d0"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb716f980"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7155a50"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7166840"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb71a79e0"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7171ed0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb716cc20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb71705a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb716c618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0xb7166338"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0xb6f61928"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb716cc20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb70dfc60"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb716c618"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb70df8a0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0xb70a6400"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0xb7166338"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7153180"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7166840"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb70a53f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7166840"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb709e420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7166840"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb70a68e8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb714e778"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0xb70a6dc0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0xb71505b8"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0xb714a8d8"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0xb70a3868"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb7148e08"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb70a23f0"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb70a23f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb7084168"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb7099b80"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb70a2870"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb70a2870"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb7084a58"/></to>
    </wire>
    <wire loc="332:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0xb711ace8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0xb7138168"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0xb711b578"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb7117998"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0xb70a4030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0xb70a4468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb70856e8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb70845d8"/></to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb7084168"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb707ea10"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb707f450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb7087878"/></to>
    </wire>
    <wire loc="33:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb7087878"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6ffee60"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb70560a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb707f450"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0xb707db28"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0xb7044a80"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0xb7044a80"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0xb7039288"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0xb7057010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0xb7043010"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0xb7043010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0xb70397b8"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0xb7057448"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0xb7043508"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0xb7043508"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0xb7039cd0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0xb7042b80"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0xb7037880"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0xb7042178"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0xb7038d70"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0xb7042688"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0xb7037368"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb70364a8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7302268"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb7036be8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb731e420"/></to>
    </wire>
    <wire loc="34:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb6f640e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6ffd3c0"/></to>
    </wire>
    <wire loc="31:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6ffd3c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6f8f890"/></to>
    </wire>
    <wire loc="32:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6f79a58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6ff3928"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6ff3928"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6fdd230"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6feb360"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6fdb530"/></to>
    </wire>
    <wire loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb6ff0190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6fda258"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6fe1cd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb6fd7128"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6fe1cd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb6fd6d20"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6fe1cd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb6fd3950"/></to>
    </wire>
    <wire loc="27:/home/wsn/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6f8d078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6ff3928"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6f3f870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6f53168"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb6f52240"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb6f41a70"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb6f41a70"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xb72f1930"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb6f52c28"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb6f404c0"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb6f404c0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xb72fcf20"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb6f51660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb6f40ec8"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb6f40ec8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xb72fc528"/></to>
    </wire>
    <wire loc="44:SerialC.nc">
      <from><interface-ref name="SendToSerial" scoped="" ref="0xb6f27ae8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:SerialC.nc">
      <from><interface-ref name="SendToRadio" scoped="" ref="0xb6f26308"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb6ef9b28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6ef3bb8"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb6ef3bb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6e3ba60"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6ef3408"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6ee9290"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6eebba8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6e0f460"/></to>
    </wire>
    <wire loc="35:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6ee9290"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6e5c870"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xb6e15e30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6eeac60"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6e3f010"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xb6ee39a0"/></to>
    </wire>
    <wire loc="36:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xb6ee39a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6e5cca8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6e0fdf8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xb6ee75f0"/></to>
    </wire>
    <wire loc="37:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xb6ee75f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6e5a718"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6e5a718"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6611258"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6e5c870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6613390"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6e5cca8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb66137c8"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6610420"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6e9f890"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6e9f890"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6e93780"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb660d640"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6e9bb68"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6e9bb68"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6e91af0"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb660c050"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6e9a6b8"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6e9a6b8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6e8f6b8"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb660ba50"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb6e97280"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb6e97280"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb6e8d640"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0xb6e3e9a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xb6e11050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6debca8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6dd4d78"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6e00330"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6de7d20"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6de7d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6dcfe10"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6e00688"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6de5e70"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6de5e70"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb6dcdd28"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6e03ad8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6de8630"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6de8630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6dd0710"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6e02bf0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6de76a8"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6de76a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6dcf798"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6df9830"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6de3898"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6de3898"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6dc2978"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6e02558"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6de7010"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6de7010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6dcf100"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6dffaf0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6de3310"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6de3310"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6dc23f0"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6df21b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb6de3eb8"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6de3eb8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb6dc1010"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6e00d78"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6de4588"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6de4588"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6dcd010"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6df3b10"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb6de2600"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6de2600"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb6dc1728"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb6dec4a0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6dd9750"/></to>
    </wire>
    <wire loc="104:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6dd9750"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6db58c0"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6df8ea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6dd5130"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6dd5130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6db33a0"/></to>
    </wire>
    <wire loc="254:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6dd4d78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6b8b728"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb6ddc4d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb6db8580"/></to>
    </wire>
    <wire loc="345:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb6db8580"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb6a78a58"/></to>
    </wire>
    <wire loc="310:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6db33a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6ad1998"/></to>
    </wire>
    <wire loc="139:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6dcfe10"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6cbfef0"/></to>
    </wire>
    <wire loc="141:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb6dcdd28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6cc0850"/></to>
    </wire>
    <wire loc="136:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6dd0710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6cbf010"/></to>
    </wire>
    <wire loc="138:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6dcf798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6cbfb30"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6ddd0f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6dba218"/></to>
    </wire>
    <wire loc="343:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6dba218"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6a796f8"/></to>
    </wire>
    <wire loc="255:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6dc2978"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6b7ece0"/></to>
    </wire>
    <wire loc="137:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6dcf100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6cbf750"/></to>
    </wire>
    <wire loc="309:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6db58c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6aa1180"/></to>
    </wire>
    <wire loc="102:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6dd7b30"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6db7cd8"/></to>
    </wire>
    <wire loc="347:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6db7cd8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a72950"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6ddec68"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6dc1e18"/></to>
    </wire>
    <wire loc="344:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6dc1e18"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6a73208"/></to>
    </wire>
    <wire loc="288:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6dc23f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6b04628"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb6de5438"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb6dce538"/></to>
    </wire>
    <wire loc="143:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb6dce538"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb6cbe2e8"/></to>
    </wire>
    <wire loc="226:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6dc1010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb6b90010"/></to>
    </wire>
    <wire loc="140:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6dcd010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6cc1c28"/></to>
    </wire>
    <wire loc="264:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6dc1728"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb6b78b40"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6dd7638"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6db77e0"/></to>
    </wire>
    <wire loc="346:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6db77e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6a72458"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb6de5b18"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb6dcec18"/></to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb6dcec18"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb6cbe6c8"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6b8b728"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6b7d360"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb6a78a58"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb6a60b98"/></to>
    </wire>
    <wire loc="175:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0xb6dcb778"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6c73ce8"/></to>
    </wire>
    <wire loc="163:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0xb6dc3ed0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6cadd40"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6cadd40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6574a50"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6cbfef0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb65afa68"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6cbf010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb65b0b20"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6cbfb30"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb65af6a8"/></to>
    </wire>
    <wire loc="176:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xb6dbc098"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb6bdaf10"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xb6bdaf10"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb6538d50"/></to>
    </wire>
    <wire loc="177:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0xb6dbcbf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6c74c68"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6a796f8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6a61838"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6b7ece0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb64f38c0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6cc0850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb65b03f0"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6cbf750"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb65af2c8"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6aa1180"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb64a0610"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a72950"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb69cdb48"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6a73208"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6a5c3d8"/></to>
    </wire>
    <wire loc="173:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0xb6dc6ab8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xb6c73318"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb6cbe2e8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb65afe48"/></to>
    </wire>
    <wire loc="117:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6b90010"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0xb6b8e390"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6b78b40"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb64ede78"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6cc1c28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb65b1788"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6ad1998"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb64a5e38"/></to>
    </wire>
    <wire loc="174:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0xb6dcb328"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xb6c739d0"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6a72458"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6a5b680"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb6cbe6c8"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb65ad248"/></to>
    </wire>
    <wire loc="116:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6d7cd18"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6bdb530"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6bdb530"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6539340"/></to>
    </wire>
    <wire loc="117:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6d77270"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6d40918"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6d73ef8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6aa1180"/></to>
    </wire>
    <wire loc="119:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0xb6d73530"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6a7ac88"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6a7ac88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6a63e70"/></to>
    </wire>
    <wire loc="124:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6d3f7a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6a70428"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6a70428"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb69ce030"/></to>
    </wire>
    <wire loc="125:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6d3f010"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6da6a98"/></to>
    </wire>
    <wire loc="131:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6cbda80"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb6d8b500"/></to>
    </wire>
    <wire loc="132:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6cbd250"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0xb6cb8718"/></to>
    </wire>
    <wire loc="133:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6cbd748"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0xb6c34528"/></to>
    </wire>
    <wire loc="134:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6cbea40"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0xb6c34860"/></to>
    </wire>
    <wire loc="152:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6cb7150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6cadd40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6cb8c40"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0xb6c34030"/></to>
    </wire>
    <wire loc="168:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6c58070"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6bdb530"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6c56250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xb6c51050"/></to>
    </wire>
    <wire loc="170:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6c56748"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xb6c51548"/></to>
    </wire>
    <wire loc="171:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6c57a30"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb6c51880"/></to>
    </wire>
    <wire loc="185:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6c32050"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6bd4d18"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6bd4d18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb650c790"/></to>
    </wire>
    <wire loc="186:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6c32548"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6bd8170"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6bd8170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6537f10"/></to>
    </wire>
    <wire loc="187:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6c32880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6bd9948"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6bd9948"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6537778"/></to>
    </wire>
    <wire loc="193:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6bd84d8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6b906a8"/></to>
    </wire>
    <wire loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6b906a8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6b8f6c8"/></to>
    </wire>
    <wire loc="197:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6bd8c70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6b97c58"/></to>
    </wire>
    <wire loc="114:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6b97c58"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6b8f390"/></to>
    </wire>
    <wire loc="220:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6b99010"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0xb6d97410"/></to>
    </wire>
    <wire loc="221:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6bd2678"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6b97760"/></to>
    </wire>
    <wire loc="113:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6b97760"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6b90e70"/></to>
    </wire>
    <wire loc="230:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6b8fe40"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6b04628"/></to>
    </wire>
    <wire loc="232:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6b90e70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6b8bd00"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6b8bd00"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6b7d938"/></to>
    </wire>
    <wire loc="233:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6b8f390"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6b7e250"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6b7e250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6b7de30"/></to>
    </wire>
    <wire loc="234:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6b8f6c8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6b7e568"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6b7e568"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6b7c1b0"/></to>
    </wire>
    <wire loc="250:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb6b7d360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6b79d20"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6b79d20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb64f0c88"/></to>
    </wire>
    <wire loc="251:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6b7d938"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6b78330"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6b78330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb64ed668"/></to>
    </wire>
    <wire loc="252:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6b7de30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6b78828"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6b78828"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb64edb60"/></to>
    </wire>
    <wire loc="253:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6b7c1b0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6a9f7f0"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6a9f7f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb649fca8"/></to>
    </wire>
    <wire loc="260:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6b3bda0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6b36010"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6b36010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb64ce9f8"/></to>
    </wire>
    <wire loc="261:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6b3a310"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6bd2230"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6bd2230"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb650cc68"/></to>
    </wire>
    <wire loc="262:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6b3b628"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6a85220"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6a85220"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb6a81010"/></to>
    </wire>
    <wire loc="263:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6b3b070"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6da6a98"/></to>
    </wire>
    <wire loc="268:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6bd2b70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6b364e8"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6b364e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb64ceed0"/></to>
    </wire>
    <wire loc="277:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6b14928"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb6d93198"/></to>
    </wire>
    <wire loc="278:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6b36930"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6b05cf8"/></to>
    </wire>
    <wire loc="279:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6b36e28"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6b04230"/></to>
    </wire>
    <wire loc="280:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6b14270"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6d40918"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="286:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0xb6aea4f0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6a87eb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="287:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6aeb458"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6d40918"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6aebb10"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb6d9bcf8"/></to>
    </wire>
    <wire loc="293:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6b04b50"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6adbde0"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6adbde0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6ad7cc8"/></to>
    </wire>
    <wire loc="294:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6aeb060"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6ada310"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6ada310"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6ad6250"/></to>
    </wire>
    <wire loc="299:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6ad5250"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xb6d8a488"/></to>
    </wire>
    <wire loc="300:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6ad7cc8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6a85998"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6a85998"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6a81828"/></to>
    </wire>
    <wire loc="301:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6ad6250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6a85e70"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6a85e70"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6a81d20"/></to>
    </wire>
    <wire loc="302:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0xb6ad6668"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb6a7a820"/></to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6a7a820"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb6a63a08"/></to>
    </wire>
    <wire loc="307:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a9e078"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a72950"/></to>
    </wire>
    <wire loc="308:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6a9e8f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6a9a4a0"/></to>
    </wire>
    <wire loc="311:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0xb6a9d098"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6a87eb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6a9ac68"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6a7ac88"/></to>
    </wire>
    <wire loc="326:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6a80d20"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xb6d8a488"/></to>
    </wire>
    <wire loc="327:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6a81828"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6a7de40"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6a7de40"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6a63060"/></to>
    </wire>
    <wire loc="328:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6a81d20"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6a7a3d0"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6a7a3d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6a635b8"/></to>
    </wire>
    <wire loc="329:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0xb6a81010"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6a7d668"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6a7d668"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6a64858"/></to>
    </wire>
    <wire loc="341:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6a6fec0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0xb6da0a18"/></to>
    </wire>
    <wire loc="342:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6a6e898"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6aa1180"/></to>
    </wire>
    <wire loc="349:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6a6b0e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6a87eb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0xb6a6b778"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6a87eb8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="351:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6a6be38"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6a87eb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="352:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6a6a498"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6d40918"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="353:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6a6ab78"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6da6a98"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6d40918"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb65c0608"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb65c0e00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6d3f7a8"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb65be7d8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6d3f010"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb65ab010"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6cd0820"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb65ad5c0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6cbea40"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb65add58"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6cbd250"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb65ac330"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6cbd748"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb65ac668"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6cbda80"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb6c76490"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb65721e8"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb6c76898"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb65725f0"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb6572ab0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb6c76d48"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb6572ed8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb65759d8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb65714e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6536278"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6cd0820"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6536850"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6bd84d8"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6535010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6bd8c70"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb6508310"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb6bb5010"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb6bb5010"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb6bb2010"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb65089a8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb6507e88"/></to>
    </wire>
    <wire loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb6507e88"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb6bb2a38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb65093e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6bd2678"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb65098d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6bd2b70"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0xb6509cd0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6b99010"/></to>
    </wire>
    <wire loc="118:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0xb6b8ea68"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6b8fe40"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb64ecb18"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6b3b070"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb64ec3a0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6b3b628"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb64eb150"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6b3bda0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb64eb628"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6b3a310"/></to>
    </wire>
    <wire loc="189:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0xb64ebe98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0xb64ea320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0xb64eba60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb64cc330"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6b36930"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb64ca728"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6b14928"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb64cc828"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6b36e28"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb64ccc20"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6b14270"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb64ca310"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6b13478"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb6b13478"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6b0fec8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0xb64cad20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xb6b11b58"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xb6b0f608"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6b16910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6b0f0e8"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6ae48a0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6ad8698"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6ada708"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb6ad6668"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6adb668"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb6ad74b0"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6adab00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6ad6a80"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6ad8330"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6ad5250"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb6adb350"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0xb6ad7178"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb6ae4e58"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0xb6ad8c70"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb649dd38"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6a9e8f0"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb649eb88"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a9e078"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb649d4c0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6aa55d8"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6aa55d8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6eebba8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0xb649e520"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0xb6a9d098"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6a86450"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6a821a0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6a83290"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb6a80170"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6a83688"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6a80588"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6a83e20"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6a80d20"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb6a86ee0"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0xb6a82c70"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb6a86a08"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0xb6a82778"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb69ce030"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb68ebe08"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6a76e28"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6a5d010"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb69cdb48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb68c2778"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6a539f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6a6fec0"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6a50288"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6a6b0e0"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0xb6a50920"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0xb6a6b778"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6a4e010"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6a6be38"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6a4e818"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6a6e898"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6a53088"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb69cdb48"/></to>
    </wire>
    <wire loc="102:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6a4b630"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6a6a498"/></to>
    </wire>
    <wire loc="104:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb6a5ba98"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0xb69d4b08"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb69d4b08"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb72ed750"/></to>
    </wire>
    <wire loc="105:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb6a595b8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0xb69d15b8"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb69d15b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb69b4c50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb6a55b40"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb69d1cc0"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb69d1cc0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb69bce48"/></to>
    </wire>
    <wire loc="108:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb6a58210"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0xb69d03d0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb69d03d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xb72e8010"/></to>
    </wire>
    <wire loc="109:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb6a58bf8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xb69d0db8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb69d0db8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xb72ee2f0"/></to>
    </wire>
    <wire loc="111:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb6a52d50"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb69cf820"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb69cf820"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb69cb980"/></to>
    </wire>
    <wire loc="112:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6a4b010"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6a6ab78"/></to>
    </wire>
    <wire loc="113:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb6a4f588"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb68bfc20"/></to>
    </wire>
    <wire loc="856:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0xb69f7910"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb68ebe08"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb645bac0"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb69bce48"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb69b3520"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb68c2778"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb68b0988"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0xb69c6358"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xb72dea98"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0xb69c6d58"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xb72df670"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb69c8590"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6941348"/></to>
    </wire>
    <wire loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb6941348"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6936b28"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb69b4500"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb69b3b38"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb69bcaa0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb69b3198"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb69cad98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb69bad80"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb69b4c50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb694b198"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb694b198"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6473d38"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb694a208"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb69b22d8"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xb69a11c8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xb69b9e40"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xb69b9e40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xb69781c8"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb69b1a98"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb731e420"/></to>
    </wire>
    <wire loc="294:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xb698e390"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xb6972898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb731e420"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb6976010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb72ed750"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb69769e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xb72ec210"/></to>
    </wire>
    <wire loc="88:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xb69754a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xb72ecc08"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xb6975e88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xb72eb670"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb694b8d8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb6472490"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb694bce0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb6472898"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb6472d58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb694a208"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb6471250"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb6475d00"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb6471848"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6942610"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6937d78"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6945328"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb693c9c0"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb693e538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb6933a80"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb693e538"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb69316a0"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb693e538"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb692e340"/></to>
    </wire>
    <wire loc="43:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xb6455548"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6945328"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xb64537e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb693e538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/wsn/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb68e5de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6945328"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb68af360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb68bc7f0"/></to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb68b2ae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb68be868"/></to>
    </wire>
    <wire loc="31:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb68be868"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb68b9a68"/></to>
    </wire>
    <wire loc="32:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb68b8c48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6945328"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb643ab50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6430228"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6437230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6e00688"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb64378c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6e00d78"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb6831870"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb64364f0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb64364f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6dffaf0"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb64308f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6865100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb642f010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6e00d78"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6865100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb683b010"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb683b780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6e03ad8"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb683be28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6e00d78"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb683aa50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6e00688"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0xb6839190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0xb68395c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb682e5d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6e00688"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb682ec70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6e00d78"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/wsn/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7333010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7333010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0xb73335e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wsn/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wsn/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialC" loc="6:SerialC.nc">
      <module/>
    </component>
    <component qname="SerialAppC.Timer0" loc="44(SerialAppC.Timer0):/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb6ede330"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC.TaskletC" loc="42(RF230RadioC.TaskletC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <instance number="0">
        <component-ref qname="TaskletC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="50(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7335db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7335db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/wsn/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="SerialAppC.AMSenderC" loc="47(SerialAppC.AMSenderC):/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:44">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialAppC.AMSenderC.SenderC" loc="47(SerialAppC.AMSenderC.SenderC):/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SerialAppC.AMSenderC.SenderC.AMQueueEntryP):/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAppC.AMReceiverC" loc="43(SerialAppC.AMReceiverC):/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:44">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb72cc5d8" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb72cc7f0" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb72cca08" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb72c49e0" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb72c4c08" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb72c4e30" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb72c1030" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7272088" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb72722b0" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb72724d8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb72726c8" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb6f8c348" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6f8c348"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xb6f8c568" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb6f90ee0" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb6f90ee0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb6f82348" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6f82348"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb6f73488" loc="55:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb6f73488"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb6f738e8" loc="56:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb6f738e8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb6f73b50" loc="57:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb6f73b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb6f72010" loc="58:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb6f72010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb6f72278" loc="59:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xb6f72700" loc="60:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xb6f72700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb6ede330" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb6ede330"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb6ede4f0" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb6ed95d0" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb6ed95d0"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb6ed9790" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6eec6e0" loc="46:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6eec6e0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6e3dd00" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6e3dd00"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb6e3dee0" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6e0d3e8" loc="46:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6e0d3e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TaskletC" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb6cab4c0" loc="83:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0xb6ca2298" loc="42:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb68e7f10" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb68e7f10"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb68df378" loc="52:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb68df378"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xb68df538" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/wsn/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb687f790" loc="47:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb68763a0" loc="47:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb6874e40" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xb6863600" loc="45:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb6830b40" loc="43:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0xb730d010" loc="58:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb730d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb730d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb730b320" loc="57:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb730b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb730b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb73029c8" loc="52:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb73029c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7302ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb730d908" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb730d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb730dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7302268" loc="50:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7302268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7302440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7302520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7302600"/>
        <function-ref name="actualMicro" scoped="" ref="0xb73026e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb73027c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb7300218" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xb7300218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb73003f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7309d58" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7309d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7300010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xb7300620" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xb7300620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb73007f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7308a00" loc="41:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7308a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7308bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7308630" loc="40:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7308630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7308808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb72f8588" loc="45:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb72f8588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72f8760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xb72f5b10" loc="44:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xb72f5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72f5ce8"/>
        <function-ref name="isInput" scoped="" ref="0xb72f5dc8"/>
        <function-ref name="toggle" scoped="" ref="0xb72f5ea8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72f8010"/>
        <function-ref name="get" scoped="" ref="0xb72f80f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72f81d0"/>
        <function-ref name="set" scoped="" ref="0xb72f82b0"/>
        <function-ref name="clr" scoped="" ref="0xb72f8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb72fd5a0" loc="43:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb72fd5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72fd778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xb72d2210" loc="98:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xb72d2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d25e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72d26c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72d27a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d2888"/>
        <function-ref name="get" scoped="" ref="0xb72d2968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d2a48"/>
        <function-ref name="set" scoped="" ref="0xb72d2b28"/>
        <function-ref name="clr" scoped="" ref="0xb72d2c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xb72e2750" loc="72:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xb72e2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e2928"/>
        <function-ref name="isInput" scoped="" ref="0xb72e2a08"/>
        <function-ref name="toggle" scoped="" ref="0xb72e2ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e2bc8"/>
        <function-ref name="get" scoped="" ref="0xb72e2ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e2d88"/>
        <function-ref name="set" scoped="" ref="0xb72e2e68"/>
        <function-ref name="clr" scoped="" ref="0xb72e1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xb72dbce8" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xb72dbce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72dbec0"/>
        <function-ref name="isInput" scoped="" ref="0xb72da010"/>
        <function-ref name="toggle" scoped="" ref="0xb72da0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72da1d0"/>
        <function-ref name="get" scoped="" ref="0xb72da2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72da390"/>
        <function-ref name="set" scoped="" ref="0xb72da470"/>
        <function-ref name="clr" scoped="" ref="0xb72da550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xb72d6ea8" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xb72d6ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d50c0"/>
        <function-ref name="isInput" scoped="" ref="0xb72d51a0"/>
        <function-ref name="toggle" scoped="" ref="0xb72d5280"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d5360"/>
        <function-ref name="get" scoped="" ref="0xb72d5440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d5520"/>
        <function-ref name="set" scoped="" ref="0xb72d5600"/>
        <function-ref name="clr" scoped="" ref="0xb72d56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0xb72cf750" loc="103:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0xb72cf750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72cf928"/>
        <function-ref name="isInput" scoped="" ref="0xb72cfa08"/>
        <function-ref name="toggle" scoped="" ref="0xb72cfae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72cfbc8"/>
        <function-ref name="get" scoped="" ref="0xb72cfca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72cfd88"/>
        <function-ref name="set" scoped="" ref="0xb72cfe68"/>
        <function-ref name="clr" scoped="" ref="0xb72ce010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xb72ee2f0" loc="50:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xb72ee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72ee4c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72ee5a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72ee688"/>
        <function-ref name="isOutput" scoped="" ref="0xb72ee768"/>
        <function-ref name="get" scoped="" ref="0xb72ee848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ee928"/>
        <function-ref name="set" scoped="" ref="0xb72eea08"/>
        <function-ref name="clr" scoped="" ref="0xb72eeae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xb72d7a98" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xb72d7a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d7c70"/>
        <function-ref name="isInput" scoped="" ref="0xb72d7d50"/>
        <function-ref name="toggle" scoped="" ref="0xb72d7e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d7f10"/>
        <function-ref name="get" scoped="" ref="0xb72d6010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d60f0"/>
        <function-ref name="set" scoped="" ref="0xb72d61d0"/>
        <function-ref name="clr" scoped="" ref="0xb72d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xb72ed750" loc="53:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xb72ed750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72ed928"/>
        <function-ref name="isInput" scoped="" ref="0xb72eda08"/>
        <function-ref name="toggle" scoped="" ref="0xb72edae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72edbc8"/>
        <function-ref name="get" scoped="" ref="0xb72edca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72edd88"/>
        <function-ref name="set" scoped="" ref="0xb72ede68"/>
        <function-ref name="clr" scoped="" ref="0xb72ec010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xb72e7ea8" loc="64:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xb72e7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e60c0"/>
        <function-ref name="isInput" scoped="" ref="0xb72e61a0"/>
        <function-ref name="toggle" scoped="" ref="0xb72e6280"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e6360"/>
        <function-ref name="get" scoped="" ref="0xb72e6440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e6520"/>
        <function-ref name="set" scoped="" ref="0xb72e6600"/>
        <function-ref name="clr" scoped="" ref="0xb72e66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xb72df670" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xb72df670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72df848"/>
        <function-ref name="isInput" scoped="" ref="0xb72df928"/>
        <function-ref name="toggle" scoped="" ref="0xb72dfa08"/>
        <function-ref name="isOutput" scoped="" ref="0xb72dfae8"/>
        <function-ref name="get" scoped="" ref="0xb72dfbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72dfca8"/>
        <function-ref name="set" scoped="" ref="0xb72dfd88"/>
        <function-ref name="clr" scoped="" ref="0xb72dfe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xb72d9c08" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xb72d9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d9de0"/>
        <function-ref name="isInput" scoped="" ref="0xb72d9ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb72d8010"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d80f0"/>
        <function-ref name="get" scoped="" ref="0xb72d81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d82b0"/>
        <function-ref name="set" scoped="" ref="0xb72d8390"/>
        <function-ref name="clr" scoped="" ref="0xb72d8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xb72fcf20" loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xb72fcf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72f1110"/>
        <function-ref name="isInput" scoped="" ref="0xb72f11f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72f12d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72f13b0"/>
        <function-ref name="get" scoped="" ref="0xb72f1490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72f1570"/>
        <function-ref name="set" scoped="" ref="0xb72f1650"/>
        <function-ref name="clr" scoped="" ref="0xb72f1730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xb72eb670" loc="56:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xb72eb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72eb848"/>
        <function-ref name="isInput" scoped="" ref="0xb72eb928"/>
        <function-ref name="toggle" scoped="" ref="0xb72eba08"/>
        <function-ref name="isOutput" scoped="" ref="0xb72ebae8"/>
        <function-ref name="get" scoped="" ref="0xb72ebbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ebca8"/>
        <function-ref name="set" scoped="" ref="0xb72ebd88"/>
        <function-ref name="clr" scoped="" ref="0xb72ebe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xb72e5ce8" loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xb72e5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e5ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb72e4010"/>
        <function-ref name="toggle" scoped="" ref="0xb72e40f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e41d0"/>
        <function-ref name="get" scoped="" ref="0xb72e42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e4390"/>
        <function-ref name="set" scoped="" ref="0xb72e4470"/>
        <function-ref name="clr" scoped="" ref="0xb72e4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xb72dd4b0" loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xb72dd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72dd688"/>
        <function-ref name="isInput" scoped="" ref="0xb72dd768"/>
        <function-ref name="toggle" scoped="" ref="0xb72dd848"/>
        <function-ref name="isOutput" scoped="" ref="0xb72dd928"/>
        <function-ref name="get" scoped="" ref="0xb72dda08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ddae8"/>
        <function-ref name="set" scoped="" ref="0xb72ddbc8"/>
        <function-ref name="clr" scoped="" ref="0xb72ddca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xb72d4ce8" loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xb72d4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d4ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb72d3010"/>
        <function-ref name="toggle" scoped="" ref="0xb72d30f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d31d0"/>
        <function-ref name="get" scoped="" ref="0xb72d32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d3390"/>
        <function-ref name="set" scoped="" ref="0xb72d3470"/>
        <function-ref name="clr" scoped="" ref="0xb72d3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xb72d02f0" loc="101:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xb72d02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d04c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72d05a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72d0688"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d0768"/>
        <function-ref name="get" scoped="" ref="0xb72d0848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d0928"/>
        <function-ref name="set" scoped="" ref="0xb72d0a08"/>
        <function-ref name="clr" scoped="" ref="0xb72d0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xb72dc8e0" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xb72dc8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72dcab8"/>
        <function-ref name="isInput" scoped="" ref="0xb72dcb98"/>
        <function-ref name="toggle" scoped="" ref="0xb72dcc78"/>
        <function-ref name="isOutput" scoped="" ref="0xb72dcd58"/>
        <function-ref name="get" scoped="" ref="0xb72dce38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72dcf18"/>
        <function-ref name="set" scoped="" ref="0xb72db010"/>
        <function-ref name="clr" scoped="" ref="0xb72db0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xb72f0dc8" loc="48:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xb72f0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72ef010"/>
        <function-ref name="isInput" scoped="" ref="0xb72ef0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72ef1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72ef2b0"/>
        <function-ref name="get" scoped="" ref="0xb72ef390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ef470"/>
        <function-ref name="set" scoped="" ref="0xb72ef550"/>
        <function-ref name="clr" scoped="" ref="0xb72ef630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xb72e9590" loc="59:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xb72e9590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e9768"/>
        <function-ref name="isInput" scoped="" ref="0xb72e9848"/>
        <function-ref name="toggle" scoped="" ref="0xb72e9928"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e9a08"/>
        <function-ref name="get" scoped="" ref="0xb72e9ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e9bc8"/>
        <function-ref name="set" scoped="" ref="0xb72e9ca8"/>
        <function-ref name="clr" scoped="" ref="0xb72e9d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xb72d2e08" loc="99:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xb72d2e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d1010"/>
        <function-ref name="isInput" scoped="" ref="0xb72d10f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72d11d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d12b0"/>
        <function-ref name="get" scoped="" ref="0xb72d1390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d1470"/>
        <function-ref name="set" scoped="" ref="0xb72d1550"/>
        <function-ref name="clr" scoped="" ref="0xb72d1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xb72e8a08" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xb72e8a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e8be0"/>
        <function-ref name="isInput" scoped="" ref="0xb72e8cc0"/>
        <function-ref name="toggle" scoped="" ref="0xb72e8da0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e8e80"/>
        <function-ref name="get" scoped="" ref="0xb72e7010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e70f0"/>
        <function-ref name="set" scoped="" ref="0xb72e71d0"/>
        <function-ref name="clr" scoped="" ref="0xb72e72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xb72e1210" loc="73:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xb72e1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e13e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72e14c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72e15a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e1688"/>
        <function-ref name="get" scoped="" ref="0xb72e1768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e1848"/>
        <function-ref name="set" scoped="" ref="0xb72e1928"/>
        <function-ref name="clr" scoped="" ref="0xb72e1a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xb72da750" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xb72da750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72da928"/>
        <function-ref name="isInput" scoped="" ref="0xb72daa08"/>
        <function-ref name="toggle" scoped="" ref="0xb72daae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72dabc8"/>
        <function-ref name="get" scoped="" ref="0xb72daca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72dad88"/>
        <function-ref name="set" scoped="" ref="0xb72dae68"/>
        <function-ref name="clr" scoped="" ref="0xb72d9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xb72d58e0" loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xb72d58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d5ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb72d5b98"/>
        <function-ref name="toggle" scoped="" ref="0xb72d5c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d5d58"/>
        <function-ref name="get" scoped="" ref="0xb72d5e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d5f18"/>
        <function-ref name="set" scoped="" ref="0xb72d4010"/>
        <function-ref name="clr" scoped="" ref="0xb72d40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xb72eece8" loc="51:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xb72eece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72eeec0"/>
        <function-ref name="isInput" scoped="" ref="0xb72ed010"/>
        <function-ref name="toggle" scoped="" ref="0xb72ed0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72ed1d0"/>
        <function-ref name="get" scoped="" ref="0xb72ed2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ed390"/>
        <function-ref name="set" scoped="" ref="0xb72ed470"/>
        <function-ref name="clr" scoped="" ref="0xb72ed550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xb72ec210" loc="54:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xb72ec210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72ec3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72ec4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72ec5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72ec688"/>
        <function-ref name="get" scoped="" ref="0xb72ec768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ec848"/>
        <function-ref name="set" scoped="" ref="0xb72ec928"/>
        <function-ref name="clr" scoped="" ref="0xb72eca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xb72e68e0" loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xb72e68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e6ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb72e6b98"/>
        <function-ref name="toggle" scoped="" ref="0xb72e6c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e6d58"/>
        <function-ref name="get" scoped="" ref="0xb72e6e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e6f18"/>
        <function-ref name="set" scoped="" ref="0xb72e5010"/>
        <function-ref name="clr" scoped="" ref="0xb72e50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xb72de0a0" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xb72de0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72de278"/>
        <function-ref name="isInput" scoped="" ref="0xb72de358"/>
        <function-ref name="toggle" scoped="" ref="0xb72de438"/>
        <function-ref name="isOutput" scoped="" ref="0xb72de518"/>
        <function-ref name="get" scoped="" ref="0xb72de5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72de6d8"/>
        <function-ref name="set" scoped="" ref="0xb72de7b8"/>
        <function-ref name="clr" scoped="" ref="0xb72de898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xb72d8670" loc="87:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xb72d8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d8848"/>
        <function-ref name="isInput" scoped="" ref="0xb72d8928"/>
        <function-ref name="toggle" scoped="" ref="0xb72d8a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d8ae8"/>
        <function-ref name="get" scoped="" ref="0xb72d8bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d8ca8"/>
        <function-ref name="set" scoped="" ref="0xb72d8d88"/>
        <function-ref name="clr" scoped="" ref="0xb72d8e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xb72f1930" loc="46:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xb72f1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72f1b08"/>
        <function-ref name="isInput" scoped="" ref="0xb72f1be8"/>
        <function-ref name="toggle" scoped="" ref="0xb72f1cc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72f1da8"/>
        <function-ref name="get" scoped="" ref="0xb72f1e88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72f0010"/>
        <function-ref name="set" scoped="" ref="0xb72f00f0"/>
        <function-ref name="clr" scoped="" ref="0xb72f01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xb72ea0a0" loc="57:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xb72ea0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72ea2f8"/>
        <function-ref name="isInput" scoped="" ref="0xb72ea3d8"/>
        <function-ref name="toggle" scoped="" ref="0xb72ea4b8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72ea598"/>
        <function-ref name="get" scoped="" ref="0xb72ea678"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ea758"/>
        <function-ref name="set" scoped="" ref="0xb72ea838"/>
        <function-ref name="clr" scoped="" ref="0xb72ea918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xb72e4750" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xb72e4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e4928"/>
        <function-ref name="isInput" scoped="" ref="0xb72e4a08"/>
        <function-ref name="toggle" scoped="" ref="0xb72e4ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e4bc8"/>
        <function-ref name="get" scoped="" ref="0xb72e4ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e4d88"/>
        <function-ref name="set" scoped="" ref="0xb72e4e68"/>
        <function-ref name="clr" scoped="" ref="0xb72e3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xb72d3750" loc="96:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xb72d3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d3928"/>
        <function-ref name="isInput" scoped="" ref="0xb72d3a08"/>
        <function-ref name="toggle" scoped="" ref="0xb72d3ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d3bc8"/>
        <function-ref name="get" scoped="" ref="0xb72d3ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d3d88"/>
        <function-ref name="set" scoped="" ref="0xb72d3e68"/>
        <function-ref name="clr" scoped="" ref="0xb72d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xb72e3c08" loc="71:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xb72e3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e3ee0"/>
        <function-ref name="isInput" scoped="" ref="0xb72e2010"/>
        <function-ref name="toggle" scoped="" ref="0xb72e20f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e21d0"/>
        <function-ref name="get" scoped="" ref="0xb72e22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e2390"/>
        <function-ref name="set" scoped="" ref="0xb72e2470"/>
        <function-ref name="clr" scoped="" ref="0xb72e2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xb72db2f0" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xb72db2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72db4c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72db5a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72db688"/>
        <function-ref name="isOutput" scoped="" ref="0xb72db768"/>
        <function-ref name="get" scoped="" ref="0xb72db848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72db928"/>
        <function-ref name="set" scoped="" ref="0xb72dba08"/>
        <function-ref name="clr" scoped="" ref="0xb72dbae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xb72d64b0" loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xb72d64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d6688"/>
        <function-ref name="isInput" scoped="" ref="0xb72d6768"/>
        <function-ref name="toggle" scoped="" ref="0xb72d6848"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d6928"/>
        <function-ref name="get" scoped="" ref="0xb72d6a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d6ae8"/>
        <function-ref name="set" scoped="" ref="0xb72d6bc8"/>
        <function-ref name="clr" scoped="" ref="0xb72d6ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xb72d0ce8" loc="102:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xb72d0ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d0ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb72cf010"/>
        <function-ref name="toggle" scoped="" ref="0xb72cf0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72cf1d0"/>
        <function-ref name="get" scoped="" ref="0xb72cf2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72cf390"/>
        <function-ref name="set" scoped="" ref="0xb72cf470"/>
        <function-ref name="clr" scoped="" ref="0xb72cf550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xb72ef830" loc="49:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xb72ef830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72efa08"/>
        <function-ref name="isInput" scoped="" ref="0xb72efae8"/>
        <function-ref name="toggle" scoped="" ref="0xb72efbc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72efca8"/>
        <function-ref name="get" scoped="" ref="0xb72efd88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72efe68"/>
        <function-ref name="set" scoped="" ref="0xb72ee010"/>
        <function-ref name="clr" scoped="" ref="0xb72ee0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xb72e8010" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xb72e8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e81e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72e82c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72e83a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e8488"/>
        <function-ref name="get" scoped="" ref="0xb72e8568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e8648"/>
        <function-ref name="set" scoped="" ref="0xb72e8728"/>
        <function-ref name="clr" scoped="" ref="0xb72e8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xb72d70a0" loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xb72d70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d7278"/>
        <function-ref name="isInput" scoped="" ref="0xb72d7358"/>
        <function-ref name="toggle" scoped="" ref="0xb72d7438"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d7518"/>
        <function-ref name="get" scoped="" ref="0xb72d75f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d76d8"/>
        <function-ref name="set" scoped="" ref="0xb72d77b8"/>
        <function-ref name="clr" scoped="" ref="0xb72d7898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xb72e74b0" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xb72e74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e7688"/>
        <function-ref name="isInput" scoped="" ref="0xb72e7768"/>
        <function-ref name="toggle" scoped="" ref="0xb72e7848"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e7928"/>
        <function-ref name="get" scoped="" ref="0xb72e7a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e7ae8"/>
        <function-ref name="set" scoped="" ref="0xb72e7bc8"/>
        <function-ref name="clr" scoped="" ref="0xb72e7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xb72e1c08" loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xb72e1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e1de0"/>
        <function-ref name="isInput" scoped="" ref="0xb72e1ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb72df010"/>
        <function-ref name="isOutput" scoped="" ref="0xb72df0f0"/>
        <function-ref name="get" scoped="" ref="0xb72df1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72df2b0"/>
        <function-ref name="set" scoped="" ref="0xb72df390"/>
        <function-ref name="clr" scoped="" ref="0xb72df470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xb72d9210" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xb72d9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d93e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72d94c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72d95a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d9688"/>
        <function-ref name="get" scoped="" ref="0xb72d9768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d9848"/>
        <function-ref name="set" scoped="" ref="0xb72d9928"/>
        <function-ref name="clr" scoped="" ref="0xb72d9a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xb72d42f0" loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xb72d42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d44c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72d45a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72d4688"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d4768"/>
        <function-ref name="get" scoped="" ref="0xb72d4848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d4928"/>
        <function-ref name="set" scoped="" ref="0xb72d4a08"/>
        <function-ref name="clr" scoped="" ref="0xb72d4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xb72fc528" loc="44:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xb72fc528"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72fc700"/>
        <function-ref name="isInput" scoped="" ref="0xb72fc7e0"/>
        <function-ref name="toggle" scoped="" ref="0xb72fc8c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72fc9a0"/>
        <function-ref name="get" scoped="" ref="0xb72fca80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72fcb60"/>
        <function-ref name="set" scoped="" ref="0xb72fcc40"/>
        <function-ref name="clr" scoped="" ref="0xb72fcd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xb72ecc08" loc="55:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xb72ecc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72ecde0"/>
        <function-ref name="isInput" scoped="" ref="0xb72ecec0"/>
        <function-ref name="toggle" scoped="" ref="0xb72eb010"/>
        <function-ref name="isOutput" scoped="" ref="0xb72eb0f0"/>
        <function-ref name="get" scoped="" ref="0xb72eb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72eb2b0"/>
        <function-ref name="set" scoped="" ref="0xb72eb390"/>
        <function-ref name="clr" scoped="" ref="0xb72eb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xb72e52f0" loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xb72e52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e54c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72e55a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72e5688"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e5768"/>
        <function-ref name="get" scoped="" ref="0xb72e5848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e5928"/>
        <function-ref name="set" scoped="" ref="0xb72e5a08"/>
        <function-ref name="clr" scoped="" ref="0xb72e5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xb72dea98" loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xb72dea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72dec70"/>
        <function-ref name="isInput" scoped="" ref="0xb72ded50"/>
        <function-ref name="toggle" scoped="" ref="0xb72dee30"/>
        <function-ref name="isOutput" scoped="" ref="0xb72def10"/>
        <function-ref name="get" scoped="" ref="0xb72dd010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72dd0f0"/>
        <function-ref name="set" scoped="" ref="0xb72dd1d0"/>
        <function-ref name="clr" scoped="" ref="0xb72dd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xb72d1830" loc="100:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xb72d1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d1a08"/>
        <function-ref name="isInput" scoped="" ref="0xb72d1ae8"/>
        <function-ref name="toggle" scoped="" ref="0xb72d1bc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d1ca8"/>
        <function-ref name="get" scoped="" ref="0xb72d1d88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d1e68"/>
        <function-ref name="set" scoped="" ref="0xb72d0010"/>
        <function-ref name="clr" scoped="" ref="0xb72d00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xb72ddea8" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xb72ddea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72dc0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb72dc1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb72dc280"/>
        <function-ref name="isOutput" scoped="" ref="0xb72dc360"/>
        <function-ref name="get" scoped="" ref="0xb72dc440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72dc520"/>
        <function-ref name="set" scoped="" ref="0xb72dc600"/>
        <function-ref name="clr" scoped="" ref="0xb72dc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xb72e3210" loc="69:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xb72e3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e33e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72e34c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72e35a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e3688"/>
        <function-ref name="get" scoped="" ref="0xb72e3768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e3848"/>
        <function-ref name="set" scoped="" ref="0xb72e3928"/>
        <function-ref name="clr" scoped="" ref="0xb72e3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xb72f03d0" loc="47:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xb72f03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72f05a8"/>
        <function-ref name="isInput" scoped="" ref="0xb72f0688"/>
        <function-ref name="toggle" scoped="" ref="0xb72f0768"/>
        <function-ref name="isOutput" scoped="" ref="0xb72f0848"/>
        <function-ref name="get" scoped="" ref="0xb72f0928"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72f0a08"/>
        <function-ref name="set" scoped="" ref="0xb72f0ae8"/>
        <function-ref name="clr" scoped="" ref="0xb72f0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xb72eab18" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xb72eab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72eacf0"/>
        <function-ref name="isInput" scoped="" ref="0xb72eadd0"/>
        <function-ref name="toggle" scoped="" ref="0xb72eaeb0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e9010"/>
        <function-ref name="get" scoped="" ref="0xb72e90f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e91d0"/>
        <function-ref name="set" scoped="" ref="0xb72e92b0"/>
        <function-ref name="clr" scoped="" ref="0xb72e9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb72a6d68" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb72a6d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a5010"/>
        <function-ref name="isInput" scoped="" ref="0xb72a50f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72a51d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a52b0"/>
        <function-ref name="get" scoped="" ref="0xb72a5390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a5470"/>
        <function-ref name="set" scoped="" ref="0xb72a5550"/>
        <function-ref name="clr" scoped="" ref="0xb72a5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb72a4ac8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb72a4ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a4ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb72a4d80"/>
        <function-ref name="toggle" scoped="" ref="0xb72a4e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a3010"/>
        <function-ref name="get" scoped="" ref="0xb72a30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a31d0"/>
        <function-ref name="set" scoped="" ref="0xb72a32b0"/>
        <function-ref name="clr" scoped="" ref="0xb72a3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb72a7a28" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb72a7a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a7c00"/>
        <function-ref name="isInput" scoped="" ref="0xb72a7ce0"/>
        <function-ref name="toggle" scoped="" ref="0xb72a7dc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a7ea0"/>
        <function-ref name="get" scoped="" ref="0xb72a6010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a60f0"/>
        <function-ref name="set" scoped="" ref="0xb72a61d0"/>
        <function-ref name="clr" scoped="" ref="0xb72a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb72a5790" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb72a5790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a5968"/>
        <function-ref name="isInput" scoped="" ref="0xb72a5a48"/>
        <function-ref name="toggle" scoped="" ref="0xb72a5b28"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a5c08"/>
        <function-ref name="get" scoped="" ref="0xb72a5ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a5dc8"/>
        <function-ref name="set" scoped="" ref="0xb72a5ea8"/>
        <function-ref name="clr" scoped="" ref="0xb72a4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb72a34f0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb72a34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a36c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72a37a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72a3888"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a3968"/>
        <function-ref name="get" scoped="" ref="0xb72a3a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a3b28"/>
        <function-ref name="set" scoped="" ref="0xb72a3c08"/>
        <function-ref name="clr" scoped="" ref="0xb72a3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb72a6410" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb72a6410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a65e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72a66c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72a67a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a6888"/>
        <function-ref name="get" scoped="" ref="0xb72a6968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a6a48"/>
        <function-ref name="set" scoped="" ref="0xb72a6b28"/>
        <function-ref name="clr" scoped="" ref="0xb72a6c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb72a4170" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb72a4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a4348"/>
        <function-ref name="isInput" scoped="" ref="0xb72a4428"/>
        <function-ref name="toggle" scoped="" ref="0xb72a4508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a45e8"/>
        <function-ref name="get" scoped="" ref="0xb72a46c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a47a8"/>
        <function-ref name="set" scoped="" ref="0xb72a4888"/>
        <function-ref name="clr" scoped="" ref="0xb72a4968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb72a3e48" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb72a3e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a1050"/>
        <function-ref name="isInput" scoped="" ref="0xb72a1130"/>
        <function-ref name="toggle" scoped="" ref="0xb72a1210"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a12f0"/>
        <function-ref name="get" scoped="" ref="0xb72a13d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a14b0"/>
        <function-ref name="set" scoped="" ref="0xb72a1590"/>
        <function-ref name="clr" scoped="" ref="0xb72a1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6808050" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6808050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6808228"/>
        <function-ref name="isInput" scoped="" ref="0xb6808308"/>
        <function-ref name="toggle" scoped="" ref="0xb68083e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb68084c8"/>
        <function-ref name="get" scoped="" ref="0xb68085a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6808688"/>
        <function-ref name="set" scoped="" ref="0xb6808768"/>
        <function-ref name="clr" scoped="" ref="0xb6808848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6807a08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6807a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6807be0"/>
        <function-ref name="isInput" scoped="" ref="0xb6807cc0"/>
        <function-ref name="toggle" scoped="" ref="0xb6807da0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6807e80"/>
        <function-ref name="get" scoped="" ref="0xb6806010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb68060f0"/>
        <function-ref name="set" scoped="" ref="0xb68061d0"/>
        <function-ref name="clr" scoped="" ref="0xb68062b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6805538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6805538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6805710"/>
        <function-ref name="isInput" scoped="" ref="0xb68057f0"/>
        <function-ref name="toggle" scoped="" ref="0xb68058d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb68059b0"/>
        <function-ref name="get" scoped="" ref="0xb6805a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6805b70"/>
        <function-ref name="set" scoped="" ref="0xb6805c50"/>
        <function-ref name="clr" scoped="" ref="0xb6805d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6803010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6803010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb68031e8"/>
        <function-ref name="isInput" scoped="" ref="0xb68032c8"/>
        <function-ref name="toggle" scoped="" ref="0xb68033a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6803488"/>
        <function-ref name="get" scoped="" ref="0xb6803568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6803648"/>
        <function-ref name="set" scoped="" ref="0xb6803728"/>
        <function-ref name="clr" scoped="" ref="0xb6803808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb68029e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb68029e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6802bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb6802ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb6802d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6802e60"/>
        <function-ref name="get" scoped="" ref="0xb6801010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb68010f0"/>
        <function-ref name="set" scoped="" ref="0xb68011d0"/>
        <function-ref name="clr" scoped="" ref="0xb68012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6800538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6800538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6800710"/>
        <function-ref name="isInput" scoped="" ref="0xb68007f0"/>
        <function-ref name="toggle" scoped="" ref="0xb68008d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb68009b0"/>
        <function-ref name="get" scoped="" ref="0xb6800a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6800b70"/>
        <function-ref name="set" scoped="" ref="0xb6800c50"/>
        <function-ref name="clr" scoped="" ref="0xb6800d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67fe010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67fe1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb67fe2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb67fe3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb67fe488"/>
        <function-ref name="get" scoped="" ref="0xb67fe568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67fe648"/>
        <function-ref name="set" scoped="" ref="0xb67fe728"/>
        <function-ref name="clr" scoped="" ref="0xb67fe808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67fd9e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67fd9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67fdbc0"/>
        <function-ref name="isInput" scoped="" ref="0xb67fdca0"/>
        <function-ref name="toggle" scoped="" ref="0xb67fdd80"/>
        <function-ref name="isOutput" scoped="" ref="0xb67fde60"/>
        <function-ref name="get" scoped="" ref="0xb67fc010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67fc0f0"/>
        <function-ref name="set" scoped="" ref="0xb67fc1d0"/>
        <function-ref name="clr" scoped="" ref="0xb67fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb729d6b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb729d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb729d888"/>
        <function-ref name="isInput" scoped="" ref="0xb729d968"/>
        <function-ref name="toggle" scoped="" ref="0xb729da48"/>
        <function-ref name="isOutput" scoped="" ref="0xb729db28"/>
        <function-ref name="get" scoped="" ref="0xb729dc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb729dce8"/>
        <function-ref name="set" scoped="" ref="0xb729ddc8"/>
        <function-ref name="clr" scoped="" ref="0xb729dea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb729b330" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb729b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb729b508"/>
        <function-ref name="isInput" scoped="" ref="0xb729b5e8"/>
        <function-ref name="toggle" scoped="" ref="0xb729b6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb729b7a8"/>
        <function-ref name="get" scoped="" ref="0xb729b888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb729b968"/>
        <function-ref name="set" scoped="" ref="0xb729ba48"/>
        <function-ref name="clr" scoped="" ref="0xb729bb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb729e3d8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb729e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb729e5b0"/>
        <function-ref name="isInput" scoped="" ref="0xb729e690"/>
        <function-ref name="toggle" scoped="" ref="0xb729e770"/>
        <function-ref name="isOutput" scoped="" ref="0xb729e850"/>
        <function-ref name="get" scoped="" ref="0xb729e930"/>
        <function-ref name="makeOutput" scoped="" ref="0xb729ea10"/>
        <function-ref name="set" scoped="" ref="0xb729eaf0"/>
        <function-ref name="clr" scoped="" ref="0xb729ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb729c030" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb729c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb729c208"/>
        <function-ref name="isInput" scoped="" ref="0xb729c2e8"/>
        <function-ref name="toggle" scoped="" ref="0xb729c3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb729c4a8"/>
        <function-ref name="get" scoped="" ref="0xb729c588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb729c668"/>
        <function-ref name="set" scoped="" ref="0xb729c748"/>
        <function-ref name="clr" scoped="" ref="0xb729c828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb729bc88" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb729bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb729be60"/>
        <function-ref name="isInput" scoped="" ref="0xb729a010"/>
        <function-ref name="toggle" scoped="" ref="0xb729a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb729a1d0"/>
        <function-ref name="get" scoped="" ref="0xb729a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb729a390"/>
        <function-ref name="set" scoped="" ref="0xb729a470"/>
        <function-ref name="clr" scoped="" ref="0xb729a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb729ed30" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb729ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb729ef08"/>
        <function-ref name="isInput" scoped="" ref="0xb729d010"/>
        <function-ref name="toggle" scoped="" ref="0xb729d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb729d1d0"/>
        <function-ref name="get" scoped="" ref="0xb729d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb729d390"/>
        <function-ref name="set" scoped="" ref="0xb729d470"/>
        <function-ref name="clr" scoped="" ref="0xb729d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb729c988" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb729c988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb729cb60"/>
        <function-ref name="isInput" scoped="" ref="0xb729cc40"/>
        <function-ref name="toggle" scoped="" ref="0xb729cd20"/>
        <function-ref name="isOutput" scoped="" ref="0xb729ce00"/>
        <function-ref name="get" scoped="" ref="0xb729cee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb729b010"/>
        <function-ref name="set" scoped="" ref="0xb729b0f0"/>
        <function-ref name="clr" scoped="" ref="0xb729b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb729a6b0" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb729a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb729a888"/>
        <function-ref name="isInput" scoped="" ref="0xb729a968"/>
        <function-ref name="toggle" scoped="" ref="0xb729aa48"/>
        <function-ref name="isOutput" scoped="" ref="0xb729ab28"/>
        <function-ref name="get" scoped="" ref="0xb729ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb729ace8"/>
        <function-ref name="set" scoped="" ref="0xb729adc8"/>
        <function-ref name="clr" scoped="" ref="0xb729aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67d4de8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67d4de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67d0010"/>
        <function-ref name="isInput" scoped="" ref="0xb67d00f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67d01d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67d02b0"/>
        <function-ref name="get" scoped="" ref="0xb67d0390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d0470"/>
        <function-ref name="set" scoped="" ref="0xb67d0550"/>
        <function-ref name="clr" scoped="" ref="0xb67d0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67cf7f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67cf7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67cf9d0"/>
        <function-ref name="isInput" scoped="" ref="0xb67cfab0"/>
        <function-ref name="toggle" scoped="" ref="0xb67cfb90"/>
        <function-ref name="isOutput" scoped="" ref="0xb67cfc70"/>
        <function-ref name="get" scoped="" ref="0xb67cfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67cfe30"/>
        <function-ref name="set" scoped="" ref="0xb67cff10"/>
        <function-ref name="clr" scoped="" ref="0xb67ce010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67cd228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67cd228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67cd400"/>
        <function-ref name="isInput" scoped="" ref="0xb67cd4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb67cd5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67cd6a0"/>
        <function-ref name="get" scoped="" ref="0xb67cd780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67cd860"/>
        <function-ref name="set" scoped="" ref="0xb67cd940"/>
        <function-ref name="clr" scoped="" ref="0xb67cda20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67ccc08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67ccc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67ccde0"/>
        <function-ref name="isInput" scoped="" ref="0xb67ccec0"/>
        <function-ref name="toggle" scoped="" ref="0xb67ca010"/>
        <function-ref name="isOutput" scoped="" ref="0xb67ca0f0"/>
        <function-ref name="get" scoped="" ref="0xb67ca1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67ca2b0"/>
        <function-ref name="set" scoped="" ref="0xb67ca390"/>
        <function-ref name="clr" scoped="" ref="0xb67ca470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67c96c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67c96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67c9898"/>
        <function-ref name="isInput" scoped="" ref="0xb67c9978"/>
        <function-ref name="toggle" scoped="" ref="0xb67c9a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb67c9b38"/>
        <function-ref name="get" scoped="" ref="0xb67c9c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67c9cf8"/>
        <function-ref name="set" scoped="" ref="0xb67c9dd8"/>
        <function-ref name="clr" scoped="" ref="0xb67c9eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67c70b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67c70b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67c7288"/>
        <function-ref name="isInput" scoped="" ref="0xb67c7368"/>
        <function-ref name="toggle" scoped="" ref="0xb67c7448"/>
        <function-ref name="isOutput" scoped="" ref="0xb67c7528"/>
        <function-ref name="get" scoped="" ref="0xb67c7608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67c76e8"/>
        <function-ref name="set" scoped="" ref="0xb67c77c8"/>
        <function-ref name="clr" scoped="" ref="0xb67c78a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67c6a88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67c6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67c6c60"/>
        <function-ref name="isInput" scoped="" ref="0xb67c6d40"/>
        <function-ref name="toggle" scoped="" ref="0xb67c6e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb67c6f00"/>
        <function-ref name="get" scoped="" ref="0xb67c5010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67c50f0"/>
        <function-ref name="set" scoped="" ref="0xb67c51d0"/>
        <function-ref name="clr" scoped="" ref="0xb67c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67c4538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67c4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67c4710"/>
        <function-ref name="isInput" scoped="" ref="0xb67c47f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67c48d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67c49b0"/>
        <function-ref name="get" scoped="" ref="0xb67c4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67c4b70"/>
        <function-ref name="set" scoped="" ref="0xb67c4c50"/>
        <function-ref name="clr" scoped="" ref="0xb67c4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7294170" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7294170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7294348"/>
        <function-ref name="isInput" scoped="" ref="0xb7294428"/>
        <function-ref name="toggle" scoped="" ref="0xb7294508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72945e8"/>
        <function-ref name="get" scoped="" ref="0xb72946c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72947a8"/>
        <function-ref name="set" scoped="" ref="0xb7294888"/>
        <function-ref name="clr" scoped="" ref="0xb7294968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7293e48" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7293e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7292050"/>
        <function-ref name="isInput" scoped="" ref="0xb7292130"/>
        <function-ref name="toggle" scoped="" ref="0xb7292210"/>
        <function-ref name="isOutput" scoped="" ref="0xb72922f0"/>
        <function-ref name="get" scoped="" ref="0xb72923d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72924b0"/>
        <function-ref name="set" scoped="" ref="0xb7292590"/>
        <function-ref name="clr" scoped="" ref="0xb7292670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7296dc8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7296dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7295010"/>
        <function-ref name="isInput" scoped="" ref="0xb72950f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72951d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72952b0"/>
        <function-ref name="get" scoped="" ref="0xb7295390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7295470"/>
        <function-ref name="set" scoped="" ref="0xb7295550"/>
        <function-ref name="clr" scoped="" ref="0xb7295630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7294ac8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7294ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7294ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7294d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7294e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7293010"/>
        <function-ref name="get" scoped="" ref="0xb72930f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72931d0"/>
        <function-ref name="set" scoped="" ref="0xb72932b0"/>
        <function-ref name="clr" scoped="" ref="0xb7293390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb72927d0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb72927d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72929a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7292a88"/>
        <function-ref name="toggle" scoped="" ref="0xb7292b68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7292c48"/>
        <function-ref name="get" scoped="" ref="0xb7292d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7292e08"/>
        <function-ref name="set" scoped="" ref="0xb7292ee8"/>
        <function-ref name="clr" scoped="" ref="0xb7291010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7295790" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7295790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7295968"/>
        <function-ref name="isInput" scoped="" ref="0xb7295a48"/>
        <function-ref name="toggle" scoped="" ref="0xb7295b28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7295c08"/>
        <function-ref name="get" scoped="" ref="0xb7295ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7295dc8"/>
        <function-ref name="set" scoped="" ref="0xb7295ea8"/>
        <function-ref name="clr" scoped="" ref="0xb7294010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb72934f0" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb72934f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72936c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72937a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7293888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7293968"/>
        <function-ref name="get" scoped="" ref="0xb7293a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7293b28"/>
        <function-ref name="set" scoped="" ref="0xb7293c08"/>
        <function-ref name="clr" scoped="" ref="0xb7293ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7291170" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7291170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7291348"/>
        <function-ref name="isInput" scoped="" ref="0xb7291428"/>
        <function-ref name="toggle" scoped="" ref="0xb7291508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72915e8"/>
        <function-ref name="get" scoped="" ref="0xb72916c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72917a8"/>
        <function-ref name="set" scoped="" ref="0xb7291888"/>
        <function-ref name="clr" scoped="" ref="0xb7291968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6798938" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6798938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6798b10"/>
        <function-ref name="isInput" scoped="" ref="0xb6798bf0"/>
        <function-ref name="toggle" scoped="" ref="0xb6798cd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6798db0"/>
        <function-ref name="get" scoped="" ref="0xb6798e90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6797010"/>
        <function-ref name="set" scoped="" ref="0xb67970f0"/>
        <function-ref name="clr" scoped="" ref="0xb67971d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67963b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67963b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6796588"/>
        <function-ref name="isInput" scoped="" ref="0xb6796668"/>
        <function-ref name="toggle" scoped="" ref="0xb6796748"/>
        <function-ref name="isOutput" scoped="" ref="0xb6796828"/>
        <function-ref name="get" scoped="" ref="0xb6796908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67969e8"/>
        <function-ref name="set" scoped="" ref="0xb6796ac8"/>
        <function-ref name="clr" scoped="" ref="0xb6796ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6795d70" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6795d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6794010"/>
        <function-ref name="isInput" scoped="" ref="0xb67940f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67941d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67942b0"/>
        <function-ref name="get" scoped="" ref="0xb6794390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6794470"/>
        <function-ref name="set" scoped="" ref="0xb6794550"/>
        <function-ref name="clr" scoped="" ref="0xb6794630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67937f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67937f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67939d0"/>
        <function-ref name="isInput" scoped="" ref="0xb6793ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb6793b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6793c70"/>
        <function-ref name="get" scoped="" ref="0xb6793d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6793e30"/>
        <function-ref name="set" scoped="" ref="0xb6793f10"/>
        <function-ref name="clr" scoped="" ref="0xb6792010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6791228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6791228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6791400"/>
        <function-ref name="isInput" scoped="" ref="0xb67914e0"/>
        <function-ref name="toggle" scoped="" ref="0xb67915c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67916a0"/>
        <function-ref name="get" scoped="" ref="0xb6791780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6791860"/>
        <function-ref name="set" scoped="" ref="0xb6791940"/>
        <function-ref name="clr" scoped="" ref="0xb6791a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6790c08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6790c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6790de0"/>
        <function-ref name="isInput" scoped="" ref="0xb6790ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb678f010"/>
        <function-ref name="isOutput" scoped="" ref="0xb678f0f0"/>
        <function-ref name="get" scoped="" ref="0xb678f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb678f2b0"/>
        <function-ref name="set" scoped="" ref="0xb678f390"/>
        <function-ref name="clr" scoped="" ref="0xb678f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb678e6c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb678e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb678e898"/>
        <function-ref name="isInput" scoped="" ref="0xb678e978"/>
        <function-ref name="toggle" scoped="" ref="0xb678ea58"/>
        <function-ref name="isOutput" scoped="" ref="0xb678eb38"/>
        <function-ref name="get" scoped="" ref="0xb678ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb678ecf8"/>
        <function-ref name="set" scoped="" ref="0xb678edd8"/>
        <function-ref name="clr" scoped="" ref="0xb678eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb678c0b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb678c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb678c288"/>
        <function-ref name="isInput" scoped="" ref="0xb678c368"/>
        <function-ref name="toggle" scoped="" ref="0xb678c448"/>
        <function-ref name="isOutput" scoped="" ref="0xb678c528"/>
        <function-ref name="get" scoped="" ref="0xb678c608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb678c6e8"/>
        <function-ref name="set" scoped="" ref="0xb678c7c8"/>
        <function-ref name="clr" scoped="" ref="0xb678c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb728d9e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb728d9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb728dbc0"/>
        <function-ref name="isInput" scoped="" ref="0xb728dca0"/>
        <function-ref name="toggle" scoped="" ref="0xb728dd80"/>
        <function-ref name="isOutput" scoped="" ref="0xb728de60"/>
        <function-ref name="get" scoped="" ref="0xb728b010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb728b0f0"/>
        <function-ref name="set" scoped="" ref="0xb728b1d0"/>
        <function-ref name="clr" scoped="" ref="0xb728b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb728a790" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb728a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb728a968"/>
        <function-ref name="isInput" scoped="" ref="0xb728aa48"/>
        <function-ref name="toggle" scoped="" ref="0xb728ab28"/>
        <function-ref name="isOutput" scoped="" ref="0xb728ac08"/>
        <function-ref name="get" scoped="" ref="0xb728ace8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb728adc8"/>
        <function-ref name="set" scoped="" ref="0xb728aea8"/>
        <function-ref name="clr" scoped="" ref="0xb7289010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb728e6f8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb728e6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb728e8d0"/>
        <function-ref name="isInput" scoped="" ref="0xb728e9b0"/>
        <function-ref name="toggle" scoped="" ref="0xb728ea90"/>
        <function-ref name="isOutput" scoped="" ref="0xb728eb70"/>
        <function-ref name="get" scoped="" ref="0xb728ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb728ed30"/>
        <function-ref name="set" scoped="" ref="0xb728ee10"/>
        <function-ref name="clr" scoped="" ref="0xb728eef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb728b410" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb728b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb728b5e8"/>
        <function-ref name="isInput" scoped="" ref="0xb728b6c8"/>
        <function-ref name="toggle" scoped="" ref="0xb728b7a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb728b888"/>
        <function-ref name="get" scoped="" ref="0xb728b968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb728ba48"/>
        <function-ref name="set" scoped="" ref="0xb728bb28"/>
        <function-ref name="clr" scoped="" ref="0xb728bc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7289170" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7289170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7289348"/>
        <function-ref name="isInput" scoped="" ref="0xb7289428"/>
        <function-ref name="toggle" scoped="" ref="0xb7289508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72895e8"/>
        <function-ref name="get" scoped="" ref="0xb72896c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72897a8"/>
        <function-ref name="set" scoped="" ref="0xb7289888"/>
        <function-ref name="clr" scoped="" ref="0xb7289968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb728d090" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb728d090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb728d268"/>
        <function-ref name="isInput" scoped="" ref="0xb728d348"/>
        <function-ref name="toggle" scoped="" ref="0xb728d428"/>
        <function-ref name="isOutput" scoped="" ref="0xb728d508"/>
        <function-ref name="get" scoped="" ref="0xb728d5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb728d6c8"/>
        <function-ref name="set" scoped="" ref="0xb728d7a8"/>
        <function-ref name="clr" scoped="" ref="0xb728d888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb728bd68" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb728bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb728a010"/>
        <function-ref name="isInput" scoped="" ref="0xb728a0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb728a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb728a2b0"/>
        <function-ref name="get" scoped="" ref="0xb728a390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb728a470"/>
        <function-ref name="set" scoped="" ref="0xb728a550"/>
        <function-ref name="clr" scoped="" ref="0xb728a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7289ac8" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7289ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7289ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7289d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7289e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7288010"/>
        <function-ref name="get" scoped="" ref="0xb72880f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72881d0"/>
        <function-ref name="set" scoped="" ref="0xb72882b0"/>
        <function-ref name="clr" scoped="" ref="0xb7288390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6760538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6760538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6760710"/>
        <function-ref name="isInput" scoped="" ref="0xb67607f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67608d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67609b0"/>
        <function-ref name="get" scoped="" ref="0xb6760a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6760b70"/>
        <function-ref name="set" scoped="" ref="0xb6760c50"/>
        <function-ref name="clr" scoped="" ref="0xb6760d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb675e010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb675e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb675e1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb675e2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb675e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb675e488"/>
        <function-ref name="get" scoped="" ref="0xb675e568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb675e648"/>
        <function-ref name="set" scoped="" ref="0xb675e728"/>
        <function-ref name="clr" scoped="" ref="0xb675e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb675c9e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb675c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb675cbc0"/>
        <function-ref name="isInput" scoped="" ref="0xb675cca0"/>
        <function-ref name="toggle" scoped="" ref="0xb675cd80"/>
        <function-ref name="isOutput" scoped="" ref="0xb675ce60"/>
        <function-ref name="get" scoped="" ref="0xb675b010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb675b0f0"/>
        <function-ref name="set" scoped="" ref="0xb675b1d0"/>
        <function-ref name="clr" scoped="" ref="0xb675b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb675a538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb675a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb675a710"/>
        <function-ref name="isInput" scoped="" ref="0xb675a7f0"/>
        <function-ref name="toggle" scoped="" ref="0xb675a8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb675a9b0"/>
        <function-ref name="get" scoped="" ref="0xb675aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb675ab70"/>
        <function-ref name="set" scoped="" ref="0xb675ac50"/>
        <function-ref name="clr" scoped="" ref="0xb675ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6758010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6758010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67581e8"/>
        <function-ref name="isInput" scoped="" ref="0xb67582c8"/>
        <function-ref name="toggle" scoped="" ref="0xb67583a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6758488"/>
        <function-ref name="get" scoped="" ref="0xb6758568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6758648"/>
        <function-ref name="set" scoped="" ref="0xb6758728"/>
        <function-ref name="clr" scoped="" ref="0xb6758808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67579e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67579e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6757bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb6757ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb6757d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6757e60"/>
        <function-ref name="get" scoped="" ref="0xb6756010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67560f0"/>
        <function-ref name="set" scoped="" ref="0xb67561d0"/>
        <function-ref name="clr" scoped="" ref="0xb67562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6755538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6755538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6755710"/>
        <function-ref name="isInput" scoped="" ref="0xb67557f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67558d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67559b0"/>
        <function-ref name="get" scoped="" ref="0xb6755a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6755b70"/>
        <function-ref name="set" scoped="" ref="0xb6755c50"/>
        <function-ref name="clr" scoped="" ref="0xb6755d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6753010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6753010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67531e8"/>
        <function-ref name="isInput" scoped="" ref="0xb67532c8"/>
        <function-ref name="toggle" scoped="" ref="0xb67533a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6753488"/>
        <function-ref name="get" scoped="" ref="0xb6753568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6753648"/>
        <function-ref name="set" scoped="" ref="0xb6753728"/>
        <function-ref name="clr" scoped="" ref="0xb6753808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7284410" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7284410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72845e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72846c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72847a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7284888"/>
        <function-ref name="get" scoped="" ref="0xb7284968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7284a48"/>
        <function-ref name="set" scoped="" ref="0xb7284b28"/>
        <function-ref name="clr" scoped="" ref="0xb7284c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7282170" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7282170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7282348"/>
        <function-ref name="isInput" scoped="" ref="0xb7282428"/>
        <function-ref name="toggle" scoped="" ref="0xb7282508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72825e8"/>
        <function-ref name="get" scoped="" ref="0xb72826c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72827a8"/>
        <function-ref name="set" scoped="" ref="0xb7282888"/>
        <function-ref name="clr" scoped="" ref="0xb7282968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7285128" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7285128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7285300"/>
        <function-ref name="isInput" scoped="" ref="0xb72853e0"/>
        <function-ref name="toggle" scoped="" ref="0xb72854c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72855a0"/>
        <function-ref name="get" scoped="" ref="0xb7285680"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7285760"/>
        <function-ref name="set" scoped="" ref="0xb7285840"/>
        <function-ref name="clr" scoped="" ref="0xb7285920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7284d68" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7284d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7283010"/>
        <function-ref name="isInput" scoped="" ref="0xb72830f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72831d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72832b0"/>
        <function-ref name="get" scoped="" ref="0xb7283390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7283470"/>
        <function-ref name="set" scoped="" ref="0xb7283550"/>
        <function-ref name="clr" scoped="" ref="0xb7283630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7282ac8" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7282ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7282ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7282d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7282e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7280010"/>
        <function-ref name="get" scoped="" ref="0xb72800f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72801d0"/>
        <function-ref name="set" scoped="" ref="0xb72802b0"/>
        <function-ref name="clr" scoped="" ref="0xb7280390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7285a80" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7285a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7285c58"/>
        <function-ref name="isInput" scoped="" ref="0xb7285d38"/>
        <function-ref name="toggle" scoped="" ref="0xb7285e18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7285ef8"/>
        <function-ref name="get" scoped="" ref="0xb7284010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72840f0"/>
        <function-ref name="set" scoped="" ref="0xb72841d0"/>
        <function-ref name="clr" scoped="" ref="0xb72842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7283790" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7283790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7283968"/>
        <function-ref name="isInput" scoped="" ref="0xb7283a48"/>
        <function-ref name="toggle" scoped="" ref="0xb7283b28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7283c08"/>
        <function-ref name="get" scoped="" ref="0xb7283ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7283dc8"/>
        <function-ref name="set" scoped="" ref="0xb7283ea8"/>
        <function-ref name="clr" scoped="" ref="0xb7282010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb72804f0" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb72804f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72806c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72807a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7280888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7280968"/>
        <function-ref name="get" scoped="" ref="0xb7280a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7280b28"/>
        <function-ref name="set" scoped="" ref="0xb7280c08"/>
        <function-ref name="clr" scoped="" ref="0xb7280ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6727418" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6727418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67275f0"/>
        <function-ref name="isInput" scoped="" ref="0xb67276d0"/>
        <function-ref name="toggle" scoped="" ref="0xb67277b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6727890"/>
        <function-ref name="get" scoped="" ref="0xb6727970"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6727a50"/>
        <function-ref name="set" scoped="" ref="0xb6727b30"/>
        <function-ref name="clr" scoped="" ref="0xb6727c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6726de0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6726de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6725010"/>
        <function-ref name="isInput" scoped="" ref="0xb67250f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67251d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67252b0"/>
        <function-ref name="get" scoped="" ref="0xb6725390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6725470"/>
        <function-ref name="set" scoped="" ref="0xb6725550"/>
        <function-ref name="clr" scoped="" ref="0xb6725630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67247f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67247f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67249d0"/>
        <function-ref name="isInput" scoped="" ref="0xb6724ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb6724b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6724c70"/>
        <function-ref name="get" scoped="" ref="0xb6724d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6724e30"/>
        <function-ref name="set" scoped="" ref="0xb6724f10"/>
        <function-ref name="clr" scoped="" ref="0xb6723010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6722228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6722228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6722400"/>
        <function-ref name="isInput" scoped="" ref="0xb67224e0"/>
        <function-ref name="toggle" scoped="" ref="0xb67225c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67226a0"/>
        <function-ref name="get" scoped="" ref="0xb6722780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6722860"/>
        <function-ref name="set" scoped="" ref="0xb6722940"/>
        <function-ref name="clr" scoped="" ref="0xb6722a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6721c08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6721c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6721de0"/>
        <function-ref name="isInput" scoped="" ref="0xb6721ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb6720010"/>
        <function-ref name="isOutput" scoped="" ref="0xb67200f0"/>
        <function-ref name="get" scoped="" ref="0xb67201d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67202b0"/>
        <function-ref name="set" scoped="" ref="0xb6720390"/>
        <function-ref name="clr" scoped="" ref="0xb6720470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb671f6c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb671f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb671f898"/>
        <function-ref name="isInput" scoped="" ref="0xb671f978"/>
        <function-ref name="toggle" scoped="" ref="0xb671fa58"/>
        <function-ref name="isOutput" scoped="" ref="0xb671fb38"/>
        <function-ref name="get" scoped="" ref="0xb671fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb671fcf8"/>
        <function-ref name="set" scoped="" ref="0xb671fdd8"/>
        <function-ref name="clr" scoped="" ref="0xb671feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb671d0b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb671d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb671d288"/>
        <function-ref name="isInput" scoped="" ref="0xb671d368"/>
        <function-ref name="toggle" scoped="" ref="0xb671d448"/>
        <function-ref name="isOutput" scoped="" ref="0xb671d528"/>
        <function-ref name="get" scoped="" ref="0xb671d608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb671d6e8"/>
        <function-ref name="set" scoped="" ref="0xb671d7c8"/>
        <function-ref name="clr" scoped="" ref="0xb671d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb671ca88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb671ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb671cc60"/>
        <function-ref name="isInput" scoped="" ref="0xb671cd40"/>
        <function-ref name="toggle" scoped="" ref="0xb671ce20"/>
        <function-ref name="isOutput" scoped="" ref="0xb671cf00"/>
        <function-ref name="get" scoped="" ref="0xb671b010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb671b0f0"/>
        <function-ref name="set" scoped="" ref="0xb671b1d0"/>
        <function-ref name="clr" scoped="" ref="0xb671b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb727ce48" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb727ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb727b050"/>
        <function-ref name="isInput" scoped="" ref="0xb727b130"/>
        <function-ref name="toggle" scoped="" ref="0xb727b210"/>
        <function-ref name="isOutput" scoped="" ref="0xb727b2f0"/>
        <function-ref name="get" scoped="" ref="0xb727b3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb727b4b0"/>
        <function-ref name="set" scoped="" ref="0xb727b590"/>
        <function-ref name="clr" scoped="" ref="0xb727b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb727aac8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb727aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb727aca0"/>
        <function-ref name="isInput" scoped="" ref="0xb727ad80"/>
        <function-ref name="toggle" scoped="" ref="0xb727ae60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7279010"/>
        <function-ref name="get" scoped="" ref="0xb72790f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72791d0"/>
        <function-ref name="set" scoped="" ref="0xb72792b0"/>
        <function-ref name="clr" scoped="" ref="0xb7279390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb727db00" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb727db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb727dcd8"/>
        <function-ref name="isInput" scoped="" ref="0xb727ddb8"/>
        <function-ref name="toggle" scoped="" ref="0xb727de98"/>
        <function-ref name="isOutput" scoped="" ref="0xb727c010"/>
        <function-ref name="get" scoped="" ref="0xb727c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb727c1d0"/>
        <function-ref name="set" scoped="" ref="0xb727c2b0"/>
        <function-ref name="clr" scoped="" ref="0xb727c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb727b7d0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb727b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb727b9a8"/>
        <function-ref name="isInput" scoped="" ref="0xb727ba88"/>
        <function-ref name="toggle" scoped="" ref="0xb727bb68"/>
        <function-ref name="isOutput" scoped="" ref="0xb727bc48"/>
        <function-ref name="get" scoped="" ref="0xb727bd28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb727be08"/>
        <function-ref name="set" scoped="" ref="0xb727bee8"/>
        <function-ref name="clr" scoped="" ref="0xb727a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb72794f0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb72794f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72796c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72797a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7279888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7279968"/>
        <function-ref name="get" scoped="" ref="0xb7279a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7279b28"/>
        <function-ref name="set" scoped="" ref="0xb7279c08"/>
        <function-ref name="clr" scoped="" ref="0xb7279ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb727c4f0" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb727c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb727c6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb727c7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb727c888"/>
        <function-ref name="isOutput" scoped="" ref="0xb727c968"/>
        <function-ref name="get" scoped="" ref="0xb727ca48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb727cb28"/>
        <function-ref name="set" scoped="" ref="0xb727cc08"/>
        <function-ref name="clr" scoped="" ref="0xb727cce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb727a170" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb727a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb727a348"/>
        <function-ref name="isInput" scoped="" ref="0xb727a428"/>
        <function-ref name="toggle" scoped="" ref="0xb727a508"/>
        <function-ref name="isOutput" scoped="" ref="0xb727a5e8"/>
        <function-ref name="get" scoped="" ref="0xb727a6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb727a7a8"/>
        <function-ref name="set" scoped="" ref="0xb727a888"/>
        <function-ref name="clr" scoped="" ref="0xb727a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7279e48" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7279e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7278050"/>
        <function-ref name="isInput" scoped="" ref="0xb7278130"/>
        <function-ref name="toggle" scoped="" ref="0xb7278210"/>
        <function-ref name="isOutput" scoped="" ref="0xb72782f0"/>
        <function-ref name="get" scoped="" ref="0xb72783d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72784b0"/>
        <function-ref name="set" scoped="" ref="0xb7278590"/>
        <function-ref name="clr" scoped="" ref="0xb7278670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66f3de8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66f3de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66ee010"/>
        <function-ref name="isInput" scoped="" ref="0xb66ee0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb66ee1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66ee2b0"/>
        <function-ref name="get" scoped="" ref="0xb66ee390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66ee470"/>
        <function-ref name="set" scoped="" ref="0xb66ee550"/>
        <function-ref name="clr" scoped="" ref="0xb66ee630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66ed7f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66ed7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66ed9d0"/>
        <function-ref name="isInput" scoped="" ref="0xb66edab0"/>
        <function-ref name="toggle" scoped="" ref="0xb66edb90"/>
        <function-ref name="isOutput" scoped="" ref="0xb66edc70"/>
        <function-ref name="get" scoped="" ref="0xb66edd50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66ede30"/>
        <function-ref name="set" scoped="" ref="0xb66edf10"/>
        <function-ref name="clr" scoped="" ref="0xb66ec010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66eb228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66eb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66eb400"/>
        <function-ref name="isInput" scoped="" ref="0xb66eb4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb66eb5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66eb6a0"/>
        <function-ref name="get" scoped="" ref="0xb66eb780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66eb860"/>
        <function-ref name="set" scoped="" ref="0xb66eb940"/>
        <function-ref name="clr" scoped="" ref="0xb66eba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66eac08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66eac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66eade0"/>
        <function-ref name="isInput" scoped="" ref="0xb66eaec0"/>
        <function-ref name="toggle" scoped="" ref="0xb66e9010"/>
        <function-ref name="isOutput" scoped="" ref="0xb66e90f0"/>
        <function-ref name="get" scoped="" ref="0xb66e91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66e92b0"/>
        <function-ref name="set" scoped="" ref="0xb66e9390"/>
        <function-ref name="clr" scoped="" ref="0xb66e9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66e86c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66e86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66e8898"/>
        <function-ref name="isInput" scoped="" ref="0xb66e8978"/>
        <function-ref name="toggle" scoped="" ref="0xb66e8a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb66e8b38"/>
        <function-ref name="get" scoped="" ref="0xb66e8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66e8cf8"/>
        <function-ref name="set" scoped="" ref="0xb66e8dd8"/>
        <function-ref name="clr" scoped="" ref="0xb66e8eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66e60b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66e60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66e6288"/>
        <function-ref name="isInput" scoped="" ref="0xb66e6368"/>
        <function-ref name="toggle" scoped="" ref="0xb66e6448"/>
        <function-ref name="isOutput" scoped="" ref="0xb66e6528"/>
        <function-ref name="get" scoped="" ref="0xb66e6608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66e66e8"/>
        <function-ref name="set" scoped="" ref="0xb66e67c8"/>
        <function-ref name="clr" scoped="" ref="0xb66e68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66e5a88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66e5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66e5c60"/>
        <function-ref name="isInput" scoped="" ref="0xb66e5d40"/>
        <function-ref name="toggle" scoped="" ref="0xb66e5e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb66e5f00"/>
        <function-ref name="get" scoped="" ref="0xb66e4010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66e40f0"/>
        <function-ref name="set" scoped="" ref="0xb66e41d0"/>
        <function-ref name="clr" scoped="" ref="0xb66e42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66e3538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb66e3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66e3710"/>
        <function-ref name="isInput" scoped="" ref="0xb66e37f0"/>
        <function-ref name="toggle" scoped="" ref="0xb66e38d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66e39b0"/>
        <function-ref name="get" scoped="" ref="0xb66e3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66e3b70"/>
        <function-ref name="set" scoped="" ref="0xb66e3c50"/>
        <function-ref name="clr" scoped="" ref="0xb66e3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7273010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7273010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72731e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72732c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72733a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7273488"/>
        <function-ref name="get" scoped="" ref="0xb7273568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7273648"/>
        <function-ref name="set" scoped="" ref="0xb7273728"/>
        <function-ref name="clr" scoped="" ref="0xb7273808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72657b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72657b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7265990"/>
        <function-ref name="isInput" scoped="" ref="0xb7265a70"/>
        <function-ref name="toggle" scoped="" ref="0xb7265b50"/>
        <function-ref name="isOutput" scoped="" ref="0xb7265c30"/>
        <function-ref name="get" scoped="" ref="0xb7265d10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7265df0"/>
        <function-ref name="set" scoped="" ref="0xb7265ed0"/>
        <function-ref name="clr" scoped="" ref="0xb7264010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7262010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7262010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72621e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72622c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72623a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7262488"/>
        <function-ref name="get" scoped="" ref="0xb7262568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7262648"/>
        <function-ref name="set" scoped="" ref="0xb7262728"/>
        <function-ref name="clr" scoped="" ref="0xb7262808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb725f7b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb725f7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725f990"/>
        <function-ref name="isInput" scoped="" ref="0xb725fa70"/>
        <function-ref name="toggle" scoped="" ref="0xb725fb50"/>
        <function-ref name="isOutput" scoped="" ref="0xb725fc30"/>
        <function-ref name="get" scoped="" ref="0xb725fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725fdf0"/>
        <function-ref name="set" scoped="" ref="0xb725fed0"/>
        <function-ref name="clr" scoped="" ref="0xb725e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb725c010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb725c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725c1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb725c2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb725c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb725c488"/>
        <function-ref name="get" scoped="" ref="0xb725c568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725c648"/>
        <function-ref name="set" scoped="" ref="0xb725c728"/>
        <function-ref name="clr" scoped="" ref="0xb725c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb725a7b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb725a7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725a990"/>
        <function-ref name="isInput" scoped="" ref="0xb725aa70"/>
        <function-ref name="toggle" scoped="" ref="0xb725ab50"/>
        <function-ref name="isOutput" scoped="" ref="0xb725ac30"/>
        <function-ref name="get" scoped="" ref="0xb725ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725adf0"/>
        <function-ref name="set" scoped="" ref="0xb725aed0"/>
        <function-ref name="clr" scoped="" ref="0xb7259010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7256080" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7256080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7256258"/>
        <function-ref name="isInput" scoped="" ref="0xb7256338"/>
        <function-ref name="toggle" scoped="" ref="0xb7256418"/>
        <function-ref name="isOutput" scoped="" ref="0xb72564f8"/>
        <function-ref name="get" scoped="" ref="0xb72565d8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72566b8"/>
        <function-ref name="set" scoped="" ref="0xb7256798"/>
        <function-ref name="clr" scoped="" ref="0xb7256878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7254840" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7254840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7254a18"/>
        <function-ref name="isInput" scoped="" ref="0xb7254af8"/>
        <function-ref name="toggle" scoped="" ref="0xb7254bd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7254cb8"/>
        <function-ref name="get" scoped="" ref="0xb7254d98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7254e78"/>
        <function-ref name="set" scoped="" ref="0xb7253010"/>
        <function-ref name="clr" scoped="" ref="0xb72530f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72510b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72510b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7251288"/>
        <function-ref name="isInput" scoped="" ref="0xb7251368"/>
        <function-ref name="toggle" scoped="" ref="0xb7251448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7251528"/>
        <function-ref name="get" scoped="" ref="0xb7251608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72516e8"/>
        <function-ref name="set" scoped="" ref="0xb72517c8"/>
        <function-ref name="clr" scoped="" ref="0xb72518a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb724e880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb724e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724ea58"/>
        <function-ref name="isInput" scoped="" ref="0xb724eb38"/>
        <function-ref name="toggle" scoped="" ref="0xb724ec18"/>
        <function-ref name="isOutput" scoped="" ref="0xb724ecf8"/>
        <function-ref name="get" scoped="" ref="0xb724edd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724eeb8"/>
        <function-ref name="set" scoped="" ref="0xb724d010"/>
        <function-ref name="clr" scoped="" ref="0xb724d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb724b0b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb724b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724b288"/>
        <function-ref name="isInput" scoped="" ref="0xb724b368"/>
        <function-ref name="toggle" scoped="" ref="0xb724b448"/>
        <function-ref name="isOutput" scoped="" ref="0xb724b528"/>
        <function-ref name="get" scoped="" ref="0xb724b608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724b6e8"/>
        <function-ref name="set" scoped="" ref="0xb724b7c8"/>
        <function-ref name="clr" scoped="" ref="0xb724b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7248880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7248880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7248a58"/>
        <function-ref name="isInput" scoped="" ref="0xb7248b38"/>
        <function-ref name="toggle" scoped="" ref="0xb7248c18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7248cf8"/>
        <function-ref name="get" scoped="" ref="0xb7248dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7248eb8"/>
        <function-ref name="set" scoped="" ref="0xb7247010"/>
        <function-ref name="clr" scoped="" ref="0xb72470f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72450b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72450b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7245288"/>
        <function-ref name="isInput" scoped="" ref="0xb7245368"/>
        <function-ref name="toggle" scoped="" ref="0xb7245448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7245528"/>
        <function-ref name="get" scoped="" ref="0xb7245608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72456e8"/>
        <function-ref name="set" scoped="" ref="0xb72457c8"/>
        <function-ref name="clr" scoped="" ref="0xb72458a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7243880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7243880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7243a58"/>
        <function-ref name="isInput" scoped="" ref="0xb7243b38"/>
        <function-ref name="toggle" scoped="" ref="0xb7243c18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7243cf8"/>
        <function-ref name="get" scoped="" ref="0xb7243dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7243eb8"/>
        <function-ref name="set" scoped="" ref="0xb7242010"/>
        <function-ref name="clr" scoped="" ref="0xb72420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7225bf8" loc="61:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7225bf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb73c67d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb73c67d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7225dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7224010" loc="62:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7224010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb72241e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb72242c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb72243a8"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7224488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7224568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb7213808" loc="60:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7213808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72139e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb730ca28" loc="57:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb730ca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb730cc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb7213400" loc="59:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7213400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72135d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb730cdc0" loc="58:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb730cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7213010"/>
        <function-ref name="taskLoop" scoped="" ref="0xb72130f0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb72131d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb73a5d58" loc="48:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb73a5d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb73ac010"/>
        <function-ref name="runTask" scoped="" ref="0xb73ac0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb73aa5f0" loc="47:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb73aa5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb73aa7c8"/>
        <function-ref name="taskLoop" scoped="" ref="0xb73aa8a8"/>
        <function-ref name="runNextTask" scoped="" ref="0xb73aa988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7330100" loc="56:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7330100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb73302d8"/>
        <function-ref name="runTask" scoped="" ref="0xb73303b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb7330d68" loc="57:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7330d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb732f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb73318a8" loc="55:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb73318a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7331a80"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7331b60"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7331c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb731c218" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb731c218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb731c3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb73ab728" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb73ab728"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb73ab900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb731e420" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb731e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb731e5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7202010" loc="46:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7202010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb72021e8"/>
        <function-ref name="stopDone" scoped="" ref="0xb72022c8"/>
        <function-ref name="start" scoped="" ref="0xb72023a8"/>
        <function-ref name="stop" scoped="" ref="0xb7202488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb71c6d60" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb71c6d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7201010"/>
        <function-ref name="getPayload" scoped="" ref="0xb72010f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72011d0"/>
        <function-ref name="cancel" scoped="" ref="0xb72012b0"/>
        <function-ref name="sendDone" scoped="" ref="0xb7201390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb71bb148" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb71bb148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb71bb320"/>
        <function-ref name="payloadLength" scoped="" ref="0xb71bb400"/>
        <function-ref name="getPayload" scoped="" ref="0xb71bb4e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71bb5c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb71bb6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb71ff248" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb71ff248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb71ff420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb71a79e0" loc="53:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb71a79e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb71a7bb8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb71a7c98"/>
        <function-ref name="led1On" scoped="" ref="0xb71a7d78"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb71a7e58"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb71c2010"/>
        <function-ref name="get" scoped="" ref="0xb71c20f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb71c21d0"/>
        <function-ref name="led2Off" scoped="" ref="0xb71c2550"/>
        <function-ref name="set" scoped="" ref="0xb71c22b0"/>
        <function-ref name="led0On" scoped="" ref="0xb71c2390"/>
        <function-ref name="led2On" scoped="" ref="0xb71c2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb71ad308" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb71ad308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb71ad4e0"/>
        <function-ref name="noAck" scoped="" ref="0xb71ad5c0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb71ad6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb71b2140" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb71b2140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb71b2318"/>
        <function-ref name="source" scoped="" ref="0xb71b23f8"/>
        <function-ref name="address" scoped="" ref="0xb71b24d8"/>
        <function-ref name="destination" scoped="" ref="0xb71b25b8"/>
        <function-ref name="setSource" scoped="" ref="0xb71b2698"/>
        <function-ref name="setDestination" scoped="" ref="0xb71b2778"/>
        <function-ref name="type" scoped="" ref="0xb71b2858"/>
        <function-ref name="setType" scoped="" ref="0xb71b2938"/>
        <function-ref name="isForMe" scoped="" ref="0xb71b2a18"/>
        <function-ref name="setGroup" scoped="" ref="0xb71b2af8"/>
        <function-ref name="localGroup" scoped="" ref="0xb71b2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7171ed0" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7171ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb71700c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb71701a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7170280"/>
        <function-ref name="cancel" scoped="" ref="0xb7170360"/>
        <function-ref name="sendDone" scoped="" ref="0xb7170440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb71705a0" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb71705a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7170778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb71c1be8" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb71c1be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb71c1dd0"/>
        <function-ref name="getPayload" scoped="" ref="0xb71c1eb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71a6010"/>
        <function-ref name="cancel" scoped="" ref="0xb71a60f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb71a61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7171310" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7171310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb71714e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb71715c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb71716a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7171788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7171868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb71a63a8" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb71a63a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb71a6590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb71719a8" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb71719a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7171b80"/>
        <function-ref name="noAck" scoped="" ref="0xb7171c60"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7171d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb71a66d0" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb71a66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb71a68a8"/>
        <function-ref name="source" scoped="" ref="0xb71a6988"/>
        <function-ref name="address" scoped="" ref="0xb71a6a68"/>
        <function-ref name="destination" scoped="" ref="0xb71a6b48"/>
        <function-ref name="setSource" scoped="" ref="0xb71a6c28"/>
        <function-ref name="setDestination" scoped="" ref="0xb71a6d08"/>
        <function-ref name="type" scoped="" ref="0xb71a6de8"/>
        <function-ref name="setType" scoped="" ref="0xb71a6ec8"/>
        <function-ref name="isForMe" scoped="" ref="0xb7171010"/>
        <function-ref name="setGroup" scoped="" ref="0xb71710f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb71711d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb716fd18" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb716fd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb716fef0"/>
        <function-ref name="stopDone" scoped="" ref="0xb716c010"/>
        <function-ref name="start" scoped="" ref="0xb716c0f0"/>
        <function-ref name="stop" scoped="" ref="0xb716c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb716cc20" loc="52:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb716cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb720ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb716cdf8"/>
        <function-ref name="getPayload" scoped="" ref="0xb716ced8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb716a010"/>
        <function-ref name="cancel" scoped="" ref="0xb716a0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb716a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb716f980" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb716f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb716fb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb716c618" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb716c618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb720ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb716c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7166840" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7166840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7166a18"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7166af8"/>
        <function-ref name="led1On" scoped="" ref="0xb7166bd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7166cb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7166d98"/>
        <function-ref name="get" scoped="" ref="0xb7166e78"/>
        <function-ref name="led1Off" scoped="" ref="0xb7169010"/>
        <function-ref name="led2Off" scoped="" ref="0xb7169390"/>
        <function-ref name="set" scoped="" ref="0xb71690f0"/>
        <function-ref name="led0On" scoped="" ref="0xb71691d0"/>
        <function-ref name="led2On" scoped="" ref="0xb71692b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0xb7166338" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0xb7166338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb720ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb7166510"/>
        <function-ref name="offset" scoped="" ref="0xb71665f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb71666d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7155de8" loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7155de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7154010"/>
        <function-ref name="stopDone" scoped="" ref="0xb71540f0"/>
        <function-ref name="start" scoped="" ref="0xb71541d0"/>
        <function-ref name="stop" scoped="" ref="0xb71542b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0xb711ace8" loc="332:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0xb711ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb711aec0"/>
        <function-ref name="runTask" scoped="" ref="0xb7118010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb7148e08" loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0xb7148e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7152010"/>
        <function-ref name="stop" scoped="" ref="0xb71520f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0xb7138168" loc="191:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0xb7138168"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7138340"/>
        <function-ref name="runTask" scoped="" ref="0xb7138420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7155a50" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7155a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7155c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0xb7152df8" loc="75:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0xb7152df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0xb7149010"/>
        <function-ref name="flush" scoped="" ref="0xb71490f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0xb711b578" loc="322:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0xb711b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb711b750"/>
        <function-ref name="runTask" scoped="" ref="0xb711b830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0xb714a8d8" loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0xb714a8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb714aab0"/>
        <function-ref name="resetSend" scoped="" ref="0xb714ab90"/>
        <function-ref name="dataReceived" scoped="" ref="0xb714ac70"/>
        <function-ref name="resetReceive" scoped="" ref="0xb714ad50"/>
        <function-ref name="putData" scoped="" ref="0xb714ae30"/>
        <function-ref name="putDone" scoped="" ref="0xb714af10"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb7153010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7153180" loc="73:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7153180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7153358"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7153438"/>
        <function-ref name="led1On" scoped="" ref="0xb7153518"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb71535f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb71536d8"/>
        <function-ref name="get" scoped="" ref="0xb71537b8"/>
        <function-ref name="led1Off" scoped="" ref="0xb7153898"/>
        <function-ref name="led2Off" scoped="" ref="0xb7153c18"/>
        <function-ref name="set" scoped="" ref="0xb7153978"/>
        <function-ref name="led0On" scoped="" ref="0xb7153a58"/>
        <function-ref name="led2On" scoped="" ref="0xb7153b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0xb7117998" loc="341:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb7117998"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7117b70"/>
        <function-ref name="runTask" scoped="" ref="0xb7117c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0xb71505b8" loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0xb71505b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb7150790"/>
        <function-ref name="nextByte" scoped="" ref="0xb7150870"/>
        <function-ref name="startSend" scoped="" ref="0xb7150950"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb7150a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0xb714e778" loc="68:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb714e778"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb714e950"/>
        <function-ref name="byteReceived" scoped="" ref="0xb714ea30"/>
        <function-ref name="endPacket" scoped="" ref="0xb714eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0xb70a4030" loc="275:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0xb70a4030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb70a4208"/>
        <function-ref name="runTask" scoped="" ref="0xb70a42e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb70dfc60" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb70dfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb720ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70dfe48"/>
        <function-ref name="getPayload" scoped="" ref="0xb70dff28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70a6018"/>
        <function-ref name="cancel" scoped="" ref="0xb70a60f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb70a61d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0xb70a4468" loc="158:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0xb70a4468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb70a4640"/>
        <function-ref name="runTask" scoped="" ref="0xb70a4720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb70df8a0" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb70df8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb720ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb70dfa88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0xb70a6400" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0xb70a6400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb720ad50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb70a65e8"/>
        <function-ref name="offset" scoped="" ref="0xb70a66c8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb70a67a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb70a53f0" loc="57:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb70a53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb70a55c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb70a56a8"/>
        <function-ref name="led1On" scoped="" ref="0xb70a5788"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb70a5868"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb70a5948"/>
        <function-ref name="get" scoped="" ref="0xb70a5a28"/>
        <function-ref name="led1Off" scoped="" ref="0xb70a5b08"/>
        <function-ref name="led2On" scoped="" ref="0xb70a5e88"/>
        <function-ref name="set" scoped="" ref="0xb70a5cc8"/>
        <function-ref name="led2Off" scoped="" ref="0xb70a5be8"/>
        <function-ref name="led0On" scoped="" ref="0xb70a5da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0xb70a6dc0" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0xb70a6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb70a5010"/>
        <function-ref name="nextByte" scoped="" ref="0xb70a50f0"/>
        <function-ref name="startSend" scoped="" ref="0xb70a51d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb70a52b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0xb70a68e8" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb70a68e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb70a6ac0"/>
        <function-ref name="byteReceived" scoped="" ref="0xb70a6ba0"/>
        <function-ref name="endPacket" scoped="" ref="0xb70a6c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0xb7099b80" loc="50:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb7099b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7099d58"/>
        <function-ref name="receivedByte" scoped="" ref="0xb7099e38"/>
        <function-ref name="receive" scoped="" ref="0xb7099f18"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb709e010"/>
        <function-ref name="receiveDone" scoped="" ref="0xb709e0f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb709e1d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb709e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0xb70a3868" loc="48:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0xb70a3868"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb70a3a40"/>
        <function-ref name="resetSend" scoped="" ref="0xb70a3b20"/>
        <function-ref name="dataReceived" scoped="" ref="0xb70a3c00"/>
        <function-ref name="resetReceive" scoped="" ref="0xb70a3ce0"/>
        <function-ref name="putData" scoped="" ref="0xb70a3dc0"/>
        <function-ref name="putDone" scoped="" ref="0xb70a3ea0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb70a0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb709e420" loc="51:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb709e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb709e5f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb709e6d8"/>
        <function-ref name="led1On" scoped="" ref="0xb709e7b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb709e898"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb709e978"/>
        <function-ref name="get" scoped="" ref="0xb709ea58"/>
        <function-ref name="led1Off" scoped="" ref="0xb709eb38"/>
        <function-ref name="led2Off" scoped="" ref="0xb709eeb8"/>
        <function-ref name="set" scoped="" ref="0xb709ec18"/>
        <function-ref name="led0On" scoped="" ref="0xb709ecf8"/>
        <function-ref name="led2On" scoped="" ref="0xb709edd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb70856e8" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb70856e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70858c0"/>
        <function-ref name="receive" scoped="" ref="0xb70859a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb70a2870" loc="41:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb70a2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70a2a48"/>
        <function-ref name="receivedByte" scoped="" ref="0xb70a2b28"/>
        <function-ref name="receive" scoped="" ref="0xb70a2c08"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb70a2ce8"/>
        <function-ref name="receiveDone" scoped="" ref="0xb70a2dc8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb70a2ea8"/>
        <function-ref name="sendDone" scoped="" ref="0xb7089010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb70a23f0" loc="40:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb70a23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb70a25c8"/>
        <function-ref name="stop" scoped="" ref="0xb70a26a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb70845d8" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb70845d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70847b0"/>
        <function-ref name="receive" scoped="" ref="0xb7084890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb7084a58" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb7084a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7084c30"/>
        <function-ref name="receivedByte" scoped="" ref="0xb7084d10"/>
        <function-ref name="receive" scoped="" ref="0xb7084df0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb7084ed0"/>
        <function-ref name="receiveDone" scoped="" ref="0xb7083010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb70830f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb70831d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb707f450" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb707f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb707fba0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb70820a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb707fe18"/>
        <function-ref name="overflow" scoped="" ref="0xb7082320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb7084168" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb7084168"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7084340"/>
        <function-ref name="stop" scoped="" ref="0xb7084420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb707ee28" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb707ee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb707d050"/>
        <function-ref name="receive" scoped="" ref="0xb707d130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0xb707db28" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0xb707db28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb707dd00"/>
        <function-ref name="stop" scoped="" ref="0xb707dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb707e6d8" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb707e6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb707e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb707d290" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb707d290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb707d468"/>
        <function-ref name="receivedByte" scoped="" ref="0xb707d548"/>
        <function-ref name="receive" scoped="" ref="0xb707d628"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb707d708"/>
        <function-ref name="receiveDone" scoped="" ref="0xb707d7e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb707d8c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb707d9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb70560a0" loc="56:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb70560a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb70567f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7056ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7056a68"/>
        <function-ref name="overflow" scoped="" ref="0xb7055010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0xb7057448" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0xb7057448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb7057620"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb7057700"/>
        <function-ref name="rxDone" scoped="" ref="0xb70577e0"/>
        <function-ref name="txDone" scoped="" ref="0xb70578c0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb70579a0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb7057a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb7057b60"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb7057c40"/>
        <function-ref name="tx" scoped="" ref="0xb7057d20"/>
        <function-ref name="rx" scoped="" ref="0xb7057e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb707ea10" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb707ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb707ebe8"/>
        <function-ref name="stop" scoped="" ref="0xb707ecc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0xb7057010" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0xb7057010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb70571e8"/>
        <function-ref name="stop" scoped="" ref="0xb70572c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0xb7043508" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0xb7043508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb70436e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb70437c0"/>
        <function-ref name="rxDone" scoped="" ref="0xb70438a0"/>
        <function-ref name="txDone" scoped="" ref="0xb7043980"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb7043a60"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb7043b40"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb7043c20"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb7043d00"/>
        <function-ref name="tx" scoped="" ref="0xb7043de0"/>
        <function-ref name="rx" scoped="" ref="0xb7043ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0xb7042b80" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0xb7042b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb7042d58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb7042e38"/>
        <function-ref name="rxDone" scoped="" ref="0xb7042f18"/>
        <function-ref name="txDone" scoped="" ref="0xb7041010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb70410f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb70411d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb70412b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb7041390"/>
        <function-ref name="tx" scoped="" ref="0xb7041470"/>
        <function-ref name="rx" scoped="" ref="0xb7041550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0xb7043010" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0xb7043010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb70431e8"/>
        <function-ref name="stop" scoped="" ref="0xb70432c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0xb7042178" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0xb7042178"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7042350"/>
        <function-ref name="stop" scoped="" ref="0xb7042430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0xb7042688" loc="52:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0xb7042688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7042860"/>
        <function-ref name="stop" scoped="" ref="0xb7042940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0xb7044a80" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0xb7044a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7044c58"/>
        <function-ref name="stop" scoped="" ref="0xb7044d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0xb7041d80" loc="114:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0xb7041d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7039010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0xb7039cd0" loc="117:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0xb7039cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb7039ea8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb7038010"/>
        <function-ref name="rxDone" scoped="" ref="0xb70380f0"/>
        <function-ref name="txDone" scoped="" ref="0xb70381d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb70382b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb7038390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb7038470"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb7038550"/>
        <function-ref name="tx" scoped="" ref="0xb7038630"/>
        <function-ref name="rx" scoped="" ref="0xb7038710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0xb7038920" loc="119:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0xb7038920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7038af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0xb7037880" loc="122:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0xb7037880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb7037a58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb7037b38"/>
        <function-ref name="rxDone" scoped="" ref="0xb7037c18"/>
        <function-ref name="txDone" scoped="" ref="0xb7037cf8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb7037dd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb7037eb8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb7036010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb70360f0"/>
        <function-ref name="tx" scoped="" ref="0xb70361d0"/>
        <function-ref name="rx" scoped="" ref="0xb70362b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0xb70397b8" loc="116:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0xb70397b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7039990"/>
        <function-ref name="stop" scoped="" ref="0xb7039a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0xb7038d70" loc="120:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0xb7038d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7037010"/>
        <function-ref name="stop" scoped="" ref="0xb70370f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0xb7037368" loc="121:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0xb7037368"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7037540"/>
        <function-ref name="stop" scoped="" ref="0xb7037620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0xb70364a8" loc="124:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb70364a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7036680"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7036760"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7036840"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7036920"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7036a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb7036be8" loc="125:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb7036be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7036dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0xb7039288" loc="115:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0xb7039288"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7039460"/>
        <function-ref name="stop" scoped="" ref="0xb7039540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb7087878" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7087878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7000010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7000500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7000288"/>
        <function-ref name="overflow" scoped="" ref="0xb7000778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6ffd3c0" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6ffd3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7333010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6ffdb10"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6ffc010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6ffdd88"/>
        <function-ref name="overflow" scoped="" ref="0xb6ffc288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6feb360" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6feb360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb6feb538"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6feb618"/>
        <function-ref name="getControlA" scoped="" ref="0xb6feb6f8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6feb7d8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6feb8b8"/>
        <function-ref name="setControlB" scoped="" ref="0xb6feb998"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6feba78"/>
        <function-ref name="getControlB" scoped="" ref="0xb6febb58"/>
        <function-ref name="setControlC" scoped="" ref="0xb6febc38"/>
        <function-ref name="setControlA" scoped="" ref="0xb6febd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6ff0190" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6ff0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6feac68"/>
        <function-ref name="test" scoped="" ref="0xb6fea778"/>
        <function-ref name="get" scoped="" ref="0xb6ff07d8"/>
        <function-ref name="captured" scoped="" ref="0xb6ff0cf0"/>
        <function-ref name="reset" scoped="" ref="0xb6fea010"/>
        <function-ref name="isOn" scoped="" ref="0xb6fea9f0"/>
        <function-ref name="set" scoped="" ref="0xb6ff0a50"/>
        <function-ref name="start" scoped="" ref="0xb6fea288"/>
        <function-ref name="stop" scoped="" ref="0xb6fea500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6fe1cd8" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6fe1cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6fe4288"/>
        <function-ref name="fired" scoped="" ref="0xb6fe5888"/>
        <function-ref name="get" scoped="" ref="0xb6fe5370"/>
        <function-ref name="reset" scoped="" ref="0xb6fe5b00"/>
        <function-ref name="isOn" scoped="" ref="0xb6fe4500"/>
        <function-ref name="set" scoped="" ref="0xb6fe55e8"/>
        <function-ref name="start" scoped="" ref="0xb6fe5d78"/>
        <function-ref name="stop" scoped="" ref="0xb6fe4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6ff3928" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6ff3928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6ff2418"/>
        <function-ref name="test" scoped="" ref="0xb6ff9f08"/>
        <function-ref name="get" scoped="" ref="0xb6ff9010"/>
        <function-ref name="setScale" scoped="" ref="0xb6ff2690"/>
        <function-ref name="getScale" scoped="" ref="0xb6ff2930"/>
        <function-ref name="reset" scoped="" ref="0xb6ff97a0"/>
        <function-ref name="overflow" scoped="" ref="0xb6ff9528"/>
        <function-ref name="isOn" scoped="" ref="0xb6ff21a0"/>
        <function-ref name="set" scoped="" ref="0xb6ff9288"/>
        <function-ref name="start" scoped="" ref="0xb6ff9a18"/>
        <function-ref name="stop" scoped="" ref="0xb6ff9c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6fdb530" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6fdb530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb6fdb708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6fdb7e8"/>
        <function-ref name="getControlA" scoped="" ref="0xb6fdb8c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6fdb9a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6fdba88"/>
        <function-ref name="setControlB" scoped="" ref="0xb6fdbb68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6fdbc48"/>
        <function-ref name="getControlB" scoped="" ref="0xb6fdbd28"/>
        <function-ref name="setControlC" scoped="" ref="0xb6fdbe08"/>
        <function-ref name="setControlA" scoped="" ref="0xb6fdbee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb6fd7128" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb6fd7128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6fd6690"/>
        <function-ref name="fired" scoped="" ref="0xb6fd7c88"/>
        <function-ref name="get" scoped="" ref="0xb6fd7770"/>
        <function-ref name="reset" scoped="" ref="0xb6fd7f00"/>
        <function-ref name="isOn" scoped="" ref="0xb6fd6908"/>
        <function-ref name="set" scoped="" ref="0xb6fd79e8"/>
        <function-ref name="start" scoped="" ref="0xb6fd61a0"/>
        <function-ref name="stop" scoped="" ref="0xb6fd6418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6fda258" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6fda258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6fd8cc0"/>
        <function-ref name="test" scoped="" ref="0xb6fd87d0"/>
        <function-ref name="get" scoped="" ref="0xb6fda8a0"/>
        <function-ref name="captured" scoped="" ref="0xb6fdadb8"/>
        <function-ref name="reset" scoped="" ref="0xb6fd8068"/>
        <function-ref name="isOn" scoped="" ref="0xb6fd8a48"/>
        <function-ref name="set" scoped="" ref="0xb6fdab18"/>
        <function-ref name="start" scoped="" ref="0xb6fd82e0"/>
        <function-ref name="stop" scoped="" ref="0xb6fd8558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb6fd6d20" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb6fd6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6fd32c0"/>
        <function-ref name="fired" scoped="" ref="0xb6fd48a8"/>
        <function-ref name="get" scoped="" ref="0xb6fd4390"/>
        <function-ref name="reset" scoped="" ref="0xb6fd4b20"/>
        <function-ref name="isOn" scoped="" ref="0xb6fd3538"/>
        <function-ref name="set" scoped="" ref="0xb6fd4608"/>
        <function-ref name="start" scoped="" ref="0xb6fd4d98"/>
        <function-ref name="stop" scoped="" ref="0xb6fd3048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb6fd3950" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb6fd3950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6fd2f08"/>
        <function-ref name="fired" scoped="" ref="0xb6fd2528"/>
        <function-ref name="get" scoped="" ref="0xb6fd2010"/>
        <function-ref name="reset" scoped="" ref="0xb6fd27a0"/>
        <function-ref name="isOn" scoped="" ref="0xb6fd01a0"/>
        <function-ref name="set" scoped="" ref="0xb6fd2288"/>
        <function-ref name="start" scoped="" ref="0xb6fd2a18"/>
        <function-ref name="stop" scoped="" ref="0xb6fd2c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6fdd230" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6fdd230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6fdcca0"/>
        <function-ref name="test" scoped="" ref="0xb6fdc7b0"/>
        <function-ref name="get" scoped="" ref="0xb6fdd878"/>
        <function-ref name="setScale" scoped="" ref="0xb6fdcf18"/>
        <function-ref name="getScale" scoped="" ref="0xb6fdb1d0"/>
        <function-ref name="reset" scoped="" ref="0xb6fdc048"/>
        <function-ref name="overflow" scoped="" ref="0xb6fddd90"/>
        <function-ref name="isOn" scoped="" ref="0xb6fdca28"/>
        <function-ref name="set" scoped="" ref="0xb6fddaf0"/>
        <function-ref name="start" scoped="" ref="0xb6fdc2c0"/>
        <function-ref name="stop" scoped="" ref="0xb6fdc538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6f8ec70" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6f8ec70"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb73c65d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb73c65d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6f8ee48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6f8d078" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6f8d078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6f85ab8"/>
        <function-ref name="test" scoped="" ref="0xb6f855c8"/>
        <function-ref name="get" scoped="" ref="0xb6f8d6c0"/>
        <function-ref name="setScale" scoped="" ref="0xb6f85d30"/>
        <function-ref name="getScale" scoped="" ref="0xb6f84010"/>
        <function-ref name="reset" scoped="" ref="0xb6f8de50"/>
        <function-ref name="overflow" scoped="" ref="0xb6f8dbd8"/>
        <function-ref name="isOn" scoped="" ref="0xb6f85840"/>
        <function-ref name="set" scoped="" ref="0xb6f8d938"/>
        <function-ref name="start" scoped="" ref="0xb6f850d8"/>
        <function-ref name="stop" scoped="" ref="0xb6f85350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6f8f890" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6f8f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7333010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6f79010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6f79500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6f79288"/>
        <function-ref name="overflow" scoped="" ref="0xb6f79778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6f79a58" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6f79a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6f77500"/>
        <function-ref name="test" scoped="" ref="0xb6f77010"/>
        <function-ref name="get" scoped="" ref="0xb6f780b8"/>
        <function-ref name="setScale" scoped="" ref="0xb6f77778"/>
        <function-ref name="getScale" scoped="" ref="0xb6f77a18"/>
        <function-ref name="reset" scoped="" ref="0xb6f78848"/>
        <function-ref name="overflow" scoped="" ref="0xb6f785d0"/>
        <function-ref name="isOn" scoped="" ref="0xb6f77288"/>
        <function-ref name="set" scoped="" ref="0xb6f78330"/>
        <function-ref name="start" scoped="" ref="0xb6f78ac0"/>
        <function-ref name="stop" scoped="" ref="0xb6f78d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb6f640e0" loc="63:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb6f640e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7333010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6f64830"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6f64d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6f64aa8"/>
        <function-ref name="overflow" scoped="" ref="0xb6f62010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6ffee60" loc="62:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6ffee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6f745e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6f74ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6f74858"/>
        <function-ref name="overflow" scoped="" ref="0xb6f74d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0xb6f61928" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0xb6f61928"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb6f61b00"/>
        <function-ref name="offset" scoped="" ref="0xb6f61be0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb6f61cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb6f59d98" loc="46:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6f59d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6f56010"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6f560f0"/>
        <function-ref name="led1On" scoped="" ref="0xb6f561d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6f562b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6f56390"/>
        <function-ref name="get" scoped="" ref="0xb6f56470"/>
        <function-ref name="led1Off" scoped="" ref="0xb6f56550"/>
        <function-ref name="led2Off" scoped="" ref="0xb6f568d0"/>
        <function-ref name="set" scoped="" ref="0xb6f56630"/>
        <function-ref name="led0On" scoped="" ref="0xb6f56710"/>
        <function-ref name="led2On" scoped="" ref="0xb6f567f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb6f52240" loc="50:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb6f52240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6f52418"/>
        <function-ref name="isInput" scoped="" ref="0xb6f524f8"/>
        <function-ref name="toggle" scoped="" ref="0xb6f525d8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6f526b8"/>
        <function-ref name="get" scoped="" ref="0xb6f52798"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6f52878"/>
        <function-ref name="set" scoped="" ref="0xb6f52958"/>
        <function-ref name="clr" scoped="" ref="0xb6f52a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6f53168" loc="46:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6f53168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6f53340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb6f52c28" loc="51:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb6f52c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6f52e00"/>
        <function-ref name="isInput" scoped="" ref="0xb6f52ee0"/>
        <function-ref name="toggle" scoped="" ref="0xb6f51010"/>
        <function-ref name="isOutput" scoped="" ref="0xb6f510f0"/>
        <function-ref name="get" scoped="" ref="0xb6f511d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6f512b0"/>
        <function-ref name="set" scoped="" ref="0xb6f51390"/>
        <function-ref name="clr" scoped="" ref="0xb6f51470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb6f534b0" loc="47:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6f534b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6f53688"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6f53768"/>
        <function-ref name="led1On" scoped="" ref="0xb6f53848"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6f53928"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6f53a08"/>
        <function-ref name="get" scoped="" ref="0xb6f53ae8"/>
        <function-ref name="led1Off" scoped="" ref="0xb6f53bc8"/>
        <function-ref name="led2Off" scoped="" ref="0xb6f52010"/>
        <function-ref name="set" scoped="" ref="0xb6f53ca8"/>
        <function-ref name="led0On" scoped="" ref="0xb6f53d88"/>
        <function-ref name="led2On" scoped="" ref="0xb6f53e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb6f51660" loc="52:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb6f51660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6f51838"/>
        <function-ref name="isInput" scoped="" ref="0xb6f51918"/>
        <function-ref name="toggle" scoped="" ref="0xb6f519f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6f51ad8"/>
        <function-ref name="get" scoped="" ref="0xb6f51bb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6f51c98"/>
        <function-ref name="set" scoped="" ref="0xb6f51d78"/>
        <function-ref name="clr" scoped="" ref="0xb6f51e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb6f41a70" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb6f41a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6f41c48"/>
        <function-ref name="isInput" scoped="" ref="0xb6f41d28"/>
        <function-ref name="toggle" scoped="" ref="0xb6f41e08"/>
        <function-ref name="isOutput" scoped="" ref="0xb6f41ee8"/>
        <function-ref name="get" scoped="" ref="0xb6f40010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6f400f0"/>
        <function-ref name="set" scoped="" ref="0xb6f401d0"/>
        <function-ref name="clr" scoped="" ref="0xb6f402b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb6f404c0" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb6f404c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6f40698"/>
        <function-ref name="isInput" scoped="" ref="0xb6f40778"/>
        <function-ref name="toggle" scoped="" ref="0xb6f40858"/>
        <function-ref name="isOutput" scoped="" ref="0xb6f40938"/>
        <function-ref name="get" scoped="" ref="0xb6f40a18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6f40af8"/>
        <function-ref name="set" scoped="" ref="0xb6f40bd8"/>
        <function-ref name="clr" scoped="" ref="0xb6f40cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb6f3f870" loc="47:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6f3f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6f3fa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb6f40ec8" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb6f40ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6f3f0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb6f3f1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb6f3f280"/>
        <function-ref name="isOutput" scoped="" ref="0xb6f3f360"/>
        <function-ref name="get" scoped="" ref="0xb6f3f440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6f3f520"/>
        <function-ref name="set" scoped="" ref="0xb6f3f600"/>
        <function-ref name="clr" scoped="" ref="0xb6f3f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0xb6f30768" loc="10:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0xb6f30768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6f2f330"/>
        <function-ref name="fired" scoped="" ref="0xb6f37520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6f37c28"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6f379d0"/>
        <function-ref name="getdt" scoped="" ref="0xb6f2f7e0"/>
        <function-ref name="gett0" scoped="" ref="0xb6f2f588"/>
        <function-ref name="isRunning" scoped="" ref="0xb6f37778"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6f30d90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6f2f010"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6f37048"/>
        <function-ref name="stop" scoped="" ref="0xb6f372c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendToSerial" ref="0xb6f27ae8" loc="44:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendToSerial" scoped="" ref="0xb6f27ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6f27cc0"/>
        <function-ref name="runTask" scoped="" ref="0xb6f27da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb6f39d00" loc="8:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb6f39d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb6f39ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb6f2e278" loc="12:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0xb6f2e278"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6f2e450"/>
        <function-ref name="stopDone" scoped="" ref="0xb6f2e530"/>
        <function-ref name="start" scoped="" ref="0xb6f2e610"/>
        <function-ref name="stop" scoped="" ref="0xb6f2e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0xb6f2e888" loc="13:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb6f2e888"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f2ea60"/>
        <function-ref name="receive" scoped="" ref="0xb6f2eb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb6f2d5f0" loc="16:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6f2d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f2d7c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f2d8a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f2d988"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f2da68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f2db48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xb6f2fb20" loc="11:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xb6f2fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6f2fcf8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6f2fdd8"/>
        <function-ref name="start" scoped="" ref="0xb6f2feb8"/>
        <function-ref name="stop" scoped="" ref="0xb6f2e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb6f2b238" loc="19:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6f2b238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f2b410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0xb6f2ece8" loc="14:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb6f2ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f2eec0"/>
        <function-ref name="receivedByte" scoped="" ref="0xb6f2d010"/>
        <function-ref name="receive" scoped="" ref="0xb6f2d0f0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb6f2d1d0"/>
        <function-ref name="receiveDone" scoped="" ref="0xb6f2d2b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb6f2d390"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f2d470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6f38060" loc="9:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6f38060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6f38238"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6f38318"/>
        <function-ref name="led1On" scoped="" ref="0xb6f383f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6f384d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6f385b8"/>
        <function-ref name="get" scoped="" ref="0xb6f38698"/>
        <function-ref name="led1Off" scoped="" ref="0xb6f38778"/>
        <function-ref name="led2Off" scoped="" ref="0xb6f38af8"/>
        <function-ref name="set" scoped="" ref="0xb6f38858"/>
        <function-ref name="led0On" scoped="" ref="0xb6f38938"/>
        <function-ref name="led2On" scoped="" ref="0xb6f38a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb6f2c9f0" loc="18:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6f2c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f2cbc8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f2cca8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f2cd88"/>
        <function-ref name="cancel" scoped="" ref="0xb6f2ce68"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f2b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendToRadio" ref="0xb6f26308" loc="45:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendToRadio" scoped="" ref="0xb6f26308"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6f26560"/>
        <function-ref name="runTask" scoped="" ref="0xb6f26640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb6f2dce0" loc="17:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6f2dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6f2deb8"/>
        <function-ref name="source" scoped="" ref="0xb6f2c010"/>
        <function-ref name="address" scoped="" ref="0xb6f2c0f0"/>
        <function-ref name="destination" scoped="" ref="0xb6f2c1d0"/>
        <function-ref name="setSource" scoped="" ref="0xb6f2c2b0"/>
        <function-ref name="setDestination" scoped="" ref="0xb6f2c390"/>
        <function-ref name="type" scoped="" ref="0xb6f2c470"/>
        <function-ref name="setType" scoped="" ref="0xb6f2c550"/>
        <function-ref name="isForMe" scoped="" ref="0xb6f2c630"/>
        <function-ref name="setGroup" scoped="" ref="0xb6f2c710"/>
        <function-ref name="localGroup" scoped="" ref="0xb6f2c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6efe660" loc="45:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6efe660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6e06170"/>
        <function-ref name="fired" scoped="" ref="0xb6ef73f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6ef7b00"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6ef78a8"/>
        <function-ref name="getdt" scoped="" ref="0xb6e06620"/>
        <function-ref name="gett0" scoped="" ref="0xb6e063c8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6ef7650"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6efec88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6ef7e20"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6efef08"/>
        <function-ref name="stop" scoped="" ref="0xb6ef71a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb6ef9b28" loc="49:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb6ef9b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6ef56a8"/>
        <function-ref name="fired" scoped="" ref="0xb6ef6938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6ef5068"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6ef6de8"/>
        <function-ref name="getdt" scoped="" ref="0xb6ef5b58"/>
        <function-ref name="gett0" scoped="" ref="0xb6ef5900"/>
        <function-ref name="isRunning" scoped="" ref="0xb6ef6b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6ef61e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6ef5388"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6ef6460"/>
        <function-ref name="stop" scoped="" ref="0xb6ef66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb6ef3bb8" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb6ef3bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6eef6a8"/>
        <function-ref name="fired" scoped="" ref="0xb6ef0948"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6eef068"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6ef0df8"/>
        <function-ref name="getdt" scoped="" ref="0xb6eefb58"/>
        <function-ref name="gett0" scoped="" ref="0xb6eef900"/>
        <function-ref name="isRunning" scoped="" ref="0xb6ef0ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6ef01f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6eef388"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6ef0470"/>
        <function-ref name="stop" scoped="" ref="0xb6ef06f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6eebba8" loc="47:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6eebba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6eed210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6ef3408" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6ef3408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6ef35e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xb6ee75f0" loc="29:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xb6ee75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6ee7d40"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6ee1288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6ee1010"/>
        <function-ref name="overflow" scoped="" ref="0xb6ee1500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6ee9290" loc="27:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6ee9290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6ee9468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xb6ee39a0" loc="28:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xb6ee39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6ee8e68"/>
        <function-ref name="fired" scoped="" ref="0xb6ee8638"/>
        <function-ref name="startAt" scoped="" ref="0xb6ee8b28"/>
        <function-ref name="isRunning" scoped="" ref="0xb6ee88b0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6ee7110"/>
        <function-ref name="start" scoped="" ref="0xb6ee8120"/>
        <function-ref name="stop" scoped="" ref="0xb6ee83c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6e5cca8" loc="61:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6e5cca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6e5a170"/>
        <function-ref name="fired" scoped="" ref="0xb6e5b928"/>
        <function-ref name="startAt" scoped="" ref="0xb6e5be18"/>
        <function-ref name="isRunning" scoped="" ref="0xb6e5bba0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6e5a3e8"/>
        <function-ref name="start" scoped="" ref="0xb6e5b410"/>
        <function-ref name="stop" scoped="" ref="0xb6e5b6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6e5c870" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6e5c870"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb73c65d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb73c65d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6e5ca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6e5a718" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6e5a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6e5ae68"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6e58388"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6e58110"/>
        <function-ref name="overflow" scoped="" ref="0xb6e58600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xb660d640" loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb660d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb660d818"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb660d8f8"/>
        <function-ref name="getControlA" scoped="" ref="0xb660d9d8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb660dab8"/>
        <function-ref name="setControlB" scoped="" ref="0xb660db98"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb660dc78"/>
        <function-ref name="getControlB" scoped="" ref="0xb660dd58"/>
        <function-ref name="setControlA" scoped="" ref="0xb660de38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb66137c8" loc="61:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb66137c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6612c78"/>
        <function-ref name="fired" scoped="" ref="0xb6612448"/>
        <function-ref name="startAt" scoped="" ref="0xb6612938"/>
        <function-ref name="isRunning" scoped="" ref="0xb66126c0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6612ef0"/>
        <function-ref name="start" scoped="" ref="0xb6613f18"/>
        <function-ref name="stop" scoped="" ref="0xb66121d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6613390" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6613390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6613568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6611258" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6611258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb66119a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6611e98"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6611c20"/>
        <function-ref name="overflow" scoped="" ref="0xb6610130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xb660ba50" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb660ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb660bc28"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb660bd08"/>
        <function-ref name="controlABusy" scoped="" ref="0xb660bde8"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb660bec8"/>
        <function-ref name="countBusy" scoped="" ref="0xb6609010"/>
        <function-ref name="compareABusy" scoped="" ref="0xb66090f0"/>
        <function-ref name="getAssr" scoped="" ref="0xb66091d0"/>
        <function-ref name="setAssr" scoped="" ref="0xb66092b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xb660c050" loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb660c050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb660b5a8"/>
        <function-ref name="fired" scoped="" ref="0xb660cbb0"/>
        <function-ref name="get" scoped="" ref="0xb660c698"/>
        <function-ref name="reset" scoped="" ref="0xb660ce28"/>
        <function-ref name="isOn" scoped="" ref="0xb660b820"/>
        <function-ref name="set" scoped="" ref="0xb660c910"/>
        <function-ref name="start" scoped="" ref="0xb660b0b8"/>
        <function-ref name="stop" scoped="" ref="0xb660b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6610420" loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6610420"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb660eee0"/>
        <function-ref name="test" scoped="" ref="0xb660e9f0"/>
        <function-ref name="get" scoped="" ref="0xb6610a68"/>
        <function-ref name="setScale" scoped="" ref="0xb660d170"/>
        <function-ref name="getScale" scoped="" ref="0xb660d410"/>
        <function-ref name="reset" scoped="" ref="0xb660e288"/>
        <function-ref name="overflow" scoped="" ref="0xb660e010"/>
        <function-ref name="isOn" scoped="" ref="0xb660ec68"/>
        <function-ref name="set" scoped="" ref="0xb6610ce0"/>
        <function-ref name="start" scoped="" ref="0xb660e500"/>
        <function-ref name="stop" scoped="" ref="0xb660e778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6e9bb68" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6e9bb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6e9bd40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6e9be20"/>
        <function-ref name="getControlA" scoped="" ref="0xb6e9bf00"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6e9a010"/>
        <function-ref name="setControlB" scoped="" ref="0xb6e9a0f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6e9a1d0"/>
        <function-ref name="getControlB" scoped="" ref="0xb6e9a2b0"/>
        <function-ref name="setControlA" scoped="" ref="0xb6e9a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb6e97280" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb6e97280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb6e97458"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb6e97538"/>
        <function-ref name="controlABusy" scoped="" ref="0xb6e97618"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb6e976f8"/>
        <function-ref name="countBusy" scoped="" ref="0xb6e977d8"/>
        <function-ref name="compareABusy" scoped="" ref="0xb6e978b8"/>
        <function-ref name="getAssr" scoped="" ref="0xb6e97998"/>
        <function-ref name="setAssr" scoped="" ref="0xb6e97a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6e9a6b8" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6e9a6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6e99c90"/>
        <function-ref name="fired" scoped="" ref="0xb6e992b0"/>
        <function-ref name="get" scoped="" ref="0xb6e9ad00"/>
        <function-ref name="reset" scoped="" ref="0xb6e99528"/>
        <function-ref name="isOn" scoped="" ref="0xb6e99f08"/>
        <function-ref name="set" scoped="" ref="0xb6e99010"/>
        <function-ref name="start" scoped="" ref="0xb6e997a0"/>
        <function-ref name="stop" scoped="" ref="0xb6e99a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6e9f890" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6e9f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6e9b300"/>
        <function-ref name="test" scoped="" ref="0xb6e9cdf0"/>
        <function-ref name="get" scoped="" ref="0xb6e9fed8"/>
        <function-ref name="setScale" scoped="" ref="0xb6e9b578"/>
        <function-ref name="getScale" scoped="" ref="0xb6e9b818"/>
        <function-ref name="reset" scoped="" ref="0xb6e9c688"/>
        <function-ref name="overflow" scoped="" ref="0xb6e9c410"/>
        <function-ref name="isOn" scoped="" ref="0xb6e9b088"/>
        <function-ref name="set" scoped="" ref="0xb6e9c170"/>
        <function-ref name="start" scoped="" ref="0xb6e9c900"/>
        <function-ref name="stop" scoped="" ref="0xb6e9cb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6e91af0" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6e91af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6e91cc8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6e91da8"/>
        <function-ref name="getControlA" scoped="" ref="0xb6e91e88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6e8f010"/>
        <function-ref name="setControlB" scoped="" ref="0xb6e8f0f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6e8f1d0"/>
        <function-ref name="getControlB" scoped="" ref="0xb6e8f2b0"/>
        <function-ref name="setControlA" scoped="" ref="0xb6e8f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xb6e8d1e0" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb6e8d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb6e8d3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb6e8d640" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb6e8d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb6e8d818"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb6e8d8f8"/>
        <function-ref name="controlABusy" scoped="" ref="0xb6e8d9d8"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb6e8dab8"/>
        <function-ref name="countBusy" scoped="" ref="0xb6e8db98"/>
        <function-ref name="compareABusy" scoped="" ref="0xb6e8dc78"/>
        <function-ref name="getAssr" scoped="" ref="0xb6e8dd58"/>
        <function-ref name="setAssr" scoped="" ref="0xb6e8de38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6e8f6b8" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6e8f6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6e8ec90"/>
        <function-ref name="fired" scoped="" ref="0xb6e8e2b0"/>
        <function-ref name="get" scoped="" ref="0xb6e8fd00"/>
        <function-ref name="reset" scoped="" ref="0xb6e8e528"/>
        <function-ref name="isOn" scoped="" ref="0xb6e8ef08"/>
        <function-ref name="set" scoped="" ref="0xb6e8e010"/>
        <function-ref name="start" scoped="" ref="0xb6e8e7a0"/>
        <function-ref name="stop" scoped="" ref="0xb6e8ea18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6e93780" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6e93780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6e91288"/>
        <function-ref name="test" scoped="" ref="0xb6e92ce8"/>
        <function-ref name="get" scoped="" ref="0xb6e93dc8"/>
        <function-ref name="setScale" scoped="" ref="0xb6e91500"/>
        <function-ref name="getScale" scoped="" ref="0xb6e917a0"/>
        <function-ref name="reset" scoped="" ref="0xb6e92580"/>
        <function-ref name="overflow" scoped="" ref="0xb6e92308"/>
        <function-ref name="isOn" scoped="" ref="0xb6e91010"/>
        <function-ref name="set" scoped="" ref="0xb6e92068"/>
        <function-ref name="start" scoped="" ref="0xb6e927f8"/>
        <function-ref name="stop" scoped="" ref="0xb6e92a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xb6e3e9a8" loc="74:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xb6e3e9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6e3eb80"/>
        <function-ref name="runTask" scoped="" ref="0xb6e3ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb6e3f010" loc="49:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6e3f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6e3e4e0"/>
        <function-ref name="fired" scoped="" ref="0xb6e3fc78"/>
        <function-ref name="startAt" scoped="" ref="0xb6e3e1a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6e3fef0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6e3e758"/>
        <function-ref name="start" scoped="" ref="0xb6e3f760"/>
        <function-ref name="stop" scoped="" ref="0xb6e3fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6eeac60" loc="48:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6eeac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6e41790"/>
        <function-ref name="fired" scoped="" ref="0xb6e56a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6e41150"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6e56ed0"/>
        <function-ref name="getdt" scoped="" ref="0xb6e41c40"/>
        <function-ref name="gett0" scoped="" ref="0xb6e419e8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6e56c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6e562c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6e41470"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6e56548"/>
        <function-ref name="stop" scoped="" ref="0xb6e567c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xb6e11050" loc="71:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xb6e11050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6e11228"/>
        <function-ref name="runTask" scoped="" ref="0xb6e11308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xb6e15e30" loc="49:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xb6e15e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6e12920"/>
        <function-ref name="fired" scoped="" ref="0xb6e13bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6e122e0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6e12088"/>
        <function-ref name="getdt" scoped="" ref="0xb6e12dd0"/>
        <function-ref name="gett0" scoped="" ref="0xb6e12b78"/>
        <function-ref name="isRunning" scoped="" ref="0xb6e13e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6e13468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6e12600"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6e136e8"/>
        <function-ref name="stop" scoped="" ref="0xb6e13968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6e3ba60" loc="48:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6e3ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6e15670"/>
        <function-ref name="fired" scoped="" ref="0xb6e16840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6e15010"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6e16d10"/>
        <function-ref name="getdt" scoped="" ref="0xb6e15b40"/>
        <function-ref name="gett0" scoped="" ref="0xb6e158d8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6e16aa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6e160b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6e15340"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6e16348"/>
        <function-ref name="stop" scoped="" ref="0xb6e165d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6e0f460" loc="48:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6e0f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6e0faa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb6e0fdf8" loc="49:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6e0fdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6e0e570"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6e0ea60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6e0e7e8"/>
        <function-ref name="overflow" scoped="" ref="0xb6e0ecd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6e03200" loc="41:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6e03200"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6e033d8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6e034b8"/>
        <function-ref name="start" scoped="" ref="0xb6e03598"/>
        <function-ref name="stop" scoped="" ref="0xb6e03678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6e00330" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6e00330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6e00508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6e00688" loc="48:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6e00688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e00860"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6e00940"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e00a20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e00b00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6e00be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6e03ad8" loc="43:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6e03ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e03cb0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e03d90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e03e70"/>
        <function-ref name="cancel" scoped="" ref="0xb6e02010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e020f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6e02bf0" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6e02bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e02dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6df9830" loc="52:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6df9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6df9a08"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6df9ae8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6df9bc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6df9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6e02558" loc="44:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6e02558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e02730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6dffaf0" loc="51:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6dffaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6dffcc8"/>
        <function-ref name="noAck" scoped="" ref="0xb6dffda8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6dffe88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6df21b8" loc="53:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6df21b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6df2390"/>
        <function-ref name="setRetries" scoped="" ref="0xb6df2470"/>
        <function-ref name="getRetries" scoped="" ref="0xb6df2550"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6df2630"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6df2710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6e00d78" loc="49:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6e00d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6dff010"/>
        <function-ref name="source" scoped="" ref="0xb6dff0f0"/>
        <function-ref name="address" scoped="" ref="0xb6dff1d0"/>
        <function-ref name="destination" scoped="" ref="0xb6dff2b0"/>
        <function-ref name="setSource" scoped="" ref="0xb6dff390"/>
        <function-ref name="setDestination" scoped="" ref="0xb6dff470"/>
        <function-ref name="type" scoped="" ref="0xb6dff550"/>
        <function-ref name="setType" scoped="" ref="0xb6dff630"/>
        <function-ref name="isForMe" scoped="" ref="0xb6dff710"/>
        <function-ref name="setGroup" scoped="" ref="0xb6dff7f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb6dff8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6df3b10" loc="54:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6df3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6df3ce8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6df3dc8"/>
        <function-ref name="getChannel" scoped="" ref="0xb6df3ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0xb6dec4a0" loc="56:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb6dec4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6df8010"/>
        <function-ref name="clear" scoped="" ref="0xb6df83c0"/>
        <function-ref name="isValid" scoped="" ref="0xb6decbf0"/>
        <function-ref name="set" scoped="" ref="0xb6df8770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6df8ea8" loc="57:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6df8ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6dedab0"/>
        <function-ref name="clear" scoped="" ref="0xb6dede60"/>
        <function-ref name="isValid" scoped="" ref="0xb6ded700"/>
        <function-ref name="set" scoped="" ref="0xb6deb230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6debca8" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6debca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6debe80"/>
        <function-ref name="stopDone" scoped="" ref="0xb6de8010"/>
        <function-ref name="start" scoped="" ref="0xb6de80f0"/>
        <function-ref name="stop" scoped="" ref="0xb6de81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6ddc4d8" loc="66:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6ddc4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6dda0b8"/>
        <function-ref name="get" scoped="" ref="0xb6ddcde0"/>
        <function-ref name="isSet" scoped="" ref="0xb6ddcb20"/>
        <function-ref name="set" scoped="" ref="0xb6dda378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6dd5130" loc="71:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6dd5130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6dd5c30"/>
        <function-ref name="clear" scoped="" ref="0xb6dd4010"/>
        <function-ref name="isValid" scoped="" ref="0xb6dd5880"/>
        <function-ref name="set" scoped="" ref="0xb6dd43c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6de7d20" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6de7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6de7ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6de5e70" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6de5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6de4070"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6de4150"/>
        <function-ref name="getPayload" scoped="" ref="0xb6de4230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6de4310"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6de43f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6de8630" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6de8630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6de8808"/>
        <function-ref name="getPayload" scoped="" ref="0xb6de88e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6de89c8"/>
        <function-ref name="cancel" scoped="" ref="0xb6de8aa8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6de8b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6de76a8" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6de76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6de7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6ddd0f0" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6ddd0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6dddcb8"/>
        <function-ref name="get" scoped="" ref="0xb6ddd9f8"/>
        <function-ref name="isSet" scoped="" ref="0xb6ddd738"/>
        <function-ref name="set" scoped="" ref="0xb6ddc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6de3898" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6de3898"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6de3a70"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6de3b50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6de3c30"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6de3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6de7010" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6de7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6de71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb6dd9750" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6dd9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6dd6280"/>
        <function-ref name="clear" scoped="" ref="0xb6dd6630"/>
        <function-ref name="isValid" scoped="" ref="0xb6dd9ea0"/>
        <function-ref name="set" scoped="" ref="0xb6dd69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6dd7b30" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6dd7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6dd9200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6ddec68" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6ddec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6de1868"/>
        <function-ref name="get" scoped="" ref="0xb6de15a8"/>
        <function-ref name="isSet" scoped="" ref="0xb6de12e8"/>
        <function-ref name="set" scoped="" ref="0xb6de1b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6de3310" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6de3310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6de34e8"/>
        <function-ref name="noAck" scoped="" ref="0xb6de35c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6de36a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb6de5438" loc="53:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb6de5438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6de5610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6de3eb8" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6de3eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6de20c0"/>
        <function-ref name="setRetries" scoped="" ref="0xb6de21a0"/>
        <function-ref name="getRetries" scoped="" ref="0xb6de2280"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6de2360"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6de2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6de4588" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6de4588"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6de4760"/>
        <function-ref name="source" scoped="" ref="0xb6de4840"/>
        <function-ref name="address" scoped="" ref="0xb6de4920"/>
        <function-ref name="destination" scoped="" ref="0xb6de4a00"/>
        <function-ref name="setSource" scoped="" ref="0xb6de4ae0"/>
        <function-ref name="setDestination" scoped="" ref="0xb6de4bc0"/>
        <function-ref name="type" scoped="" ref="0xb6de4ca0"/>
        <function-ref name="setType" scoped="" ref="0xb6de4d80"/>
        <function-ref name="isForMe" scoped="" ref="0xb6de4e60"/>
        <function-ref name="setGroup" scoped="" ref="0xb6de3010"/>
        <function-ref name="localGroup" scoped="" ref="0xb6de30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6de2600" loc="62:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6de2600"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6de2858"/>
        <function-ref name="setChannel" scoped="" ref="0xb6de2938"/>
        <function-ref name="getChannel" scoped="" ref="0xb6de2a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6dd7638" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6dd7638"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6dd7810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb6de5b18" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb6de5b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6de5cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6dd4d78" loc="41:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6dd4d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6dd0010"/>
        <function-ref name="stopDone" scoped="" ref="0xb6dd00f0"/>
        <function-ref name="start" scoped="" ref="0xb6dd01d0"/>
        <function-ref name="stop" scoped="" ref="0xb6dd02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6db8580" loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6db8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6db7170"/>
        <function-ref name="get" scoped="" ref="0xb6db8e88"/>
        <function-ref name="isSet" scoped="" ref="0xb6db8bc8"/>
        <function-ref name="set" scoped="" ref="0xb6db7430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0xb6dcb778" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0xb6dcb778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6dcb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0xb6dc3ed0" loc="72:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0xb6dc3ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6dca188"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6dca268"/>
        <function-ref name="request" scoped="" ref="0xb6dca348"/>
        <function-ref name="granted" scoped="" ref="0xb6dca428"/>
        <function-ref name="isOwner" scoped="" ref="0xb6dca508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6dcfe10" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6dcfe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6dce010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6dd0710" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6dd0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6dd08e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6dd09c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6dd0aa8"/>
        <function-ref name="cancel" scoped="" ref="0xb6dd0b88"/>
        <function-ref name="sendDone" scoped="" ref="0xb6dd0c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6dcf798" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6dcf798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6dcf970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6dbc098" loc="74:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6dbc098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb6dbc270"/>
        <function-ref name="address" scoped="" ref="0xb6dbc350"/>
        <function-ref name="destination" scoped="" ref="0xb6dbc430"/>
        <function-ref name="setSource" scoped="" ref="0xb6dbc510"/>
        <function-ref name="setDestination" scoped="" ref="0xb6dbc5f0"/>
        <function-ref name="pan" scoped="" ref="0xb6dbc6d0"/>
        <function-ref name="setPan" scoped="" ref="0xb6dbc7b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6dbc890"/>
        <function-ref name="localPan" scoped="" ref="0xb6dbc970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0xb6dbcbf8" loc="75:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0xb6dbcbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6dbcdd0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6dbceb0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6dc2010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6dc20f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6dc21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6dba218" loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6dba218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6dbade0"/>
        <function-ref name="get" scoped="" ref="0xb6dbab20"/>
        <function-ref name="isSet" scoped="" ref="0xb6dba860"/>
        <function-ref name="set" scoped="" ref="0xb6db80b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6dc2978" loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6dc2978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6dc2b50"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6dc2c30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6dc2d10"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6dc2df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0xb6dcdd28" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb6dcdd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6dcdf00"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6dcc010"/>
        <function-ref name="getPayload" scoped="" ref="0xb6dcc0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6dcc1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6dcc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6dcf100" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6dcf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6dcf2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb6db58c0" loc="94:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6db58c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6db44d8"/>
        <function-ref name="clear" scoped="" ref="0xb6db4888"/>
        <function-ref name="isValid" scoped="" ref="0xb6db4128"/>
        <function-ref name="set" scoped="" ref="0xb6db4c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6db7cd8" loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6db7cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6db5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6dc1e18" loc="88:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6dc1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6dbba08"/>
        <function-ref name="get" scoped="" ref="0xb6dbb748"/>
        <function-ref name="isSet" scoped="" ref="0xb6dbb488"/>
        <function-ref name="set" scoped="" ref="0xb6dbbcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6dc23f0" loc="78:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6dc23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6dc25c8"/>
        <function-ref name="noAck" scoped="" ref="0xb6dc26a8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6dc2788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb6dc6ab8" loc="68:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb6dc6ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6dc6c90"/>
        <function-ref name="getPayload" scoped="" ref="0xb6dc6d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6dc6e50"/>
        <function-ref name="cancel" scoped="" ref="0xb6dcb010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6dcb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb6dce538" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb6dce538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6dce710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6dc1010" loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6dc1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6dc11e8"/>
        <function-ref name="setRetries" scoped="" ref="0xb6dc12c8"/>
        <function-ref name="getRetries" scoped="" ref="0xb6dc13a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6dc1488"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6dc1568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6dc1728" loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6dc1728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6dc1900"/>
        <function-ref name="setChannel" scoped="" ref="0xb6dc19e0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6dc1ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6dcd010" loc="63:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6dcd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6dcd1e8"/>
        <function-ref name="source" scoped="" ref="0xb6dcd2c8"/>
        <function-ref name="address" scoped="" ref="0xb6dcd3a8"/>
        <function-ref name="destination" scoped="" ref="0xb6dcd488"/>
        <function-ref name="setSource" scoped="" ref="0xb6dcd568"/>
        <function-ref name="setDestination" scoped="" ref="0xb6dcd648"/>
        <function-ref name="type" scoped="" ref="0xb6dcd728"/>
        <function-ref name="setType" scoped="" ref="0xb6dcd808"/>
        <function-ref name="isForMe" scoped="" ref="0xb6dcd8e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb6dcd9c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb6dcdaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6db33a0" loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6db33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6db3ea0"/>
        <function-ref name="clear" scoped="" ref="0xb6db1280"/>
        <function-ref name="isValid" scoped="" ref="0xb6db3af0"/>
        <function-ref name="set" scoped="" ref="0xb6db1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb6dcb328" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb6dcb328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6dcb500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6db77e0" loc="91:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6db77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6db79b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb6dcec18" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb6dcec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6dcedf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0xb6da6a98" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="RF230RadioC.TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6da6a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6da6c70"/>
        <function-ref name="suspend" scoped="" ref="0xb6da6d50"/>
        <function-ref name="resume" scoped="" ref="0xb6da6e30"/>
        <function-ref name="run" scoped="" ref="0xb6da6f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0xb6d8a488" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0xb6d8a488"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6d8a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0xb6d95098" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb6d95098"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0xb6d95270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0xb6d8b500" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb6d8b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6d8b6d8"/>
        <function-ref name="checkFrame" scoped="" ref="0xb6d8b7b8"/>
        <function-ref name="source" scoped="" ref="0xb6d8b898"/>
        <function-ref name="destination" scoped="" ref="0xb6d8b978"/>
        <function-ref name="setSource" scoped="" ref="0xb6d8ba58"/>
        <function-ref name="setDestination" scoped="" ref="0xb6d8bb38"/>
        <function-ref name="setGroup" scoped="" ref="0xb6d8bc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0xb6d90a90" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0xb6d90a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0xb6d90c68"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0xb6d90d48"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0xb6d90e28"/>
        <function-ref name="getTransmitTime" scoped="" ref="0xb6d90f08"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0xb6d9f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6d77270" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6d77270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6d77448"/>
        <function-ref name="wait" scoped="" ref="0xb6d77528"/>
        <function-ref name="cancel" scoped="" ref="0xb6d77608"/>
        <function-ref name="isFree" scoped="" ref="0xb6d776e8"/>
        <function-ref name="getNow" scoped="" ref="0xb6d777c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0xb6d73530" loc="62:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0xb6d73530"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6d73708"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6d737e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6d738c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6d739a8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6d73a88"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6d73b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb6d73ef8" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6d73ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6d7aab0"/>
        <function-ref name="clear" scoped="" ref="0xb6d7ae60"/>
        <function-ref name="isValid" scoped="" ref="0xb6d7a700"/>
        <function-ref name="set" scoped="" ref="0xb6d79230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0xb6da0a18" loc="43:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0xb6da0a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6da0bf0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6da0cd0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6da0db0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb6da0e90"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb6da4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0xb6d96368" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0xb6d96368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0xb6d96540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0xb6d9bcf8" loc="44:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb6d9bcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb6d9bed0"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb6da3010"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6da30f0"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb6da31d0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb6da32b0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb6da3390"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6da3470"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6da3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xb6d7cd18" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6d7cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6d7cef0"/>
        <function-ref name="getDSN" scoped="" ref="0xb6d9a010"/>
        <function-ref name="setFCF" scoped="" ref="0xb6d9a0f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6d9a1d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6d9a2b0"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6d9a390"/>
        <function-ref name="setDSN" scoped="" ref="0xb6d9a470"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6d9a550"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6d9a630"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6d9a710"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6d9a7f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6d9a8d0"/>
        <function-ref name="localAddr" scoped="" ref="0xb6d9a9b0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6d9ab10"/>
        <function-ref name="localPan" scoped="" ref="0xb6d9abf0"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6d9acd0"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6d9adb0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6d9ae90"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6d8f010"/>
        <function-ref name="isForMe" scoped="" ref="0xb6d8f0f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6d8f1d0"/>
        <function-ref name="getFCF" scoped="" ref="0xb6d8f2b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6d8f390"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6d8f470"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6d8f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0xb6d97410" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb6d97410"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb6d975e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb6d976c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb6d977a8"/>
        <function-ref name="getSender" scoped="" ref="0xb6d97888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0xb6d93198" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb6d93198"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb6d93370"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb6d93450"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb6d93530"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb6d93610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb6d40918" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6d40918"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6d40b00"/>
        <function-ref name="wait" scoped="" ref="0xb6d40be0"/>
        <function-ref name="cancel" scoped="" ref="0xb6d40cc0"/>
        <function-ref name="isFree" scoped="" ref="0xb6d40da0"/>
        <function-ref name="getNow" scoped="" ref="0xb6d40e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb6d3f7a8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6d3f7a8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb73c67d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb73c67d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb71db3a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6d26c68"/>
        <function-ref name="fired" scoped="" ref="0xb6d26438"/>
        <function-ref name="startAt" scoped="" ref="0xb6d26928"/>
        <function-ref name="isRunning" scoped="" ref="0xb6d266b0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6d26ee0"/>
        <function-ref name="start" scoped="" ref="0xb6d3fef8"/>
        <function-ref name="stop" scoped="" ref="0xb6d261c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6d3f010" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6d3f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6d3f1e8"/>
        <function-ref name="suspend" scoped="" ref="0xb6d3f2c8"/>
        <function-ref name="resume" scoped="" ref="0xb6d3f3a8"/>
        <function-ref name="run" scoped="" ref="0xb6d3f488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb65c0608" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb65c0608"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb65c07f0"/>
        <function-ref name="wait" scoped="" ref="0xb65c08d0"/>
        <function-ref name="cancel" scoped="" ref="0xb65c09b0"/>
        <function-ref name="isFree" scoped="" ref="0xb65c0a90"/>
        <function-ref name="getNow" scoped="" ref="0xb65c0b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb65c0e00" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb65c0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb71db3a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb65be350"/>
        <function-ref name="fired" scoped="" ref="0xb65bfa88"/>
        <function-ref name="startAt" scoped="" ref="0xb65be010"/>
        <function-ref name="isRunning" scoped="" ref="0xb65bfd00"/>
        <function-ref name="getAlarm" scoped="" ref="0xb65be5c8"/>
        <function-ref name="start" scoped="" ref="0xb65bf570"/>
        <function-ref name="stop" scoped="" ref="0xb65bf810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb65be7d8" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb65be7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb65be9b0"/>
        <function-ref name="suspend" scoped="" ref="0xb65bea90"/>
        <function-ref name="resume" scoped="" ref="0xb65beb70"/>
        <function-ref name="run" scoped="" ref="0xb65bec50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6cbd250" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6cbd250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6cbd428"/>
        <function-ref name="cancel" scoped="" ref="0xb6cbd508"/>
        <function-ref name="sendDone" scoped="" ref="0xb6cbd5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6cbd748" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6cbd748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6cbd920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6cbfef0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6cbfef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6cbe0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6cc0850" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6cc0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cc0a28"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6cc0b08"/>
        <function-ref name="getPayload" scoped="" ref="0xb6cc0be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6cc0cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6cc0da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6cbf010" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6cbf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6cbf1f8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6cbf2d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6cbf3b8"/>
        <function-ref name="cancel" scoped="" ref="0xb6cbf498"/>
        <function-ref name="sendDone" scoped="" ref="0xb6cbf578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6cbfb30" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6cbfb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6cbfd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6cbea40" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6cbea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cbec18"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6cbecf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6cbedd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6cbeeb8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6cbd010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6cbd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6cbda80" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6cbda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6cbdc58"/>
        <function-ref name="checkFrame" scoped="" ref="0xb6cbdd38"/>
        <function-ref name="source" scoped="" ref="0xb6cbde18"/>
        <function-ref name="destination" scoped="" ref="0xb6cbdef8"/>
        <function-ref name="setSource" scoped="" ref="0xb6cbc010"/>
        <function-ref name="setDestination" scoped="" ref="0xb6cbc0f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb6cbc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6cbf750" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6cbf750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6cbf938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb6cbe2e8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb6cbe2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6cbe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6cc1c28" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6cc1c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6cc1e00"/>
        <function-ref name="source" scoped="" ref="0xb6cc1ee0"/>
        <function-ref name="address" scoped="" ref="0xb6cc0010"/>
        <function-ref name="destination" scoped="" ref="0xb6cc00f0"/>
        <function-ref name="setSource" scoped="" ref="0xb6cc01d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb6cc02b0"/>
        <function-ref name="type" scoped="" ref="0xb6cc0390"/>
        <function-ref name="setType" scoped="" ref="0xb6cc0470"/>
        <function-ref name="isForMe" scoped="" ref="0xb6cc0550"/>
        <function-ref name="setGroup" scoped="" ref="0xb6cc0630"/>
        <function-ref name="localGroup" scoped="" ref="0xb6cc0710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb6cbe6c8" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb6cbe6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6cbe8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb65ac330" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb65ac330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65ac508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb65add58" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb65add58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb65ac010"/>
        <function-ref name="cancel" scoped="" ref="0xb65ac0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb65ac1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb65afa68" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb65afa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb65afc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb65b03f0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb65b03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65b05c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65b06a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb65b0788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65b0868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb65b0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb65b0b20" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb65b0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb65b0d08"/>
        <function-ref name="getPayload" scoped="" ref="0xb65b0de8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65b0ec8"/>
        <function-ref name="cancel" scoped="" ref="0xb65af010"/>
        <function-ref name="sendDone" scoped="" ref="0xb65af0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb65af6a8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb65af6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65af890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb65b1010" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb65b1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65b11e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65b12c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65b13a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb65b1488"/>
        <function-ref name="headerLength" scoped="" ref="0xb65b1568"/>
        <function-ref name="metadataLength" scoped="" ref="0xb65b1648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb65ac668" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb65ac668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb65ac8c0"/>
        <function-ref name="checkFrame" scoped="" ref="0xb65ac9a0"/>
        <function-ref name="source" scoped="" ref="0xb65aca80"/>
        <function-ref name="destination" scoped="" ref="0xb65acb60"/>
        <function-ref name="setSource" scoped="" ref="0xb65acc40"/>
        <function-ref name="setDestination" scoped="" ref="0xb65acd20"/>
        <function-ref name="setGroup" scoped="" ref="0xb65ace00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb65ab010" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb65ab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb65ab1e8"/>
        <function-ref name="changed" scoped="" ref="0xb65ab2c8"/>
        <function-ref name="amGroup" scoped="" ref="0xb65ab3a8"/>
        <function-ref name="setAddress" scoped="" ref="0xb65ab488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb65ad5c0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb65ad5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65ad798"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65ad878"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65ad958"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb65ada38"/>
        <function-ref name="headerLength" scoped="" ref="0xb65adb18"/>
        <function-ref name="metadataLength" scoped="" ref="0xb65adbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb65af2c8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb65af2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65af4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb65afe48" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb65afe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65ad050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb65b1788" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb65b1788"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb65b1960"/>
        <function-ref name="source" scoped="" ref="0xb65b1a40"/>
        <function-ref name="address" scoped="" ref="0xb65b1b20"/>
        <function-ref name="destination" scoped="" ref="0xb65b1c00"/>
        <function-ref name="setSource" scoped="" ref="0xb65b1ce0"/>
        <function-ref name="setDestination" scoped="" ref="0xb65b1dc0"/>
        <function-ref name="type" scoped="" ref="0xb65b1ea0"/>
        <function-ref name="setType" scoped="" ref="0xb65b0010"/>
        <function-ref name="isForMe" scoped="" ref="0xb65b00f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb65b01d0"/>
        <function-ref name="localGroup" scoped="" ref="0xb65b02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb65ad248" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb65ad248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65ad430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xb6cd0820" loc="54:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6cd0820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb6cd09f8"/>
        <function-ref name="changed" scoped="" ref="0xb6cd0ad8"/>
        <function-ref name="amGroup" scoped="" ref="0xb6cd0bb8"/>
        <function-ref name="setAddress" scoped="" ref="0xb6cd0c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6cb8c40" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6cb8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6cb8e18"/>
        <function-ref name="cancel" scoped="" ref="0xb6cb8ef8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6cb7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb6cb7150" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6cb7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6cb7328"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6cb7408"/>
        <function-ref name="request" scoped="" ref="0xb6cb74e8"/>
        <function-ref name="granted" scoped="" ref="0xb6cb75c8"/>
        <function-ref name="isOwner" scoped="" ref="0xb6cb76a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6cb8718" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6cb8718"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6cb88f0"/>
        <function-ref name="cancel" scoped="" ref="0xb6cb89d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6cb8ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6c76490" loc="86:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb6c76490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6c76678"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6c76758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6c76d48" loc="89:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6c76d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6c75010"/>
        <function-ref name="configure" scoped="" ref="0xb6c750f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6cadd40" loc="85:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6cadd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6cadf28"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6c76018"/>
        <function-ref name="request" scoped="" ref="0xb6c760f8"/>
        <function-ref name="granted" scoped="" ref="0xb6c761d8"/>
        <function-ref name="isOwner" scoped="" ref="0xb6c762b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6c76898" loc="87:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6c76898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6c76a70"/>
        <function-ref name="userId" scoped="" ref="0xb6c76b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb65756a0" loc="44:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb65756a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6575878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb65759d8" loc="45:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb65759d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb6575bb0"/>
        <function-ref name="isEmpty" scoped="" ref="0xb6575c90"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb6575d70"/>
        <function-ref name="dequeue" scoped="" ref="0xb6575e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb65721e8" loc="52:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb65721e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb65723d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb65724b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6572ab0" loc="56:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6572ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6572c98"/>
        <function-ref name="configure" scoped="" ref="0xb6572d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb6572ed8" loc="57:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb6572ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb65710c0"/>
        <function-ref name="isEmpty" scoped="" ref="0xb65711a0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb6571280"/>
        <function-ref name="dequeue" scoped="" ref="0xb6571360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6574a50" loc="51:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6574a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6574c38"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6574d18"/>
        <function-ref name="request" scoped="" ref="0xb6574df8"/>
        <function-ref name="granted" scoped="" ref="0xb6574ed8"/>
        <function-ref name="isOwner" scoped="" ref="0xb6572010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb65725f0" loc="53:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb65725f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb65727c8"/>
        <function-ref name="userId" scoped="" ref="0xb65728a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb65714e0" loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb65714e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb65716b8"/>
        <function-ref name="runTask" scoped="" ref="0xb6571798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6c56250" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6c56250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c56428"/>
        <function-ref name="cancel" scoped="" ref="0xb6c56508"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c565e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6c56748" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6c56748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c56920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6c73ce8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6c73ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6c73ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6c74c68" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6c74c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c74e40"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c74f20"/>
        <function-ref name="getPayload" scoped="" ref="0xb6c73018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c730f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c731d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0xb6c57a30" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6c57a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c57c08"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c57ce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c57dc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c57ea8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c56010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c560f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xb6c58070" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6c58070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6c58248"/>
        <function-ref name="getDSN" scoped="" ref="0xb6c58328"/>
        <function-ref name="setFCF" scoped="" ref="0xb6c58408"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6c584e8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6c585c8"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6c586a8"/>
        <function-ref name="setDSN" scoped="" ref="0xb6c58788"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6c58868"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6c58948"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6c58a28"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6c58b08"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6c58be8"/>
        <function-ref name="localAddr" scoped="" ref="0xb6c58cc8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6c58e28"/>
        <function-ref name="localPan" scoped="" ref="0xb6c58f08"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6c57010"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6c570f0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6c571d0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6c572b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6c57390"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6c57470"/>
        <function-ref name="getFCF" scoped="" ref="0xb6c57550"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6c57630"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6c57710"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6c577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb6c73318" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb6c73318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c734f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6c735d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c736b0"/>
        <function-ref name="cancel" scoped="" ref="0xb6c73790"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c73870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb6c739d0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb6c739d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c73ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6c32050" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6c32050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c32228"/>
        <function-ref name="cancel" scoped="" ref="0xb6c32308"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c323e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6c32548" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6c32548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c32720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6c51880" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6c51880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c51a58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c51b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c51c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c51cf8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c51dd8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c51eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0xb6c34528" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0xb6c34528"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c34700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6c32880" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6c32880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c32a58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c32b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c32c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c32cf8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c32dd8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c32eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0xb6c34030" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0xb6c34030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c34208"/>
        <function-ref name="cancel" scoped="" ref="0xb6c342e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c343c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb6c51050" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb6c51050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c51228"/>
        <function-ref name="cancel" scoped="" ref="0xb6c51308"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c513e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb6c51548" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb6c51548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c51720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0xb6c34860" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0xb6c34860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c34a38"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c34b18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c34bf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c34cd8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c34db8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c34e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6bd8c70" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6bd8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6bd8e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6bdaf10" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6bdaf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb6bd9108"/>
        <function-ref name="address" scoped="" ref="0xb6bd91e8"/>
        <function-ref name="destination" scoped="" ref="0xb6bd92c8"/>
        <function-ref name="setSource" scoped="" ref="0xb6bd93a8"/>
        <function-ref name="setDestination" scoped="" ref="0xb6bd9488"/>
        <function-ref name="pan" scoped="" ref="0xb6bd9568"/>
        <function-ref name="setPan" scoped="" ref="0xb6bd9648"/>
        <function-ref name="isForMe" scoped="" ref="0xb6bd9728"/>
        <function-ref name="localPan" scoped="" ref="0xb6bd9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6bd9948" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6bd9948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6bd9b20"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6bd9c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6bd9ce0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6bd9dc0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6bd9ea0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6bd8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xb6bdb530" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6bdb530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6bdb708"/>
        <function-ref name="getDSN" scoped="" ref="0xb6bdb7e8"/>
        <function-ref name="setFCF" scoped="" ref="0xb6bdb8c8"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6bdb9a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6bdba88"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6bdbb68"/>
        <function-ref name="setDSN" scoped="" ref="0xb6bdbc48"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6bdbd28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6bdbe08"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6bdbee8"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6bda010"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6bda0f0"/>
        <function-ref name="localAddr" scoped="" ref="0xb6bda1d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6bda330"/>
        <function-ref name="localPan" scoped="" ref="0xb6bda410"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6bda4f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6bda5d0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6bda6b0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6bda790"/>
        <function-ref name="isForMe" scoped="" ref="0xb6bda870"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6bda950"/>
        <function-ref name="getFCF" scoped="" ref="0xb6bdaa30"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6bdab10"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6bdabf0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6bdacd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6bd84d8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6bd84d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6bd86b0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6bd8790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6bd8870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6bd8950"/>
        <function-ref name="headerLength" scoped="" ref="0xb6bd8a30"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6bd8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6bd8170" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6bd8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6bd8348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6535010" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6535010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65351e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6538d50" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6538d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb6538f28"/>
        <function-ref name="address" scoped="" ref="0xb6537018"/>
        <function-ref name="destination" scoped="" ref="0xb65370f8"/>
        <function-ref name="setSource" scoped="" ref="0xb65371d8"/>
        <function-ref name="setDestination" scoped="" ref="0xb65372b8"/>
        <function-ref name="pan" scoped="" ref="0xb6537398"/>
        <function-ref name="setPan" scoped="" ref="0xb6537478"/>
        <function-ref name="isForMe" scoped="" ref="0xb6537558"/>
        <function-ref name="localPan" scoped="" ref="0xb6537638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6537778" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6537778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6537950"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6537a30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6537b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6537bf0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6537cd0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6537db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xb6539340" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6539340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6539518"/>
        <function-ref name="getDSN" scoped="" ref="0xb65395f8"/>
        <function-ref name="setFCF" scoped="" ref="0xb65396d8"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb65397b8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6539898"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6539978"/>
        <function-ref name="setDSN" scoped="" ref="0xb6539a58"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6539b38"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6539c18"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6539cf8"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6539dd8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6539eb8"/>
        <function-ref name="localAddr" scoped="" ref="0xb6538010"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6538170"/>
        <function-ref name="localPan" scoped="" ref="0xb6538250"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6538330"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6538410"/>
        <function-ref name="setFramePending" scoped="" ref="0xb65384f0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb65385d0"/>
        <function-ref name="isForMe" scoped="" ref="0xb65386b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6538790"/>
        <function-ref name="getFCF" scoped="" ref="0xb6538870"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6538950"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6538a30"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6538b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb6536278" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6536278"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb6536450"/>
        <function-ref name="changed" scoped="" ref="0xb6536530"/>
        <function-ref name="amGroup" scoped="" ref="0xb6536610"/>
        <function-ref name="setAddress" scoped="" ref="0xb65366f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6537f10" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6537f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6536108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6536850" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6536850"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6536a28"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6536b08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6536be8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6536cc8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6536da8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6536e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6bd2678" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6bd2678"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6bd2850"/>
        <function-ref name="cancel" scoped="" ref="0xb6bd2930"/>
        <function-ref name="sendDone" scoped="" ref="0xb6bd2a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6bd2b70" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6bd2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6bd2d48"/>
        <function-ref name="header" scoped="" ref="0xb6bd2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6bd4d18" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6bd4d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6bd4ef0"/>
        <function-ref name="cancel" scoped="" ref="0xb6bd2010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6bd20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6b99010" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6b99010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb6b991e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb6b992c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb6b993a8"/>
        <function-ref name="getSender" scoped="" ref="0xb6b99488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6bd2230" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6bd2230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6bd2408"/>
        <function-ref name="header" scoped="" ref="0xb6bd24e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb65093e0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb65093e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb65095b8"/>
        <function-ref name="cancel" scoped="" ref="0xb6509698"/>
        <function-ref name="sendDone" scoped="" ref="0xb6509778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb65098d8" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb65098d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6509ab0"/>
        <function-ref name="header" scoped="" ref="0xb6509b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0xb65089a8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb65089a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6508b80"/>
        <function-ref name="clearAll" scoped="" ref="0xb6508c60"/>
        <function-ref name="get" scoped="" ref="0xb6508d40"/>
        <function-ref name="set" scoped="" ref="0xb6508e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb650c790" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb650c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb650c968"/>
        <function-ref name="cancel" scoped="" ref="0xb650ca48"/>
        <function-ref name="sendDone" scoped="" ref="0xb650cb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0xb6508310" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb6508310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb65084e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb65085c8"/>
        <function-ref name="getNode" scoped="" ref="0xb65086a8"/>
        <function-ref name="evicted" scoped="" ref="0xb6508788"/>
        <function-ref name="getIndex" scoped="" ref="0xb6508868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb650cc68" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb650cc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb650ce40"/>
        <function-ref name="header" scoped="" ref="0xb650cf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6509078" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6509078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6509250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0xb6509cd0" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb6509cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb6509ea8"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb6508010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb65080f0"/>
        <function-ref name="getSender" scoped="" ref="0xb65081d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb6bb5010" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb6bb5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb6bb51e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb6bb52c8"/>
        <function-ref name="getNode" scoped="" ref="0xb6bb53a8"/>
        <function-ref name="evicted" scoped="" ref="0xb6bb5488"/>
        <function-ref name="getIndex" scoped="" ref="0xb6bb5568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb6bb2a38" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb6bb2a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6bb2c10"/>
        <function-ref name="clearAll" scoped="" ref="0xb6bb2cf0"/>
        <function-ref name="get" scoped="" ref="0xb6bb2dd0"/>
        <function-ref name="set" scoped="" ref="0xb6bb2eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb6bb2010" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb6bb2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb6bb21e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb6bb22c8"/>
        <function-ref name="getNode" scoped="" ref="0xb6bb23a8"/>
        <function-ref name="evicted" scoped="" ref="0xb6bb2488"/>
        <function-ref name="getIndex" scoped="" ref="0xb6bb2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6bb5be0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6bb5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6bb5db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb6507e88" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb6507e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6506070"/>
        <function-ref name="clearAll" scoped="" ref="0xb6506150"/>
        <function-ref name="get" scoped="" ref="0xb6506230"/>
        <function-ref name="set" scoped="" ref="0xb6506310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6b90e70" loc="85:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6b90e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b8f070"/>
        <function-ref name="cancel" scoped="" ref="0xb6b8f150"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b8f230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6b8f390" loc="86:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6b8f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b8f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0xb6b8ea68" loc="93:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0xb6b8ea68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6b8ec40"/>
        <function-ref name="noAck" scoped="" ref="0xb6b8ed20"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6b8ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6b97760" loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6b97760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b97938"/>
        <function-ref name="cancel" scoped="" ref="0xb6b97a18"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b97af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6b906a8" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6b906a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b90880"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6b90960"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6b90a40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6b90b20"/>
        <function-ref name="headerLength" scoped="" ref="0xb6b90c00"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6b90ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6b8f6c8" loc="87:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6b8f6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b8f8a0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6b8f980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6b8fa60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6b8fb40"/>
        <function-ref name="headerLength" scoped="" ref="0xb6b8fc20"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6b8fd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0xb6b8e390" loc="92:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0xb6b8e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6b8e568"/>
        <function-ref name="setRetries" scoped="" ref="0xb6b8e648"/>
        <function-ref name="getRetries" scoped="" ref="0xb6b8e728"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6b8e808"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6b8e8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6b97c58" loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6b97c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b97e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb6b8fe40" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6b8fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6b8e050"/>
        <function-ref name="noAck" scoped="" ref="0xb6b8e130"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6b8e210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6b90010" loc="79:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6b90010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6b901e8"/>
        <function-ref name="setRetries" scoped="" ref="0xb6b902c8"/>
        <function-ref name="getRetries" scoped="" ref="0xb6b903a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6b90488"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6b90568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6b8b728" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6b8b728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6b8b900"/>
        <function-ref name="stopDone" scoped="" ref="0xb6b8b9e0"/>
        <function-ref name="start" scoped="" ref="0xb6b8bac0"/>
        <function-ref name="stop" scoped="" ref="0xb6b8bba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6b7d938" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6b7d938"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b7db10"/>
        <function-ref name="cancel" scoped="" ref="0xb6b7dbf0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b7dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6b7de30" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6b7de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b7c050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6b8bd00" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6b8bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b8bed8"/>
        <function-ref name="cancel" scoped="" ref="0xb6b7e010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b7e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6b7e568" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6b7e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b7e740"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6b7e820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6b7e900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6b7e9e0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6b7eac0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6b7eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6b7ece0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6b7ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6b7eeb8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6b7d010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6b7d0f0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6b7d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6b7d360" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6b7d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6b7d538"/>
        <function-ref name="stopDone" scoped="" ref="0xb6b7d618"/>
        <function-ref name="start" scoped="" ref="0xb6b7d6f8"/>
        <function-ref name="stop" scoped="" ref="0xb6b7d7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6b7e250" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6b7e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b7e428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6b7c1b0" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6b7c1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b7c388"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6b7c468"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6b7c548"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6b7c628"/>
        <function-ref name="headerLength" scoped="" ref="0xb6b7c708"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6b7c7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb64f38c0" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb64f38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb64f3a98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb64f3b78"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb64f3c58"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb64f3d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6b79d20" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6b79d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6b79ef8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6b78010"/>
        <function-ref name="start" scoped="" ref="0xb6b780f0"/>
        <function-ref name="stop" scoped="" ref="0xb6b781d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb6b3b628" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6b3b628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6b3b800"/>
        <function-ref name="turnOn" scoped="" ref="0xb6b3b8e0"/>
        <function-ref name="setChannel" scoped="" ref="0xb6b3b9c0"/>
        <function-ref name="done" scoped="" ref="0xb6b3baa0"/>
        <function-ref name="standby" scoped="" ref="0xb6b3bb80"/>
        <function-ref name="getChannel" scoped="" ref="0xb6b3bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6b78330" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6b78330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b78508"/>
        <function-ref name="cancel" scoped="" ref="0xb6b785e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b786c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb6b3a310" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6b3a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b3a4e8"/>
        <function-ref name="header" scoped="" ref="0xb6b3a5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6b78828" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6b78828"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b78a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb6b3bda0" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6b3bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b3a010"/>
        <function-ref name="ready" scoped="" ref="0xb6b3a0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b3a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6b78b40" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6b78b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6b78d18"/>
        <function-ref name="setChannel" scoped="" ref="0xb6b78df8"/>
        <function-ref name="getChannel" scoped="" ref="0xb6b78ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6b3b070" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6b3b070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6b3b248"/>
        <function-ref name="suspend" scoped="" ref="0xb6b3b328"/>
        <function-ref name="resume" scoped="" ref="0xb6b3b408"/>
        <function-ref name="run" scoped="" ref="0xb6b3b4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb64f0c88" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb64f0c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb64f0e60"/>
        <function-ref name="stopDone" scoped="" ref="0xb64ed010"/>
        <function-ref name="start" scoped="" ref="0xb64ed0f0"/>
        <function-ref name="stop" scoped="" ref="0xb64ed1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb64ed330" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb64ed330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb64ed508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb64ec3a0" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb64ec3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb64ec578"/>
        <function-ref name="turnOn" scoped="" ref="0xb64ec658"/>
        <function-ref name="setChannel" scoped="" ref="0xb64ec738"/>
        <function-ref name="done" scoped="" ref="0xb64ec818"/>
        <function-ref name="standby" scoped="" ref="0xb64ec8f8"/>
        <function-ref name="getChannel" scoped="" ref="0xb64ec9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb64ed668" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb64ed668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb64ed840"/>
        <function-ref name="cancel" scoped="" ref="0xb64ed920"/>
        <function-ref name="sendDone" scoped="" ref="0xb64eda00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0xb64ebe98" loc="189:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0xb64ebe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb64ea0c0"/>
        <function-ref name="runTask" scoped="" ref="0xb64ea1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb64eb628" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb64eb628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb64eb800"/>
        <function-ref name="header" scoped="" ref="0xb64eb8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0xb64ea320" loc="144:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0xb64ea320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb64ea4f8"/>
        <function-ref name="runTask" scoped="" ref="0xb64ea5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb64edb60" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb64edb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb64edd38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0xb64eba60" loc="322:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0xb64eba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb64ebc38"/>
        <function-ref name="runTask" scoped="" ref="0xb64ebd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb64eb150" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb64eb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb64eb328"/>
        <function-ref name="ready" scoped="" ref="0xb64eb408"/>
        <function-ref name="sendDone" scoped="" ref="0xb64eb4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb64ede78" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb64ede78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb64ec070"/>
        <function-ref name="setChannel" scoped="" ref="0xb64ec150"/>
        <function-ref name="getChannel" scoped="" ref="0xb64ec230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb64ecb18" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb64ecb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb64eccf0"/>
        <function-ref name="suspend" scoped="" ref="0xb64ecdd0"/>
        <function-ref name="resume" scoped="" ref="0xb64eceb0"/>
        <function-ref name="run" scoped="" ref="0xb64eb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6b36930" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6b36930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b36b08"/>
        <function-ref name="ready" scoped="" ref="0xb6b36be8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b36cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6b36e28" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6b36e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b14050"/>
        <function-ref name="header" scoped="" ref="0xb6b14130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6b14270" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6b14270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6b14448"/>
        <function-ref name="wait" scoped="" ref="0xb6b14528"/>
        <function-ref name="cancel" scoped="" ref="0xb6b14608"/>
        <function-ref name="isFree" scoped="" ref="0xb6b146e8"/>
        <function-ref name="getNow" scoped="" ref="0xb6b147c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6b14928" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6b14928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb6b14b00"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb6b14be0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb6b14cc0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb6b14da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6b364e8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6b364e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b366c0"/>
        <function-ref name="header" scoped="" ref="0xb6b367a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6b36010" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6b36010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b361e8"/>
        <function-ref name="ready" scoped="" ref="0xb6b362c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b363a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb64cc330" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb64cc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb64cc508"/>
        <function-ref name="ready" scoped="" ref="0xb64cc5e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb64cc6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb64cc828" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb64cc828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb64cca00"/>
        <function-ref name="header" scoped="" ref="0xb64ccae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb64ccc20" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb64ccc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64ccdf8"/>
        <function-ref name="wait" scoped="" ref="0xb64cced8"/>
        <function-ref name="cancel" scoped="" ref="0xb64ca010"/>
        <function-ref name="isFree" scoped="" ref="0xb64ca0f0"/>
        <function-ref name="getNow" scoped="" ref="0xb64ca1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb64ca310" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb64ca310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb64ca4e8"/>
        <function-ref name="rand32" scoped="" ref="0xb64ca5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb64ca728" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb64ca728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb64ca900"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb64ca9e0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb64caac0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb64caba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb64ceed0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb64ceed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb64cc0c0"/>
        <function-ref name="header" scoped="" ref="0xb64cc1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb64ce9f8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb64ce9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb64cebd0"/>
        <function-ref name="ready" scoped="" ref="0xb64cecb0"/>
        <function-ref name="sendDone" scoped="" ref="0xb64ced90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0xb64cad20" loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0xb64cad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb64caef8"/>
        <function-ref name="runTask" scoped="" ref="0xb64c9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb6b13478" loc="46:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6b13478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6b13650"/>
        <function-ref name="rand32" scoped="" ref="0xb6b13730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb6b11b58" loc="45:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb6b11b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6b131e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6b16910" loc="44:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6b16910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6b16ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb6b0fec8" loc="48:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6b0fec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6b0e0c0"/>
        <function-ref name="rand32" scoped="" ref="0xb6b0e1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb6b0f608" loc="47:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb6b0f608"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6b0fc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6b0f0e8" loc="46:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6b0f0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6b0f2c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6b04b50" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6b04b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b04d28"/>
        <function-ref name="ready" scoped="" ref="0xb6b04e08"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b04ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6aeb060" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6aeb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6aeb238"/>
        <function-ref name="header" scoped="" ref="0xb6aeb318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6aeb458" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6aeb458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6aeb630"/>
        <function-ref name="wait" scoped="" ref="0xb6aeb710"/>
        <function-ref name="cancel" scoped="" ref="0xb6aeb7f0"/>
        <function-ref name="isFree" scoped="" ref="0xb6aeb8d0"/>
        <function-ref name="getNow" scoped="" ref="0xb6aeb9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0xb6aea4f0" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0xb6aea4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6aea6c8"/>
        <function-ref name="get" scoped="" ref="0xb6aea7a8"/>
        <function-ref name="setValue" scoped="" ref="0xb6aea888"/>
        <function-ref name="set" scoped="" ref="0xb6aea968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6aebb10" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6aebb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb6aebce8"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb6aebdc8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6aebea8"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb6aea010"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb6aea0f0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb6aea1d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6aea2b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6aea390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6b04230" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6b04230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b04408"/>
        <function-ref name="header" scoped="" ref="0xb6b044e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6b05cf8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6b05cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b05ed0"/>
        <function-ref name="ready" scoped="" ref="0xb6b04010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b040f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6b04628" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6b04628"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6b04800"/>
        <function-ref name="noAck" scoped="" ref="0xb6b048e0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6b049c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6ae48a0" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6ae48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6ae4a78"/>
        <function-ref name="stopDone" scoped="" ref="0xb6ae4b58"/>
        <function-ref name="start" scoped="" ref="0xb6ae4c38"/>
        <function-ref name="stop" scoped="" ref="0xb6ae4d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6ada708" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6ada708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6ada8e0"/>
        <function-ref name="request" scoped="" ref="0xb6ada9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6ad7cc8" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6ad7cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ad7ea0"/>
        <function-ref name="ready" scoped="" ref="0xb6ad6010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ad60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6ad6250" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6ad6250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ad6428"/>
        <function-ref name="header" scoped="" ref="0xb6ad6508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6adb668" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6adb668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6adb840"/>
        <function-ref name="turnOn" scoped="" ref="0xb6adb920"/>
        <function-ref name="setChannel" scoped="" ref="0xb6adba00"/>
        <function-ref name="done" scoped="" ref="0xb6adbae0"/>
        <function-ref name="standby" scoped="" ref="0xb6adbbc0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6adbca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6adab00" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6adab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6adacd8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6adadb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6adae98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ad8010"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ad80f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ad81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb6ad74b0" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb6ad74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6ad7708"/>
        <function-ref name="turnOn" scoped="" ref="0xb6ad77e8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6ad78c8"/>
        <function-ref name="done" scoped="" ref="0xb6ad79a8"/>
        <function-ref name="standby" scoped="" ref="0xb6ad7a88"/>
        <function-ref name="getChannel" scoped="" ref="0xb6ad7b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb6ad8330" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6ad8330"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6ad8508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6ada310" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6ada310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ada4e8"/>
        <function-ref name="header" scoped="" ref="0xb6ada5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0xb6ad7178" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0xb6ad7178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ad7350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6ad8698" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6ad8698"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6ad8870"/>
        <function-ref name="stopDone" scoped="" ref="0xb6ad8950"/>
        <function-ref name="start" scoped="" ref="0xb6ad8a30"/>
        <function-ref name="stop" scoped="" ref="0xb6ad8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6ad6a80" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6ad6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ad6c58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ad6d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ad6e18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ad6ef8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ad5010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ad50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb6adb350" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb6adb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6adb528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6ad5250" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6ad5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6ad5428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0xb6ad8c70" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0xb6ad8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ad8e48"/>
        <function-ref name="cancel" scoped="" ref="0xb6ad8f28"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ad7018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6adbde0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6adbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ada010"/>
        <function-ref name="ready" scoped="" ref="0xb6ada0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ada1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb6ad6668" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb6ad6668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6ad6840"/>
        <function-ref name="request" scoped="" ref="0xb6ad6920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6ae4e58" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6ae4e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6adb050"/>
        <function-ref name="cancel" scoped="" ref="0xb6adb130"/>
        <function-ref name="sendDone" scoped="" ref="0xb6adb210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0xb6a9d098" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0xb6a9d098"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a9d270"/>
        <function-ref name="get" scoped="" ref="0xb6a9d350"/>
        <function-ref name="setValue" scoped="" ref="0xb6a9d430"/>
        <function-ref name="set" scoped="" ref="0xb6a9d510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6a9f7f0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6a9f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a9f9c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a9faa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a9fb88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a9fc68"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a9fd48"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a9fe28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6a9e8f0" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6a9e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a9eac8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a9eba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a9ec88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a9ed68"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a9ee48"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a9ef28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb6aa1180" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6aa1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6aa1c80"/>
        <function-ref name="clear" scoped="" ref="0xb6a9f048"/>
        <function-ref name="isValid" scoped="" ref="0xb6aa18d0"/>
        <function-ref name="set" scoped="" ref="0xb6a9f3f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb6a9e078" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a9e078"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6a9e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6ad1998" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6ad1998"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6aa34d0"/>
        <function-ref name="clear" scoped="" ref="0xb6aa3880"/>
        <function-ref name="isValid" scoped="" ref="0xb6aa3120"/>
        <function-ref name="set" scoped="" ref="0xb6aa3c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0xb649e520" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0xb649e520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb649e6f8"/>
        <function-ref name="get" scoped="" ref="0xb649e7d8"/>
        <function-ref name="setValue" scoped="" ref="0xb649e8b8"/>
        <function-ref name="set" scoped="" ref="0xb649e998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb649fca8" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb649fca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb649fe80"/>
        <function-ref name="payloadLength" scoped="" ref="0xb649e010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb649e0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb649e1d0"/>
        <function-ref name="headerLength" scoped="" ref="0xb649e2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb649e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb649dd38" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb649dd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb649df10"/>
        <function-ref name="payloadLength" scoped="" ref="0xb649b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb649b0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb649b1d0"/>
        <function-ref name="headerLength" scoped="" ref="0xb649b2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb649b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb64a0610" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb64a0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb649f150"/>
        <function-ref name="clear" scoped="" ref="0xb649f500"/>
        <function-ref name="isValid" scoped="" ref="0xb64a0d60"/>
        <function-ref name="set" scoped="" ref="0xb649f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb649eb88" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb649eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb649d200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb649d4c0" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb649d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb649db08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb64a5e38" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb64a5e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb64a2950"/>
        <function-ref name="clear" scoped="" ref="0xb64a2d00"/>
        <function-ref name="isValid" scoped="" ref="0xb64a25a0"/>
        <function-ref name="set" scoped="" ref="0xb64a00d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6aa55d8" loc="20:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6aa55d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb735d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6aa5c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6a9a4a0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6a9a4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a9a678"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a9a758"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a9a838"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a9a918"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a9a9f8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a9aad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6a9ac68" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6a9ac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a9ae40"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a9af20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a99018"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a990f8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a991d8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a992b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xb6a87eb8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xb6a87eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a9a0c0"/>
        <function-ref name="get" scoped="" ref="0xb6a9a1a0"/>
        <function-ref name="setValue" scoped="" ref="0xb6a9a280"/>
        <function-ref name="set" scoped="" ref="0xb6a9a360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6a86450" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6a86450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6a86628"/>
        <function-ref name="stopDone" scoped="" ref="0xb6a86708"/>
        <function-ref name="start" scoped="" ref="0xb6a867e8"/>
        <function-ref name="stop" scoped="" ref="0xb6a868c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6a83290" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6a83290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6a83468"/>
        <function-ref name="request" scoped="" ref="0xb6a83548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6a81828" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6a81828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a81a00"/>
        <function-ref name="ready" scoped="" ref="0xb6a81ae0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a81bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6a81d20" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6a81d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a81ef8"/>
        <function-ref name="header" scoped="" ref="0xb6a80010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6a85220" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6a85220"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6a853f8"/>
        <function-ref name="turnOn" scoped="" ref="0xb6a854d8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6a855b8"/>
        <function-ref name="done" scoped="" ref="0xb6a85698"/>
        <function-ref name="standby" scoped="" ref="0xb6a85778"/>
        <function-ref name="getChannel" scoped="" ref="0xb6a85858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6a83688" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6a83688"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a83860"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a83940"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a83a20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a83b00"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a83be0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a83cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb6a81010" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb6a81010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6a81268"/>
        <function-ref name="turnOn" scoped="" ref="0xb6a81348"/>
        <function-ref name="setChannel" scoped="" ref="0xb6a81428"/>
        <function-ref name="done" scoped="" ref="0xb6a81508"/>
        <function-ref name="standby" scoped="" ref="0xb6a815e8"/>
        <function-ref name="getChannel" scoped="" ref="0xb6a816c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb6a83e20" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6a83e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6a82010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6a85e70" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6a85e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a83070"/>
        <function-ref name="header" scoped="" ref="0xb6a83150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0xb6a82c70" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0xb6a82c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a82e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6a821a0" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6a821a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6a82378"/>
        <function-ref name="stopDone" scoped="" ref="0xb6a82458"/>
        <function-ref name="start" scoped="" ref="0xb6a82538"/>
        <function-ref name="stop" scoped="" ref="0xb6a82618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6a80588" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6a80588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a80760"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a80840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a80920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a80a00"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a80ae0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a80bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb6a86ee0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb6a86ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a850e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6a80d20" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6a80d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6a80ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0xb6a82778" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0xb6a82778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a82950"/>
        <function-ref name="cancel" scoped="" ref="0xb6a82a30"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a82b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6a85998" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6a85998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a85b70"/>
        <function-ref name="ready" scoped="" ref="0xb6a85c50"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a85d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb6a80170" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb6a80170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6a80348"/>
        <function-ref name="request" scoped="" ref="0xb6a80428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6a86a08" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6a86a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a86be0"/>
        <function-ref name="cancel" scoped="" ref="0xb6a86cc0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a86da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6a7a820" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6a7a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6a7a9f8"/>
        <function-ref name="request" scoped="" ref="0xb6a7aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6a78a58" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6a78a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a76638"/>
        <function-ref name="get" scoped="" ref="0xb6a76378"/>
        <function-ref name="isSet" scoped="" ref="0xb6a760b8"/>
        <function-ref name="set" scoped="" ref="0xb6a768f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0xb6a6b778" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0xb6a6b778"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a6b950"/>
        <function-ref name="get" scoped="" ref="0xb6a6ba30"/>
        <function-ref name="setValue" scoped="" ref="0xb6a6bb10"/>
        <function-ref name="set" scoped="" ref="0xb6a6bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb6a6e898" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6a6e898"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6a6d3c0"/>
        <function-ref name="clear" scoped="" ref="0xb6a6d770"/>
        <function-ref name="isValid" scoped="" ref="0xb6a6d010"/>
        <function-ref name="set" scoped="" ref="0xb6a6db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6a7d668" loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6a7d668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6a7d840"/>
        <function-ref name="turnOn" scoped="" ref="0xb6a7d920"/>
        <function-ref name="setChannel" scoped="" ref="0xb6a7da00"/>
        <function-ref name="done" scoped="" ref="0xb6a7dae0"/>
        <function-ref name="standby" scoped="" ref="0xb6a7dbc0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6a7dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6a6a498" loc="66:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6a6a498"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6a6a670"/>
        <function-ref name="wait" scoped="" ref="0xb6a6a750"/>
        <function-ref name="cancel" scoped="" ref="0xb6a6a830"/>
        <function-ref name="isFree" scoped="" ref="0xb6a6a910"/>
        <function-ref name="getNow" scoped="" ref="0xb6a6a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6a796f8" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6a796f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a782d0"/>
        <function-ref name="get" scoped="" ref="0xb6a78010"/>
        <function-ref name="isSet" scoped="" ref="0xb6a79d40"/>
        <function-ref name="set" scoped="" ref="0xb6a78590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6a7ac88" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6a7ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a7ae60"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a79010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a790f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a791d0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a792b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a79390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6a6fec0" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6a6fec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a6e188"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a6e268"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a6e348"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb6a6e428"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb6a6e508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6a7a3d0" loc="44:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6a7a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a7a5a8"/>
        <function-ref name="header" scoped="" ref="0xb6a7a688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6a70428" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6a70428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb71db3a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6a6f8d8"/>
        <function-ref name="fired" scoped="" ref="0xb6a6f0a8"/>
        <function-ref name="startAt" scoped="" ref="0xb6a6f598"/>
        <function-ref name="isRunning" scoped="" ref="0xb6a6f320"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6a6fb50"/>
        <function-ref name="start" scoped="" ref="0xb6a70b78"/>
        <function-ref name="stop" scoped="" ref="0xb6a70e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb6a76e28" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6a76e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a75a08"/>
        <function-ref name="get" scoped="" ref="0xb6a75748"/>
        <function-ref name="isSet" scoped="" ref="0xb6a75488"/>
        <function-ref name="set" scoped="" ref="0xb6a75cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6a72950" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a72950"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6a70010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6a7de40" loc="43:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6a7de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a7a050"/>
        <function-ref name="ready" scoped="" ref="0xb6a7a130"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a7a210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6a73208" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6a73208"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a73dd0"/>
        <function-ref name="get" scoped="" ref="0xb6a73b10"/>
        <function-ref name="isSet" scoped="" ref="0xb6a73850"/>
        <function-ref name="set" scoped="" ref="0xb6a720a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0xb6a6be38" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6a6be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a6a050"/>
        <function-ref name="get" scoped="" ref="0xb6a6a130"/>
        <function-ref name="setValue" scoped="" ref="0xb6a6a210"/>
        <function-ref name="set" scoped="" ref="0xb6a6a2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0xb6a6b0e0" loc="63:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6a6b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a6b2b8"/>
        <function-ref name="get" scoped="" ref="0xb6a6b398"/>
        <function-ref name="setValue" scoped="" ref="0xb6a6b478"/>
        <function-ref name="set" scoped="" ref="0xb6a6b558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6a72458" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6a72458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6a72630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6a6ab78" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6a6ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6a6ad50"/>
        <function-ref name="suspend" scoped="" ref="0xb6a6ae30"/>
        <function-ref name="resume" scoped="" ref="0xb6a6af10"/>
        <function-ref name="run" scoped="" ref="0xb6a69010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6a63a08" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6a63a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6a63be0"/>
        <function-ref name="request" scoped="" ref="0xb6a63cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xb6a4f588" loc="74:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb6a4f588"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb6a4fcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6a60b98" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6a60b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a5f780"/>
        <function-ref name="get" scoped="" ref="0xb6a5f4c0"/>
        <function-ref name="isSet" scoped="" ref="0xb6a5f200"/>
        <function-ref name="set" scoped="" ref="0xb6a5fa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0xb6a50920" loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0xb6a50920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a50af8"/>
        <function-ref name="get" scoped="" ref="0xb6a50bd8"/>
        <function-ref name="setValue" scoped="" ref="0xb6a50cb8"/>
        <function-ref name="set" scoped="" ref="0xb6a50d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb6a644d8" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb6a644d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb73c67d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb73c67d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6a646b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb6a4e818" loc="83:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6a4e818"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6a4d438"/>
        <function-ref name="clear" scoped="" ref="0xb6a4d7e8"/>
        <function-ref name="isValid" scoped="" ref="0xb6a4d088"/>
        <function-ref name="set" scoped="" ref="0xb6a4db98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xb6a58bf8" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb6a58bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a58dd0"/>
        <function-ref name="isInput" scoped="" ref="0xb6a58eb0"/>
        <function-ref name="toggle" scoped="" ref="0xb6a57010"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a570f0"/>
        <function-ref name="get" scoped="" ref="0xb6a571d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a572b0"/>
        <function-ref name="set" scoped="" ref="0xb6a57390"/>
        <function-ref name="clr" scoped="" ref="0xb6a57470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6a4b630" loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6a4b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6a4b808"/>
        <function-ref name="wait" scoped="" ref="0xb6a4b8e8"/>
        <function-ref name="cancel" scoped="" ref="0xb6a4b9c8"/>
        <function-ref name="isFree" scoped="" ref="0xb6a4baa8"/>
        <function-ref name="getNow" scoped="" ref="0xb6a4bb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6a64858" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6a64858"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6a64a30"/>
        <function-ref name="turnOn" scoped="" ref="0xb6a64b10"/>
        <function-ref name="setChannel" scoped="" ref="0xb6a64bf0"/>
        <function-ref name="done" scoped="" ref="0xb6a64cd0"/>
        <function-ref name="standby" scoped="" ref="0xb6a64db0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6a64e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0xb6a53088" loc="75:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6a53088"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6a536d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6a61838" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6a61838"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a60410"/>
        <function-ref name="get" scoped="" ref="0xb6a60150"/>
        <function-ref name="isSet" scoped="" ref="0xb6a61e80"/>
        <function-ref name="set" scoped="" ref="0xb6a606d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6a63e70" loc="53:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6a63e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a61070"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a61150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a61230"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a61310"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a613f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a614d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0xb6a58210" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb6a58210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a583e8"/>
        <function-ref name="isInput" scoped="" ref="0xb6a584c8"/>
        <function-ref name="toggle" scoped="" ref="0xb6a585a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a58688"/>
        <function-ref name="get" scoped="" ref="0xb6a58768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a58848"/>
        <function-ref name="set" scoped="" ref="0xb6a58928"/>
        <function-ref name="clr" scoped="" ref="0xb6a58a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6a539f0" loc="77:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6a539f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a53bc8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a53ca8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a53d88"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb6a53e68"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb6a50010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6a635b8" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6a635b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a63790"/>
        <function-ref name="header" scoped="" ref="0xb6a63870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0xb69f7910" loc="856:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0xb69f7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb69f7ae8"/>
        <function-ref name="runTask" scoped="" ref="0xb69f7bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb6a5d010" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6a5d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a5dbd8"/>
        <function-ref name="get" scoped="" ref="0xb6a5d918"/>
        <function-ref name="isSet" scoped="" ref="0xb6a5d658"/>
        <function-ref name="set" scoped="" ref="0xb6a5de98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb6a65e40" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb6a65e40"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb73c67d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb73c67d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6a64050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb6a595b8" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb6a595b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6a59790"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6a59870"/>
        <function-ref name="request" scoped="" ref="0xb6a59950"/>
        <function-ref name="granted" scoped="" ref="0xb6a59a30"/>
        <function-ref name="isOwner" scoped="" ref="0xb6a59b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0xb6a5ba98" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb6a5ba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a5bcf0"/>
        <function-ref name="isInput" scoped="" ref="0xb6a5bdd0"/>
        <function-ref name="toggle" scoped="" ref="0xb6a5beb0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a59010"/>
        <function-ref name="get" scoped="" ref="0xb6a590f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a591d0"/>
        <function-ref name="set" scoped="" ref="0xb6a592b0"/>
        <function-ref name="clr" scoped="" ref="0xb6a59390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6a5c3d8" loc="58:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6a5c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a5b010"/>
        <function-ref name="get" scoped="" ref="0xb6a5cce0"/>
        <function-ref name="isSet" scoped="" ref="0xb6a5ca20"/>
        <function-ref name="set" scoped="" ref="0xb6a5b2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6a63060" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6a63060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a63238"/>
        <function-ref name="ready" scoped="" ref="0xb6a63318"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a633f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0xb6a52d50" loc="72:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb6a52d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb6a52f28"/>
        <function-ref name="disable" scoped="" ref="0xb6a54018"/>
        <function-ref name="captured" scoped="" ref="0xb6a540f8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb6a541d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0xb6a55b40" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6a55b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb6a55d18"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb6a55df8"/>
        <function-ref name="splitRead" scoped="" ref="0xb6a55ed8"/>
        <function-ref name="write" scoped="" ref="0xb6a58010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0xb6a4e010" loc="81:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6a4e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a4e1e8"/>
        <function-ref name="get" scoped="" ref="0xb6a4e2c8"/>
        <function-ref name="setValue" scoped="" ref="0xb6a4e3a8"/>
        <function-ref name="set" scoped="" ref="0xb6a4e488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0xb6a50288" loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6a50288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a50460"/>
        <function-ref name="get" scoped="" ref="0xb6a50540"/>
        <function-ref name="setValue" scoped="" ref="0xb6a50620"/>
        <function-ref name="set" scoped="" ref="0xb6a50700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6a5b680" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6a5b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6a5b858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6a4b010" loc="85:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6a4b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6a4b1e8"/>
        <function-ref name="suspend" scoped="" ref="0xb6a4b2c8"/>
        <function-ref name="resume" scoped="" ref="0xb6a4b3a8"/>
        <function-ref name="run" scoped="" ref="0xb6a4b488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xb69d0db8" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb69d0db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb69cf010"/>
        <function-ref name="isInput" scoped="" ref="0xb69cf0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb69cf1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb69cf2b0"/>
        <function-ref name="get" scoped="" ref="0xb69cf390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69cf470"/>
        <function-ref name="set" scoped="" ref="0xb69cf550"/>
        <function-ref name="clr" scoped="" ref="0xb69cf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0xb69d03d0" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb69d03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb69d05a8"/>
        <function-ref name="isInput" scoped="" ref="0xb69d0688"/>
        <function-ref name="toggle" scoped="" ref="0xb69d0768"/>
        <function-ref name="isOutput" scoped="" ref="0xb69d0848"/>
        <function-ref name="get" scoped="" ref="0xb69d0928"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69d0a08"/>
        <function-ref name="set" scoped="" ref="0xb69d0ae8"/>
        <function-ref name="clr" scoped="" ref="0xb69d0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb69ce030" loc="49:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb69ce030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb69cd4e0"/>
        <function-ref name="fired" scoped="" ref="0xb69cec98"/>
        <function-ref name="startAt" scoped="" ref="0xb69cd1a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb69cef10"/>
        <function-ref name="getAlarm" scoped="" ref="0xb69cd758"/>
        <function-ref name="start" scoped="" ref="0xb69ce780"/>
        <function-ref name="stop" scoped="" ref="0xb69cea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0xb69d15b8" loc="42:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb69d15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb69d1790"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb69d1870"/>
        <function-ref name="request" scoped="" ref="0xb69d1950"/>
        <function-ref name="granted" scoped="" ref="0xb69d1a30"/>
        <function-ref name="isOwner" scoped="" ref="0xb69d1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0xb69d4b08" loc="41:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb69d4b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb69d4ce0"/>
        <function-ref name="isInput" scoped="" ref="0xb69d4dc0"/>
        <function-ref name="toggle" scoped="" ref="0xb69d4ea0"/>
        <function-ref name="isOutput" scoped="" ref="0xb69d1010"/>
        <function-ref name="get" scoped="" ref="0xb69d10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69d11d0"/>
        <function-ref name="set" scoped="" ref="0xb69d12b0"/>
        <function-ref name="clr" scoped="" ref="0xb69d1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb69cf820" loc="48:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb69cf820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb69cf9f8"/>
        <function-ref name="disable" scoped="" ref="0xb69cfad8"/>
        <function-ref name="captured" scoped="" ref="0xb69cfbb8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb69cfc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb69d1cc0" loc="43:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb69d1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb69d1e98"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb69d0010"/>
        <function-ref name="splitRead" scoped="" ref="0xb69d00f0"/>
        <function-ref name="write" scoped="" ref="0xb69d01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb69cdb48" loc="50:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb69cdb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb71db0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb69cb200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0xb69c6358" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0xb69c6358"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb69c6530"/>
        <function-ref name="isInput" scoped="" ref="0xb69c6610"/>
        <function-ref name="toggle" scoped="" ref="0xb69c66f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb69c67d0"/>
        <function-ref name="get" scoped="" ref="0xb69c68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69c6990"/>
        <function-ref name="set" scoped="" ref="0xb69c6a70"/>
        <function-ref name="clr" scoped="" ref="0xb69c6b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0xb69c8590" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb69c8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb69c6048"/>
        <function-ref name="test" scoped="" ref="0xb69c7b38"/>
        <function-ref name="get" scoped="" ref="0xb69c8bd8"/>
        <function-ref name="captured" scoped="" ref="0xb69c7130"/>
        <function-ref name="reset" scoped="" ref="0xb69c73d0"/>
        <function-ref name="isOn" scoped="" ref="0xb69c7db0"/>
        <function-ref name="set" scoped="" ref="0xb69c8e50"/>
        <function-ref name="start" scoped="" ref="0xb69c7648"/>
        <function-ref name="stop" scoped="" ref="0xb69c78c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0xb69c6d58" loc="47:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0xb69c6d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb69c5010"/>
        <function-ref name="isInput" scoped="" ref="0xb69c50f0"/>
        <function-ref name="toggle" scoped="" ref="0xb69c51d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb69c52b0"/>
        <function-ref name="get" scoped="" ref="0xb69c5390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69c5470"/>
        <function-ref name="set" scoped="" ref="0xb69c5550"/>
        <function-ref name="clr" scoped="" ref="0xb69c5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb69c8030" loc="40:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb69c8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb69c8208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb69cb980" loc="39:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb69cb980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb69cbb58"/>
        <function-ref name="disable" scoped="" ref="0xb69cbc38"/>
        <function-ref name="captured" scoped="" ref="0xb69cbd18"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb69cbdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb69b4500" loc="84:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb69b4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb69b46d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb69b47b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb69bcaa0" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb69bcaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb69bcc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb69cad98" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb69cad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb69bc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb69bce48" loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb69bce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb69bb050"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb69bb130"/>
        <function-ref name="splitRead" scoped="" ref="0xb69bb210"/>
        <function-ref name="write" scoped="" ref="0xb69bb2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb69b4c50" loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb69b4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb69b4e28"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb69b4f08"/>
        <function-ref name="request" scoped="" ref="0xb69ba010"/>
        <function-ref name="granted" scoped="" ref="0xb69ba0f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb69ba1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0xb69b22d8" loc="95:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb69b22d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb69b24b0"/>
        <function-ref name="configure" scoped="" ref="0xb69b2590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xb698e390" loc="294:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xb698e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb698e568"/>
        <function-ref name="runTask" scoped="" ref="0xb698e648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb69b3b38" loc="94:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb69b3b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb69b3d10"/>
        <function-ref name="sendDone" scoped="" ref="0xb69b3df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb69b3198" loc="92:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb69b3198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb69b3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb69bad80" loc="91:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb69bad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb69b3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xb69a11c8" loc="98:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xb69a11c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb69a13a0"/>
        <function-ref name="sleep" scoped="" ref="0xb69b17f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb69a1560"/>
        <function-ref name="dataReady" scoped="" ref="0xb69b18d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb69a1720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb69a1800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb69a18e0"/>
        <function-ref name="read" scoped="" ref="0xb69a19c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb69a1aa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb69a1b80"/>
        <function-ref name="setClock" scoped="" ref="0xb69a1c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb69a1d40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb69a1e20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb69b1010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb69b10f0"/>
        <function-ref name="write" scoped="" ref="0xb69b11d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb69b12b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb69b1390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb69b1470"/>
        <function-ref name="getClock" scoped="" ref="0xb69b1550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb69b1630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb69a1480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb69a1640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb69b1710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb69b3520" loc="93:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb69b3520"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb69b36f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb69b37d8"/>
        <function-ref name="splitRead" scoped="" ref="0xb69b38b8"/>
        <function-ref name="write" scoped="" ref="0xb69b3998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb69b1a98" loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb69b1a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb69b1c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xb69b9e40" loc="76:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xb69b9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb697c050"/>
        <function-ref name="sleep" scoped="" ref="0xb697b470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb697c210"/>
        <function-ref name="dataReady" scoped="" ref="0xb697b550"/>
        <function-ref name="initMaster" scoped="" ref="0xb697c3d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb697c4b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb697c590"/>
        <function-ref name="read" scoped="" ref="0xb697c670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb697c750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb697c830"/>
        <function-ref name="setClock" scoped="" ref="0xb697c910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb697c9f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb697cad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb697cc30"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb697cd10"/>
        <function-ref name="write" scoped="" ref="0xb697cdf0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb697ced0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb697b010"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb697b0f0"/>
        <function-ref name="getClock" scoped="" ref="0xb697b1d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb697b2b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb697c130"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb697c2f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb697b390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xb6975e88" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xb6975e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6972070"/>
        <function-ref name="isInput" scoped="" ref="0xb6972150"/>
        <function-ref name="toggle" scoped="" ref="0xb6972230"/>
        <function-ref name="isOutput" scoped="" ref="0xb6972310"/>
        <function-ref name="get" scoped="" ref="0xb69723f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69724d0"/>
        <function-ref name="set" scoped="" ref="0xb69725b0"/>
        <function-ref name="clr" scoped="" ref="0xb6972690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xb69769e8" loc="79:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xb69769e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6976bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb6976ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb6976d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6976e60"/>
        <function-ref name="get" scoped="" ref="0xb6975010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69750f0"/>
        <function-ref name="set" scoped="" ref="0xb69751d0"/>
        <function-ref name="clr" scoped="" ref="0xb69752b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb6976010" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb6976010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb69761e8"/>
        <function-ref name="isInput" scoped="" ref="0xb69762c8"/>
        <function-ref name="toggle" scoped="" ref="0xb69763a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6976488"/>
        <function-ref name="get" scoped="" ref="0xb6976568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6976648"/>
        <function-ref name="set" scoped="" ref="0xb6976728"/>
        <function-ref name="clr" scoped="" ref="0xb6976808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb6974ac0" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb6974ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6974c98"/>
        <function-ref name="stop" scoped="" ref="0xb6974d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xb6972898" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xb6972898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb6972a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xb69781c8" loc="74:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xb69781c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb69783a0"/>
        <function-ref name="sleep" scoped="" ref="0xb69777f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb6978560"/>
        <function-ref name="dataReady" scoped="" ref="0xb69778d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb6978720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb6978800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb69788e0"/>
        <function-ref name="read" scoped="" ref="0xb69789c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb6978aa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb6978b80"/>
        <function-ref name="setClock" scoped="" ref="0xb6978c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6978d40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb6978e20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb6977010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb69770f0"/>
        <function-ref name="write" scoped="" ref="0xb69771d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb69772b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb6977390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb6977470"/>
        <function-ref name="getClock" scoped="" ref="0xb6977550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb6977630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb6978480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb6978640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb6977710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xb69754a0" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xb69754a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6975678"/>
        <function-ref name="isInput" scoped="" ref="0xb6975758"/>
        <function-ref name="toggle" scoped="" ref="0xb6975838"/>
        <function-ref name="isOutput" scoped="" ref="0xb6975918"/>
        <function-ref name="get" scoped="" ref="0xb69759f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6975ad8"/>
        <function-ref name="set" scoped="" ref="0xb6975bb8"/>
        <function-ref name="clr" scoped="" ref="0xb6975c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb694b8d8" loc="86:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb694b8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb694bac0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb694bba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb694a208" loc="89:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb694a208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb694a3f0"/>
        <function-ref name="configure" scoped="" ref="0xb694a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb694b198" loc="85:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb694b198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb694b380"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb694b460"/>
        <function-ref name="request" scoped="" ref="0xb694b540"/>
        <function-ref name="granted" scoped="" ref="0xb694b620"/>
        <function-ref name="isOwner" scoped="" ref="0xb694b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb694bce0" loc="87:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb694bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb694beb8"/>
        <function-ref name="userId" scoped="" ref="0xb694a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb64759c8" loc="44:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb64759c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6475ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb6475d00" loc="45:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb6475d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb6475ed8"/>
        <function-ref name="isEmpty" scoped="" ref="0xb6473010"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb64730f0"/>
        <function-ref name="dequeue" scoped="" ref="0xb64731d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6472490" loc="52:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb6472490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6472678"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6472758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6472d58" loc="56:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6472d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6471010"/>
        <function-ref name="configure" scoped="" ref="0xb64710f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb6471250" loc="57:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb6471250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb6471428"/>
        <function-ref name="isEmpty" scoped="" ref="0xb6471508"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb64715e8"/>
        <function-ref name="dequeue" scoped="" ref="0xb64716c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6473d38" loc="51:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6473d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6473f20"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6472018"/>
        <function-ref name="request" scoped="" ref="0xb64720f8"/>
        <function-ref name="granted" scoped="" ref="0xb64721d8"/>
        <function-ref name="isOwner" scoped="" ref="0xb64722b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6472898" loc="53:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6472898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6472a70"/>
        <function-ref name="userId" scoped="" ref="0xb6472b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb6471848" loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb6471848"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6471a20"/>
        <function-ref name="runTask" scoped="" ref="0xb6471b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6942610" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6942610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb69427e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb69428c8"/>
        <function-ref name="getControlA" scoped="" ref="0xb69429a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6942a88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6942b68"/>
        <function-ref name="setControlB" scoped="" ref="0xb6942c48"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6942d28"/>
        <function-ref name="getControlB" scoped="" ref="0xb6942e08"/>
        <function-ref name="setControlC" scoped="" ref="0xb6942ee8"/>
        <function-ref name="setControlA" scoped="" ref="0xb6941010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6941348" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6941348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6940dc8"/>
        <function-ref name="test" scoped="" ref="0xb69408d8"/>
        <function-ref name="get" scoped="" ref="0xb6941990"/>
        <function-ref name="captured" scoped="" ref="0xb6941ea8"/>
        <function-ref name="reset" scoped="" ref="0xb6940170"/>
        <function-ref name="isOn" scoped="" ref="0xb6940b50"/>
        <function-ref name="set" scoped="" ref="0xb6941c08"/>
        <function-ref name="start" scoped="" ref="0xb69403e8"/>
        <function-ref name="stop" scoped="" ref="0xb6940660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb693e538" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb693e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb693da98"/>
        <function-ref name="fired" scoped="" ref="0xb693d0b8"/>
        <function-ref name="get" scoped="" ref="0xb693eb80"/>
        <function-ref name="reset" scoped="" ref="0xb693d330"/>
        <function-ref name="isOn" scoped="" ref="0xb693dd10"/>
        <function-ref name="set" scoped="" ref="0xb693edf8"/>
        <function-ref name="start" scoped="" ref="0xb693d5a8"/>
        <function-ref name="stop" scoped="" ref="0xb693d820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6945328" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6945328"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6943d68"/>
        <function-ref name="test" scoped="" ref="0xb6943878"/>
        <function-ref name="get" scoped="" ref="0xb6945970"/>
        <function-ref name="setScale" scoped="" ref="0xb6942010"/>
        <function-ref name="getScale" scoped="" ref="0xb69422b0"/>
        <function-ref name="reset" scoped="" ref="0xb6943110"/>
        <function-ref name="overflow" scoped="" ref="0xb6945e88"/>
        <function-ref name="isOn" scoped="" ref="0xb6943af0"/>
        <function-ref name="set" scoped="" ref="0xb6945be8"/>
        <function-ref name="start" scoped="" ref="0xb6943388"/>
        <function-ref name="stop" scoped="" ref="0xb6943600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6937d78" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6937d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb6936010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb69360f0"/>
        <function-ref name="getControlA" scoped="" ref="0xb69361d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb69362b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6936390"/>
        <function-ref name="setControlB" scoped="" ref="0xb6936470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6936550"/>
        <function-ref name="getControlB" scoped="" ref="0xb6936630"/>
        <function-ref name="setControlC" scoped="" ref="0xb6936710"/>
        <function-ref name="setControlA" scoped="" ref="0xb69367f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb6933a80" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb6933a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6931010"/>
        <function-ref name="fired" scoped="" ref="0xb6932610"/>
        <function-ref name="get" scoped="" ref="0xb69320f8"/>
        <function-ref name="reset" scoped="" ref="0xb6932888"/>
        <function-ref name="isOn" scoped="" ref="0xb6931288"/>
        <function-ref name="set" scoped="" ref="0xb6932370"/>
        <function-ref name="start" scoped="" ref="0xb6932b00"/>
        <function-ref name="stop" scoped="" ref="0xb6932d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6936b28" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6936b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6933640"/>
        <function-ref name="test" scoped="" ref="0xb6933150"/>
        <function-ref name="get" scoped="" ref="0xb6935200"/>
        <function-ref name="captured" scoped="" ref="0xb6935718"/>
        <function-ref name="reset" scoped="" ref="0xb69359b8"/>
        <function-ref name="isOn" scoped="" ref="0xb69333c8"/>
        <function-ref name="set" scoped="" ref="0xb6935478"/>
        <function-ref name="start" scoped="" ref="0xb6935c30"/>
        <function-ref name="stop" scoped="" ref="0xb6935ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb69316a0" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb69316a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6930c90"/>
        <function-ref name="fired" scoped="" ref="0xb69302b0"/>
        <function-ref name="get" scoped="" ref="0xb6931ce8"/>
        <function-ref name="reset" scoped="" ref="0xb6930528"/>
        <function-ref name="isOn" scoped="" ref="0xb6930f08"/>
        <function-ref name="set" scoped="" ref="0xb6930010"/>
        <function-ref name="start" scoped="" ref="0xb69307a0"/>
        <function-ref name="stop" scoped="" ref="0xb6930a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb692e340" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb692e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb692d898"/>
        <function-ref name="fired" scoped="" ref="0xb692eea0"/>
        <function-ref name="get" scoped="" ref="0xb692e988"/>
        <function-ref name="reset" scoped="" ref="0xb692d130"/>
        <function-ref name="isOn" scoped="" ref="0xb692db10"/>
        <function-ref name="set" scoped="" ref="0xb692ec00"/>
        <function-ref name="start" scoped="" ref="0xb692d3a8"/>
        <function-ref name="stop" scoped="" ref="0xb692d620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb693c9c0" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb693c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6937500"/>
        <function-ref name="test" scoped="" ref="0xb6937010"/>
        <function-ref name="get" scoped="" ref="0xb6938048"/>
        <function-ref name="setScale" scoped="" ref="0xb6937778"/>
        <function-ref name="getScale" scoped="" ref="0xb6937a18"/>
        <function-ref name="reset" scoped="" ref="0xb69387d8"/>
        <function-ref name="overflow" scoped="" ref="0xb6938560"/>
        <function-ref name="isOn" scoped="" ref="0xb6937288"/>
        <function-ref name="set" scoped="" ref="0xb69382c0"/>
        <function-ref name="start" scoped="" ref="0xb6938a50"/>
        <function-ref name="stop" scoped="" ref="0xb6938cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb68ebe08" loc="30:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb68ebe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7335db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb68c3350"/>
        <function-ref name="fired" scoped="" ref="0xb68eaa88"/>
        <function-ref name="startAt" scoped="" ref="0xb68c3010"/>
        <function-ref name="isRunning" scoped="" ref="0xb68ead00"/>
        <function-ref name="getAlarm" scoped="" ref="0xb68c35c8"/>
        <function-ref name="start" scoped="" ref="0xb68ea570"/>
        <function-ref name="stop" scoped="" ref="0xb68ea810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb68e5a00" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb68e5a00"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb73c65d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb73c65d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68e5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb68e5de8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb68e5de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb68e2878"/>
        <function-ref name="test" scoped="" ref="0xb68e2388"/>
        <function-ref name="get" scoped="" ref="0xb68e3468"/>
        <function-ref name="setScale" scoped="" ref="0xb68e2af0"/>
        <function-ref name="getScale" scoped="" ref="0xb68e2d90"/>
        <function-ref name="reset" scoped="" ref="0xb68e3bf8"/>
        <function-ref name="overflow" scoped="" ref="0xb68e3980"/>
        <function-ref name="isOn" scoped="" ref="0xb68e2600"/>
        <function-ref name="set" scoped="" ref="0xb68e36e0"/>
        <function-ref name="start" scoped="" ref="0xb68e3e70"/>
        <function-ref name="stop" scoped="" ref="0xb68e2110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb645bac0" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb645bac0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xb73c63d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xb73c63d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7335db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6455010"/>
        <function-ref name="fired" scoped="" ref="0xb6457740"/>
        <function-ref name="startAt" scoped="" ref="0xb6457c30"/>
        <function-ref name="isRunning" scoped="" ref="0xb64579b8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6455288"/>
        <function-ref name="start" scoped="" ref="0xb6457228"/>
        <function-ref name="stop" scoped="" ref="0xb64574c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xb64537e8" loc="58:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xb64537e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6452d58"/>
        <function-ref name="fired" scoped="" ref="0xb6452378"/>
        <function-ref name="get" scoped="" ref="0xb6453e30"/>
        <function-ref name="reset" scoped="" ref="0xb64525f0"/>
        <function-ref name="isOn" scoped="" ref="0xb6450010"/>
        <function-ref name="set" scoped="" ref="0xb64520d8"/>
        <function-ref name="start" scoped="" ref="0xb6452868"/>
        <function-ref name="stop" scoped="" ref="0xb6452ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xb6455548" loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xb6455548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6453010"/>
        <function-ref name="test" scoped="" ref="0xb6454ab8"/>
        <function-ref name="get" scoped="" ref="0xb6455b90"/>
        <function-ref name="setScale" scoped="" ref="0xb6453288"/>
        <function-ref name="getScale" scoped="" ref="0xb6453528"/>
        <function-ref name="reset" scoped="" ref="0xb6454350"/>
        <function-ref name="overflow" scoped="" ref="0xb64540d8"/>
        <function-ref name="isOn" scoped="" ref="0xb6454d30"/>
        <function-ref name="set" scoped="" ref="0xb6455e08"/>
        <function-ref name="start" scoped="" ref="0xb64545c8"/>
        <function-ref name="stop" scoped="" ref="0xb6454840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb68c2778" loc="39:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb68c2778"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68c2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb68be868" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb68be868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7335db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68bb010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68bb500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68bb288"/>
        <function-ref name="overflow" scoped="" ref="0xb68bb778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb68b9a68" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb68b9a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7335db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68b8200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68b86f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68b8478"/>
        <function-ref name="overflow" scoped="" ref="0xb68b8968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb68b8c48" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb68b8c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb68b56a0"/>
        <function-ref name="test" scoped="" ref="0xb68b51b0"/>
        <function-ref name="get" scoped="" ref="0xb68b72a8"/>
        <function-ref name="setScale" scoped="" ref="0xb68b5918"/>
        <function-ref name="getScale" scoped="" ref="0xb68b5bb8"/>
        <function-ref name="reset" scoped="" ref="0xb68b7a38"/>
        <function-ref name="overflow" scoped="" ref="0xb68b77c0"/>
        <function-ref name="isOn" scoped="" ref="0xb68b5428"/>
        <function-ref name="set" scoped="" ref="0xb68b7520"/>
        <function-ref name="start" scoped="" ref="0xb68b7cb0"/>
        <function-ref name="stop" scoped="" ref="0xb68b7f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb68b2ae8" loc="63:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb68b2ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68b1308"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68b17f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68b1580"/>
        <function-ref name="overflow" scoped="" ref="0xb68b1a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb68bc7f0" loc="62:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb68bc7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68b2010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68b2500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68b2288"/>
        <function-ref name="overflow" scoped="" ref="0xb68b2778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb68b0988" loc="48:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb68b0988"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68af010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb68af360" loc="49:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb68af360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68afab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68ad010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68afd28"/>
        <function-ref name="overflow" scoped="" ref="0xb68ad288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xb68bfc20" loc="36:/home/wsn/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb68bfc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb735ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb735b010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb68a9380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb687eed8" loc="49:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb687eed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb687d0c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb687d1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb687d280"/>
        <function-ref name="cancel" scoped="" ref="0xb687d360"/>
        <function-ref name="sendDone" scoped="" ref="0xb687d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb687d580" loc="50:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb687d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb687d758"/>
        <function-ref name="payloadLength" scoped="" ref="0xb687d838"/>
        <function-ref name="getPayload" scoped="" ref="0xb687d918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb687d9f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb687dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb687dc18" loc="51:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb687dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb687ddf0"/>
        <function-ref name="source" scoped="" ref="0xb687ded0"/>
        <function-ref name="address" scoped="" ref="0xb6831010"/>
        <function-ref name="destination" scoped="" ref="0xb68310f0"/>
        <function-ref name="setSource" scoped="" ref="0xb68311d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb68312b0"/>
        <function-ref name="type" scoped="" ref="0xb6831390"/>
        <function-ref name="setType" scoped="" ref="0xb6831470"/>
        <function-ref name="isForMe" scoped="" ref="0xb6831550"/>
        <function-ref name="setGroup" scoped="" ref="0xb6831630"/>
        <function-ref name="localGroup" scoped="" ref="0xb6831710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb6831870" loc="52:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb6831870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6831a48"/>
        <function-ref name="noAck" scoped="" ref="0xb6831b28"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6831c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb643ab50" loc="49:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb643ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb643ad28"/>
        <function-ref name="getPayload" scoped="" ref="0xb643ae08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb643aee8"/>
        <function-ref name="cancel" scoped="" ref="0xb6437010"/>
        <function-ref name="sendDone" scoped="" ref="0xb64370f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6437230" loc="50:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6437230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6437408"/>
        <function-ref name="payloadLength" scoped="" ref="0xb64374e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb64375c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb64376a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6437788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb64378c8" loc="51:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb64378c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6437aa0"/>
        <function-ref name="source" scoped="" ref="0xb6437b80"/>
        <function-ref name="address" scoped="" ref="0xb6437c60"/>
        <function-ref name="destination" scoped="" ref="0xb6437d40"/>
        <function-ref name="setSource" scoped="" ref="0xb6437e20"/>
        <function-ref name="setDestination" scoped="" ref="0xb6437f00"/>
        <function-ref name="type" scoped="" ref="0xb6436010"/>
        <function-ref name="setType" scoped="" ref="0xb64360f0"/>
        <function-ref name="isForMe" scoped="" ref="0xb64361d0"/>
        <function-ref name="setGroup" scoped="" ref="0xb64362b0"/>
        <function-ref name="localGroup" scoped="" ref="0xb6436390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb64364f0" loc="52:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb64364f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb64366c8"/>
        <function-ref name="noAck" scoped="" ref="0xb64367a8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6436888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6430228" loc="44:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6430228"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6430400"/>
        <function-ref name="getPayload" scoped="" ref="0xb64304e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb64305c0"/>
        <function-ref name="cancel" scoped="" ref="0xb64306a0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6430780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb64308f0" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb64308f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6430ac8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6430ba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6430c88"/>
        <function-ref name="cancel" scoped="" ref="0xb6430d68"/>
        <function-ref name="sendDone" scoped="" ref="0xb6430e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb642f010" loc="47:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb642f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb642f1e8"/>
        <function-ref name="source" scoped="" ref="0xb642f2c8"/>
        <function-ref name="address" scoped="" ref="0xb642f3a8"/>
        <function-ref name="destination" scoped="" ref="0xb642f488"/>
        <function-ref name="setSource" scoped="" ref="0xb642f568"/>
        <function-ref name="setDestination" scoped="" ref="0xb642f648"/>
        <function-ref name="type" scoped="" ref="0xb642f728"/>
        <function-ref name="setType" scoped="" ref="0xb642f808"/>
        <function-ref name="isForMe" scoped="" ref="0xb642f8e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb642f9c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb642faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6865100" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6865100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb68652d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb68653b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6865498"/>
        <function-ref name="cancel" scoped="" ref="0xb6865578"/>
        <function-ref name="sendDone" scoped="" ref="0xb6865658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb683b780" loc="48:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb683b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb683b968"/>
        <function-ref name="getPayload" scoped="" ref="0xb683ba48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb683bb28"/>
        <function-ref name="cancel" scoped="" ref="0xb683bc08"/>
        <function-ref name="sendDone" scoped="" ref="0xb683bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb683b010" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb683b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb683b1f8"/>
        <function-ref name="getPayload" scoped="" ref="0xb683b2d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb683b3b8"/>
        <function-ref name="cancel" scoped="" ref="0xb683b498"/>
        <function-ref name="sendDone" scoped="" ref="0xb683b578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb683aa50" loc="50:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb683aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb683ac28"/>
        <function-ref name="payloadLength" scoped="" ref="0xb683ad08"/>
        <function-ref name="getPayload" scoped="" ref="0xb683ade8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb683aec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6839010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xb6839190" loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xb6839190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6839368"/>
        <function-ref name="runTask" scoped="" ref="0xb6839448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xb68395c8" loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xb68395c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb68397a0"/>
        <function-ref name="runTask" scoped="" ref="0xb6839880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb683be28" loc="49:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb683be28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb683a050"/>
        <function-ref name="source" scoped="" ref="0xb683a130"/>
        <function-ref name="address" scoped="" ref="0xb683a210"/>
        <function-ref name="destination" scoped="" ref="0xb683a2f0"/>
        <function-ref name="setSource" scoped="" ref="0xb683a3d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb683a4b0"/>
        <function-ref name="type" scoped="" ref="0xb683a590"/>
        <function-ref name="setType" scoped="" ref="0xb683a670"/>
        <function-ref name="isForMe" scoped="" ref="0xb683a750"/>
        <function-ref name="setGroup" scoped="" ref="0xb683a830"/>
        <function-ref name="localGroup" scoped="" ref="0xb683a910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb682e5d8" loc="46:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="SerialAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb682e5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb682e7b0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb682e890"/>
        <function-ref name="getPayload" scoped="" ref="0xb682e970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb682ea50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb682eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb682e2c0" loc="45:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="SerialAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb682e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb682e498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb682ec70" loc="47:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="SerialAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb682ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb682ee48"/>
        <function-ref name="source" scoped="" ref="0xb682ef28"/>
        <function-ref name="address" scoped="" ref="0xb682b018"/>
        <function-ref name="destination" scoped="" ref="0xb682b0f8"/>
        <function-ref name="setSource" scoped="" ref="0xb682b1d8"/>
        <function-ref name="setDestination" scoped="" ref="0xb682b2b8"/>
        <function-ref name="type" scoped="" ref="0xb682b398"/>
        <function-ref name="setType" scoped="" ref="0xb682b478"/>
        <function-ref name="isForMe" scoped="" ref="0xb682b558"/>
        <function-ref name="setGroup" scoped="" ref="0xb682b638"/>
        <function-ref name="localGroup" scoped="" ref="0xb682b718"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb730bc00" loc="62:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb730b090" loc="60:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xb7302010" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xb7303dd8" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xb73055c0" loc="31:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xb7305bf8" loc="39:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7305aa0" loc="39:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xb73032d8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7303180" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xb7303830" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb72f6d08" loc="44:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb72f5138" loc="45:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb72f6578" loc="42:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb72f5908" loc="47:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb72f6938" loc="43:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb72f5510" loc="46:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb72fde18" loc="40:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xb72f61c8" loc="41:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb750a9d0" loc="57:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb73aa3b0" loc="72:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb750ae10" loc="65:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb73a52d0" loc="67:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb73a57e8" loc="75:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb7330b90" loc="76:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb731ee90" loc="62:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb7376470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb731e1a8" loc="52:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb7200020" loc="113:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7203eb8" loc="113:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb7200d68" loc="138:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7200c10" loc="138:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb72037d0" loc="104:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7200530" loc="130:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0xb71c9490" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb71cbec8" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb71c9148" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb71c9328" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb71c6190" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71c7d60" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb71c6010" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb71c7800" loc="123:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb71c8168" loc="96:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71c8010" loc="96:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb71c8e58" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71c8b00" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb71c8cf8" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb71ffce8" loc="65:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71ffb90" loc="65:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb71bf6c8" loc="78:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71bf570" loc="78:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb71be648" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71be2e8" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb71be4c8" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb71c0ce8" loc="106:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb71c0350" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71c0010" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb71c01f0" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb71c3088" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
              <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7201b28" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb7201d08" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7201ee8" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb71aca18" loc="61:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb71ace60" loc="67:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb71aa2f0" loc="72:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb71aab60" loc="83:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb71a9880" loc="100:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb71a9d28" loc="117:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb71aa718" loc="77:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb71a7640" loc="134:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb71a74e8" loc="134:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb71ac5f0" loc="56:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb71a9010" loc="89:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb71a9438" loc="94:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb71b1710" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71b15b8" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb71b0220" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71b00c8" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb71b0ca8" loc="85:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71b0b50" loc="85:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb71b59e8" loc="177:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7227b10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71b5890" loc="177:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb71ba168" loc="88:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71ba010" loc="88:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb71bc010" loc="68:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb71bc6a8" loc="78:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71bc550" loc="78:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb71b9bd8" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71b9870" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb71b9a78" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb71bad50" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71ba9e8" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb71babf0" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb71b8310" loc="147:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71b81b8" loc="147:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb71b8e48" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71b8b18" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb71b8ce8" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72278b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb71b67c0" loc="136:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71b6668" loc="136:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb71b4688" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7227b10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71b4328" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb71b4528" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7227b10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb71b4f00" loc="195:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7227b10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb71a0098" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71a3d48" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb71a3f28" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb719fb98" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb719f838" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb719fa18" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb719f2d8" loc="112:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb71a0cd8" loc="89:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71a0b80" loc="89:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb719e990" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb719e638" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb719e830" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0xb7167d28" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7167998" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0xb7167bc8" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0xb716aa88" loc="15:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0xb7167388" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7167010" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0xb7167228" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb71485a0" loc="95:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7148a68" loc="105:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0xb7152c48" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0xb7152810" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0xb714c4d8" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0xb714b158" loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0xb714a1e0" loc="94:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb714a088" loc="94:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0xb714b680" loc="79:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0xb714cc08" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb714cab0" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0xb714a6e8" loc="100:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0xb714bbe0" loc="85:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0xb7151540" loc="71:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0xb7151b08" loc="81:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0xb7154ea8" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0xb7154d50" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0xb7150280" loc="91:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7150128" loc="91:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0xb714f500" loc="62:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0xb714fce8" loc="69:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb714fb90" loc="69:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0xb714e3a0" loc="80:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb714e248" loc="80:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb70a0af0" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb70a07a0" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb70a0990" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0xb709ce88" loc="79:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb709cd30" loc="79:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb709a6a8" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb709a358" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb709a548" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0xb709c2f0" loc="65:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0xb7099560" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb7099010" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7099200" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb70993f8" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0xb709c878" loc="72:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb709b968" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb709b418" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb709b608" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb709b800" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb70898b8" loc="46:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb7089760" loc="46:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb7085170" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb7089de8" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0xb7085010" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7083bc0" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7083bc0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7083d28" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7083d28"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb7080230" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7083d28"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb7080c58" loc="76:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb7080758" loc="71:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb707f070" loc="82:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0xb7077850" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0xb7077010" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0xb7076e38" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7076ce0" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0xb7076538" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0xb707a720" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0xb707ab60" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0xb7077450" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0xb7077c50" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0xb7076188" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7076030" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0xb7076908" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0xb6fefbc0" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb6fed0f8" loc="87:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb6fef348" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb6fedb28" loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb6fed6b8" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb6fed560" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb6fee6e0" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6fee588" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb6feb168" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb6feb010" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb6fef798" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0xb6feec58" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6feeb00" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb6fee168" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6fee010" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb6ff12f8" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ff12f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xb6fe8e18" loc="88:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xb6fe8cc0" loc="88:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb6fe8430" loc="76:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6ff17f0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ff12f8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb6fe9350" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ff12f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6fe91f8" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ff12f8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb6fe9790" loc="64:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb6fe8890" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6ff1d68" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ff12f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6ff1c10" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ff12f8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6fe9b98" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6fe8010" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb6fe6320" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6fe6320"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xb6fe1260" loc="74:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb6fe3210" loc="58:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6fe6818" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6fe6320"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb6fe3618" loc="62:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb6fe16c0" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6fe6da0" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6fe6320"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6fe6c48" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6fe6320"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6fe3a20" loc="65:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6fe3e18" loc="68:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb6ff73e8" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6ff73e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xb6ff4ba0" loc="98:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb6ff4310" loc="87:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6ff78d8" loc="61:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6ff73e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0xb6ff3168" loc="104:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb6ff3010" loc="104:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xb6ff35f8" loc="110:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb6ff56c8" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb6ff52a8" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb6ff4778" loc="93:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6ff7e50" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6ff73e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6ff7cf8" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6ff73e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6ff5ad0" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6ff5ec8" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6f35308" loc="53:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6f35308"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb6f31a28" loc="136:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb6f34890" loc="83:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb6f32a00" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb6f326b8" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb6f328a0" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb6f32210" loc="98:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb6f303e8" loc="151:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb6f31e70" loc="144:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb6f34d20" loc="92:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb6f35960" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb6f35808" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb6f31408" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb6f310c0" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb6f312a8" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb6f34010" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb6f35ea0" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6f344e0" loc="78:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6eeb3c8" loc="53:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6eeb3c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb6eeb8a8" loc="61:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6ee9c20" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6ee9c20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb6ee9d88" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ee9d88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb6ee3038" loc="109:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ee9d88"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb6ee6d08" loc="78:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb6ee59c0" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ee9d88"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ee9d88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb6ee5670" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ee9d88"/></type-var>
          </variable>
          <variable name="dt" ref="0xb6ee5860" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ee9d88"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb6ee5168" loc="88:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb6ee34c8" loc="116:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ee9d88"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6ee63c8" loc="66:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ee9d88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb6ee6270" loc="66:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ee9d88"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6ee68a8" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb6ecb8a8" loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb6ecce00" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb6ecf9e8" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb6ecb438" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb6ecb2e0" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb6ecc990" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6ecc838" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb6ecbe70" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb6ecbd18" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb6ecfe38" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb6ecc418" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6ecc2c0" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0xb6ec5b28" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0xb6ec6848" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0xb6ec6c70" loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0xb6ec5168" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xb6ec3010" loc="98:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0xb6ec5648" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xb6ec9d60" loc="57:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb734d9e0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb734dc08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xb6ec6368" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb734d9e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb734dc08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xb6ec6210" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb734d9e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb734dc08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0xb6e01a98" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xb6e01720" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb6e01938" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0xb6dfa880" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dfa4e8" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0xb6dfa720" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0xb6df9350" loc="71:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6df91f8" loc="71:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0xb6dfa010" loc="57:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0xb6dfd8f8" loc="52:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0xb6dfd7a0" loc="52:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0xb6df5380" loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6df5228" loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0xb6df7780" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6df73e8" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0xb6df7620" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0xb6df6a20" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6df68c8" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0xb6df63a8" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6df6010" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0xb6df6248" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0xb6df5ca0" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6df5b48" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0xb6df34f0" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb6df3010" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb6df2e58" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb6df3978" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb6dfb3e0" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6dfb3e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb6dfb548" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6dfb548"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xb6def748" loc="63:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6dfb548"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6def5f0" loc="63:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xb6df0200" loc="70:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6df00a8" loc="70:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xb6dfbbd0" loc="49:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dfba78" loc="49:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6df0cc0" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6dfb548"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6df0950" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb6df0b60" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6dfb548"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0xb6de2e70" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb6de2e70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0xb6dde168" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dde010" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6ddfb30" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb6de2e70"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ddf9d8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xb6ddf510" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ddf3b8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6dde8f0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb6de2e70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dde578" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb6dde790" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb6de2e70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0xb6dd7010" loc="47:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ddadf8" loc="47:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb6dc31c8" loc="120:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb6dc48c0" loc="97:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb6dc42c0" loc="88:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xb6dc4d70" loc="102:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb6dc38c0" loc="128:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0xb6dc0870" loc="41:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb71d99d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc0718" loc="41:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb6dcac48" loc="37:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb71d99d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb6dc02a0" loc="39:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb71d99d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc0148" loc="39:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb6dbf800" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb71d99d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dbf460" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6dbf6a0" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb71d99d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb6dbf060" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb71d99d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc0ca0" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6dc0ee0" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb71d99d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0xb6dbe350" loc="49:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb71d9738"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dbe1f8" loc="49:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0xb6dbeac0" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xb71d9738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dbe730" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb6dbe960" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xb71d9738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb6dbfd70" loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dbfc18" loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0xb6dbef00" loc="53:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb71d9738"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb6dc9430" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb71d99d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb6dccea8" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb71d99d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb6dc90e8" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6dc92c8" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb6dc67f0" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc6490" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6dc6670" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb6dc7ee0" loc="110:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb6dc9dc0" loc="83:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc9c68" loc="83:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6dc78e8" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc7590" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb6dc7788" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0xb6dada98" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0xb6daa090" loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0xb6daa6d0" loc="79:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0xb6dad698" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0xb6d8a2d8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0xb6d96eb8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d96d60" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0xb6d8c4b8" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7227b10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d8c360" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0xb6d8b240" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d8b0e8" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb6d8e740" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d8e5e8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb6d9f978" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d9f820" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb6d8eed8" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d8eb70" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6d8ed78" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb6d8e170" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d9fdd8" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6d8e010" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb6d8cc40" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7227b10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d8c8e0" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb6d8cae0" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7227b10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0xb6d93e40" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0xb6d913b8" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0xb6d90898" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d90740" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0xb6d91a68" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d91910" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0xb6d90188" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d90030" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0xb6d78c30" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0xb6d783d0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0xb71db3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0xb6d78278" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0xb71db3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb6d78818" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0xb6d8fd28" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0xb6d770c8" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb71db3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0xb6d732e0" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d73188" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb6d76860" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d76708" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb6d75608" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb6d75170" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d76d58" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb6d75010" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xb6d76168" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d76010" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xb6d75c88" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d75b30" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0xb6da1510" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xb6da1010" loc="40:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6db0ea0" loc="40:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xb6da1bf0" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6da1a98" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0xb6da00f8" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0xb6da0828" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6da06d0" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0xb6d96188" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d96030" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0xb6d9bb38" loc="86:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0xb6d9b680" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6d9b308" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6d9b520" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb6d9e668" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d9e510" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0xb6d9ecb0" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d9eb58" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0xb6d9c680" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6d9c308" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6d9c520" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0xb6da47e0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xb6d9e010" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6da4cb0" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6da4e78" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb6d9cd98" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d9cc40" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0xb6d817f8" loc="131:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d816a0" loc="131:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0xb6d829d8" loc="120:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d82880" loc="120:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0xb6d89a08" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d896b8" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0xb6d898a8" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0xb6d88dc0" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d88c68" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0xb6d7ec70" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d7e910" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6d7eb10" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0xb6d88728" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d885d0" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0xb6d811e8" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d82e90" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0xb6d81088" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0xb6d86d00" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6d86988" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6d86ba0" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0xb6d7e498" loc="151:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d7e340" loc="151:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0xb6d88088" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d89f18" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0xb6d85d28" loc="99:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d85bd0" loc="99:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0xb6d85678" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6d85300" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6d85518" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0xb6d7c3a8" loc="178:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb71d99d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb6d7d2e0" loc="162:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d7d188" loc="162:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0xb6d7ded8" loc="173:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb71d9738"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0xb6d80e20" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d80ac0" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6d80cc0" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0xb6d86448" loc="81:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d862f0" loc="81:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0xb6d823f8" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d820a8" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0xb6d82298" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0xb6d80010" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d81c90" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0xb6d81e80" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb6d7c980" loc="185:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d7c828" loc="185:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xb6d84540" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d84218" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6d843e0" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0xb6d89200" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d890a8" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb6d7d9f0" loc="168:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d7d898" loc="168:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0xb6d80640" loc="141:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d804e8" loc="141:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0xb6d84b90" loc="110:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d84a38" loc="110:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0xb6d99d08" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d999a8" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0xb6d99ba8" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0xb6d971a8" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xb6da3e78" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6da3d20" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0xb6d994d8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d99380" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0xb6d94300" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d941a8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0xb6d95c50" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d95af8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0xb6d947f8" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0xb6d94eb0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d94d58" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0xb6d1a010" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d1de70" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb6d19088" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d1af18" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6d1a980" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d1a628" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb6d1a820" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0xb6d18058" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
              <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d19eb0" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb6d0d9a0" loc="50:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xb6d0c258" loc="60:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb6d0de10" loc="55:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7227b10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb6d0d4b0" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7227b10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb6d0d148" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7227b10"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb6d0d350" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb6caa9b0" loc="53:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb6ca6010" loc="61:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb6ca8be0" loc="65:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xb6ca8720" loc="59:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb6ca5298" loc="90:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0xb6ca5798" loc="98:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb6c9d530" loc="79:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6ca7eb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6c9d3d8" loc="79:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6ca7eb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb6c9f1c8" loc="53:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb6c9f888" loc="62:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6ca7eb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6c9f730" loc="62:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6ca7eb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb6c9fe38" loc="70:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb6ca7eb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0xb6bd1e30" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
              <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6bd1cb8" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0xb6bd1640" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6bd14e8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb6bc4c58" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6bc4b00" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0xb6bc30f8" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6bc41c0" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6bc4068" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6bc4708" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6bc45b0" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0xb6bc8c08" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6bc8ab0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0xb6bc78f8" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6bc77a0" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0xb6bc7318" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6bc71c0" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0xb6bc5010" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6bc7e58" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0xb6bc8588" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6bc8430" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7227d70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0xb6b76d48" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0xb6b73740" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb6b73d88" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb6b73c30" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0xb6b72210" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0xb6b732c0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb6b726c8" loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0xb6b75720" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6b755c8" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0xb6b6f3e8" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6b75e98" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb6b75d40" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb6b2ea08" loc="52:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb6b2e560" loc="46:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75028a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb6b11098" loc="53:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6b11098"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb6b116e8" loc="64:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6b11098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb6b11590" loc="64:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6b11098"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0xb6afc350" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6afc1f8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6afd088" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6b00f10" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0xb6afd820" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6afd4e0" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb6afd6c0" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6afdda0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6afdc48" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb71ccc88"/>
                <typename><typedef-ref name="message_t" ref="0xb71cba30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0xb6adf010" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb6ae2e68" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb6ae2988" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6a549f8" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6a549f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb6a54b60" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6a54b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0xb6a4f188" loc="66:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6a54b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb6a4f030" loc="66:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6a54b60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xb6a521a8" loc="54:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb6a52b58" loc="66:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb6a52710" loc="61:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb6a525b8" loc="61:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xb6a57c80" loc="53:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0xb6a56718" loc="62:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6a565c0" loc="62:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0xb6a552b8" loc="74:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6a55160" loc="74:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0xb6a56c28" loc="68:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb6a55898" loc="81:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6a55740" loc="81:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb69b8368" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb69bbd38" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb69b8010" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb69b8200" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb69b79a8" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb69b7228" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb69b7440" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb69b7630" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7502228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb69b7838" loc="83:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb69bc868" loc="45:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb69bc710" loc="45:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0xb69aa1a8" loc="86:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xb69a58d8" loc="126:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xb69a7a00" loc="117:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xb69a5ec0" loc="128:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xb69a5d68" loc="128:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xb69abd28" loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xb69a69d8" loc="122:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xb69a6880" loc="122:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xb69a8c20" loc="113:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xb69a8ac8" loc="113:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb69aaa38" loc="97:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xb69a1010" loc="141:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb69a2e38" loc="141:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xb69a7090" loc="114:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0xb69a3868" loc="131:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xb69a3710" loc="131:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb69a2138" loc="136:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xb69a5490" loc="125:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xb69a5338" loc="125:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xb69a2a00" loc="140:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xb69a6010" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xb69a7e38" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb69a8010" loc="103:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb69aae78" loc="103:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xb69a75e0" loc="116:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xb69a7488" loc="116:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xb69a6e88" loc="123:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xb69a3308" loc="129:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0xb69a3c78" loc="132:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xb69a2590" loc="138:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xb69a6448" loc="120:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73c76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0xb69aa5d0" loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb69a85d8" loc="109:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb69a8480" loc="109:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7503b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb69742f0" loc="95:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb69747d8" loc="105:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73a8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
