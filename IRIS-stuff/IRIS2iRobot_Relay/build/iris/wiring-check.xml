<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="18:SerialAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb6f7cd00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb734e320"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb734e320"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb734fa28"/></to>
    </wire>
    <wire loc="19:SerialAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6f7b060"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb6f9cd98"/></to>
    </wire>
    <wire loc="51:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6f9cd98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb6f964b0"/></to>
    </wire>
    <wire loc="20:SerialAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb6f71278"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7245010"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7245010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb71b2d18"/></to>
    </wire>
    <wire loc="21:SerialAppC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb6f71888"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb70c75d8"/></to>
    </wire>
    <wire loc="51:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb70c75d8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb70c1e28"/></to>
    </wire>
    <wire loc="22:SerialAppC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb6f71ce8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb70c7a58"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb70c7a58"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb70c0290"/></to>
    </wire>
    <wire loc="23:SerialAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0xb6f73768"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6f40c88"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6f40c88"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6f394d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:SerialAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6f705f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb68c0580"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb68c0580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb647a230"/></to>
    </wire>
    <wire loc="26:SerialAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6f70ce0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb68c0c18"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb68c0c18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb647a8c8"/></to>
    </wire>
    <wire loc="27:SerialAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xb6f72b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6e48890"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6e48890"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6e2d3e8"/></to>
    </wire>
    <wire loc="28:SerialAppC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6f6f9f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb68c1ed8"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb68c1ed8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb647db50"/></to>
    </wire>
    <wire loc="29:SerialAppC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6f6e238"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb68712c0"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb68712c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6e45b38"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb64b89c8"/></to>
    </wire>
    <wire loc="120:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb6aa74d8"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6b520e8"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb6530330"/></to>
    </wire>
    <wire loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6bf8be0"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb654c078"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb65b86a0"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6f37d48"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0xb7084d80"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0xb707b920"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb70c16d8"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb71b2980"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb734fdc0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb73ed5f0"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb73ed5f0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb73748a8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7256400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb6a0b030"/></to>
    </wire>
    <wire loc="123:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7256400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb6aa8e40"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7256400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7350908"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7350908"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb734cd58"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7256808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb73459c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6927a00"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb73459c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6fd1c70"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7345268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7267010"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xb7343620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7268bf8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7343218"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6f82870"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7343218"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb734b630"/></to>
    </wire>
    <wire loc="46:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb734b630"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb73405a0"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb734ba00"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb73459c8"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xb7338b10"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xb7333dc8"/></to>
    </wire>
    <wire loc="141:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xb7333dc8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb72e7170"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb733b588"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb734ba00"/></to>
    </wire>
    <wire loc="191:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xb7315210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb72940b0"/></to>
    </wire>
    <wire loc="165:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xb7325750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb72d0090"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb72d0090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67a0010"/></to>
    </wire>
    <wire loc="176:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xb731ece8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb72c7d68"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb72c7d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6765228"/></to>
    </wire>
    <wire loc="185:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xb7319ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb72be7d0"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb72be7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb672dc08"/></to>
    </wire>
    <wire loc="196:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0xb7312750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7286880"/></to>
    </wire>
    <wire loc="143:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xb73312f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb72e64f0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb72e64f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6841010"/></to>
    </wire>
    <wire loc="183:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xb731aa98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb72bf4f0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb72bf4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67307f8"/></to>
    </wire>
    <wire loc="146:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xb7330750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb72e13d8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb72e13d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6817de8"/></to>
    </wire>
    <wire loc="157:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xb732aea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb72d7170"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb72d7170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67d8d70"/></to>
    </wire>
    <wire loc="168:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xb7322670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb72ced68"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb72ced68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb679b010"/></to>
    </wire>
    <wire loc="179:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xb731cc08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb72c5ac8"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb72c5ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67600b0"/></to>
    </wire>
    <wire loc="138:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xb733ff20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb72e9410"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb72e9410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb684aa08"/></to>
    </wire>
    <wire loc="149:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xb732e670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb72df030"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb72df030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb680ec08"/></to>
    </wire>
    <wire loc="160:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xb7328ce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb72d6e48"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb72d6e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67d3c08"/></to>
    </wire>
    <wire loc="171:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xb73204b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb72ccac8"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb72ccac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6796010"/></to>
    </wire>
    <wire loc="188:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xb7317ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb72bc4f0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb72bc4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6728a88"/></to>
    </wire>
    <wire loc="194:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xb73132f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb728b880"/></to>
    </wire>
    <wire loc="174:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xb731f8e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb72c8a80"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb72c8a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6769de0"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb72e7170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb68459e8"/></to>
    </wire>
    <wire loc="152:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xb732c590"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb72dec88"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb72dec88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6809a88"/></to>
    </wire>
    <wire loc="192:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xb7315e08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7291880"/></to>
    </wire>
    <wire loc="155:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xb732ba08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb72d9dc8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb72d9dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67db938"/></to>
    </wire>
    <wire loc="166:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xb7324210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb72d09e8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb72d09e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb679f9e8"/></to>
    </wire>
    <wire loc="177:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xb731d750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb72c6790"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb72c6790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6764c08"/></to>
    </wire>
    <wire loc="186:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xb73188e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb72bd170"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb72bd170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb672b6c0"/></to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xb7331ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb72e6e48"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb72e6e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb68409e8"/></to>
    </wire>
    <wire loc="147:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xb732f210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb72e1d30"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb72e1d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb68127f8"/></to>
    </wire>
    <wire loc="158:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xb73298e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb72d7ac8"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb72d7ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67d67f8"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xb73210a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb72cd790"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb72cd790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb679a9e8"/></to>
    </wire>
    <wire loc="180:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xb731b670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb72c34f0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb72c34f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb675fa88"/></to>
    </wire>
    <wire loc="139:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xb7334930"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb72e9d68"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb72e9d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6848538"/></to>
    </wire>
    <wire loc="150:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xb732d0a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb72df988"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb72df988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb680c6c0"/></to>
    </wire>
    <wire loc="161:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xb7327750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb72d57d0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb72d57d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67d16c0"/></to>
    </wire>
    <wire loc="189:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xb7316750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb72bce48"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb72bce48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6726538"/></to>
    </wire>
    <wire loc="164:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xb7326c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb72d16f8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb72d16f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67a2538"/></to>
    </wire>
    <wire loc="175:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xb731e2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb72c7410"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb72c7410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67677f8"/></to>
    </wire>
    <wire loc="184:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xb73194b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb72bfe48"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb72bfe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb672e228"/></to>
    </wire>
    <wire loc="195:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xb7313ce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb72880b0"/></to>
    </wire>
    <wire loc="142:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xb7332830"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb72e7ac8"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb72e7ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6843538"/></to>
    </wire>
    <wire loc="153:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xb732b010"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb72dd6b0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb72dd6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6807538"/></to>
    </wire>
    <wire loc="182:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xb731a0a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb72c0b00"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb72c0b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6736de8"/></to>
    </wire>
    <wire loc="156:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xb732a4b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb72d8790"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb72d8790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67d93b0"/></to>
    </wire>
    <wire loc="167:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xb7324c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb72ce410"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb72ce410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb679d538"/></to>
    </wire>
    <wire loc="178:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xb731c210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb72c5170"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb72c5170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67626c0"/></to>
    </wire>
    <wire loc="187:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xb73172f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb72bdac8"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb72bdac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67290b0"/></to>
    </wire>
    <wire loc="137:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xb733f528"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb72eaa28"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb72eaa28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb684b050"/></to>
    </wire>
    <wire loc="148:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xb732fc08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb72e06b0"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb72e06b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb680f228"/></to>
    </wire>
    <wire loc="159:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xb73282f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb72d64f0"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb72d64f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67d4228"/></to>
    </wire>
    <wire loc="170:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xb7321a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb72cc170"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb72cc170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6798538"/></to>
    </wire>
    <wire loc="193:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xb7314830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb728e0b0"/></to>
    </wire>
    <wire loc="173:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xb7320ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb72c8128"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb72c8128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb676a418"/></to>
    </wire>
    <wire loc="162:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xb7326210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb72d4170"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb72d4170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb67cf0b0"/></to>
    </wire>
    <wire loc="140:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xb73333d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb72e8790"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb72e8790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6846010"/></to>
    </wire>
    <wire loc="151:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xb732db18"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb72de330"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb72de330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb680a0b0"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7373100"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb7373d68"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb73ee728"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xb735f218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xb6ed0958"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb71b2d18"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7198de8"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7209d60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7204be8"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb71fe148"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb71b4310"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7242248"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb71e93a8"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb71f0308"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb71b49a8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb71f5140"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb71e96d0"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb71b2980"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7198a50"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb71a9840"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb71ea9e0"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb71b4ed0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb71afc20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb71b35a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb71af618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0xb71a9338"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0xb6fa4928"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb71afc20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7122c60"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb71af618"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb71228a0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0xb70e9400"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0xb71a9338"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7196180"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb71a9840"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb70e83f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb71a9840"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb70e1420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb71a9840"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb70e98e8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb7191778"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0xb70e9dc0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0xb71935b8"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0xb718d8d8"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0xb70e6868"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb718be08"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb70e53f0"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb70e53f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb70c7168"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb70dcb80"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb70e5870"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb70e5870"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb70c7a58"/></to>
    </wire>
    <wire loc="332:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0xb715dce8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0xb717b168"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0xb715e578"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb715a998"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0xb70e7030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0xb70e7468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb70c86e8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb70c75d8"/></to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb70c7168"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb70c1a10"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb70c2450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb70ca878"/></to>
    </wire>
    <wire loc="33:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb70ca878"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb7041e60"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb70990a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb70c2450"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0xb70c0b28"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0xb7087a80"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0xb7087a80"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0xb707c288"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0xb709a010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0xb7086010"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0xb7086010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0xb707c7b8"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0xb709a448"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0xb7086508"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0xb7086508"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0xb707ccd0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0xb7085b80"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0xb707a880"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0xb7085178"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0xb707bd70"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0xb7085688"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0xb707a368"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb70794a8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7345268"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb7079be8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7361420"/></to>
    </wire>
    <wire loc="34:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb6fa70e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb70403c0"/></to>
    </wire>
    <wire loc="31:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb70403c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6fd2890"/></to>
    </wire>
    <wire loc="32:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6fbca58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7036928"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7036928"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7020230"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb702e360"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb701e530"/></to>
    </wire>
    <wire loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb7033190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb701d258"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb7024cd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb701a128"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb7024cd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb7019d20"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb7024cd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb7016950"/></to>
    </wire>
    <wire loc="27:/home/wsn/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6fd0078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7036928"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6f82870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6f96168"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb6f95240"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb6f84a70"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb6f84a70"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xb7334930"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb6f95c28"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb6f834c0"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb6f834c0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xb733ff20"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb6f94660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb6f83ec8"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb6f83ec8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xb733f528"/></to>
    </wire>
    <wire loc="44:SerialC.nc">
      <from><interface-ref name="SendToSerial" scoped="" ref="0xb6f6aae8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:SerialC.nc">
      <from><interface-ref name="SendToRadio" scoped="" ref="0xb6f69308"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb6f394d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6f33510"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb6f33510"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6e7ef00"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6f37d48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6f2fbc8"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6f2d4d8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6e51a88"/></to>
    </wire>
    <wire loc="35:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6f2fbc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6f21c78"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xb6e56338"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6f2cf08"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6e82248"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xb6f25390"/></to>
    </wire>
    <wire loc="36:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xb6f25390"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6e9e0c0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6e50448"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xb6f24010"/></to>
    </wire>
    <wire loc="37:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xb6f24010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6e9db70"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6e9db70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6654258"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6f21c78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6656390"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6e9e0c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb66567c8"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6652420"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6edf128"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6edf128"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6ed5098"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6650640"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6edd408"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6edd408"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6ed2398"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb664f050"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6eddf28"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6eddf28"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6ed2eb8"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb664da50"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb6edaad0"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb6edaad0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb6ed0db8"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0xb6e81bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xb6e54560"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6e2d3e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6e15390"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6e40908"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6e284b0"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6e284b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6e113c0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6e40c60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6e27600"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6e27600"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb6e0f298"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6e45178"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6e2dcc0"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6e2dcc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6e15c68"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6e441f8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6e2adb0"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6e2adb0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6e12cd8"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6e3ce58"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6e25010"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6e25010"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6e08d10"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6e45b38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6e2a718"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6e2a718"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6e12640"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e41040"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e26a10"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e26a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e08788"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6e377a0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb6e25630"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6e25630"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb6e04378"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6e42368"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6e27cf0"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6e27cf0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6e10568"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6e341a8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb6e25d48"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6e25d48"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb6e04a90"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb6e31c68"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6e1cd78"/></to>
    </wire>
    <wire loc="104:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6e1cd78"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6df8bc8"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6e2f650"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6e18748"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6e18748"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6df6748"/></to>
    </wire>
    <wire loc="254:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6e15390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6bce728"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb6e22b60"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb6dfb8d8"/></to>
    </wire>
    <wire loc="345:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb6dfb8d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb6abaa58"/></to>
    </wire>
    <wire loc="310:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6df6748"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6b14998"/></to>
    </wire>
    <wire loc="139:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6e113c0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6d01468"/></to>
    </wire>
    <wire loc="141:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb6e0f298"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6d03d98"/></to>
    </wire>
    <wire loc="136:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6e15c68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6d02568"/></to>
    </wire>
    <wire loc="138:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6e12cd8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6d010a8"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6e237f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6dfd568"/></to>
    </wire>
    <wire loc="343:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6dfd568"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6abc6f8"/></to>
    </wire>
    <wire loc="255:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6e08d10"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6bcdce0"/></to>
    </wire>
    <wire loc="137:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6e12640"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6d02ca8"/></to>
    </wire>
    <wire loc="309:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6df8bc8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6ae3180"/></to>
    </wire>
    <wire loc="102:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6e1c1e0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6df8030"/></to>
    </wire>
    <wire loc="347:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6df8030"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6ab5950"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6e20410"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6dfe1a0"/></to>
    </wire>
    <wire loc="344:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6dfe1a0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6ab6208"/></to>
    </wire>
    <wire loc="288:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e08788"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6b46628"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb6e28bb0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb6e11ac0"/></to>
    </wire>
    <wire loc="143:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb6e11ac0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb6d01848"/></to>
    </wire>
    <wire loc="226:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6e04378"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb6bd9010"/></to>
    </wire>
    <wire loc="140:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6e10568"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6d031c0"/></to>
    </wire>
    <wire loc="264:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6e04a90"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb6b7fb40"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6e1acc8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6dfab28"/></to>
    </wire>
    <wire loc="346:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6dfab28"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6ab5458"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb6e272a8"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb6e101f8"/></to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb6e101f8"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb6d01c28"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6bce728"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6bc0360"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb6abaa58"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb6aa3b98"/></to>
    </wire>
    <wire loc="175:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0xb6e0eac8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6cb6ce8"/></to>
    </wire>
    <wire loc="163:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0xb6e0d258"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6cefe18"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6cefe18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb65b6a50"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6d01468"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb65f1a68"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6d02568"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb65f3b20"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6d010a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb65f16a8"/></to>
    </wire>
    <wire loc="176:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xb6dff488"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb6c1df10"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xb6c1df10"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb657bd50"/></to>
    </wire>
    <wire loc="177:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0xb6e08010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6cb7c68"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6abc6f8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6aa4838"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6bcdce0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb65358c0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6d03d98"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb65f33f0"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6d02ca8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb65f12c8"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6ae3180"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb64e3610"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6ab5950"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a10b48"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6ab6208"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6a9f3d8"/></to>
    </wire>
    <wire loc="173:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0xb6e09ea8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xb6cb6318"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb6d01848"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb65f1e48"/></to>
    </wire>
    <wire loc="117:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6bd9010"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0xb6bd1390"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6b7fb40"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb6530e78"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6d031c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb65f4788"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6b14998"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb64e8e38"/></to>
    </wire>
    <wire loc="174:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0xb6e0e678"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xb6cb69d0"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6ab5458"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6a9d680"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb6d01c28"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb65f0248"/></to>
    </wire>
    <wire loc="116:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6dbd3a8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6c1e530"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6c1e530"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb657c340"/></to>
    </wire>
    <wire loc="117:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6dba830"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6d82ee0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6dbc480"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6ae3180"/></to>
    </wire>
    <wire loc="119:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0xb6db6a28"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6abdc88"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6abdc88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6aa5e70"/></to>
    </wire>
    <wire loc="124:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6d81d68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6ab3428"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6ab3428"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6a11030"/></to>
    </wire>
    <wire loc="125:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6d815d0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6de9ee0"/></to>
    </wire>
    <wire loc="131:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6cff010"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb6dcea08"/></to>
    </wire>
    <wire loc="132:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6d007a8"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0xb6cf1c60"/></to>
    </wire>
    <wire loc="133:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6d00ca0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0xb6c77528"/></to>
    </wire>
    <wire loc="134:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6d00010"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0xb6c77860"/></to>
    </wire>
    <wire loc="152:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6cfb678"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6cefe18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6cfb1a0"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0xb6c77030"/></to>
    </wire>
    <wire loc="168:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6c9b070"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6c1e530"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6c99250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xb6c94050"/></to>
    </wire>
    <wire loc="170:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6c99748"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xb6c94548"/></to>
    </wire>
    <wire loc="171:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6c9aa30"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb6c94880"/></to>
    </wire>
    <wire loc="185:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6c75050"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6c17d18"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6c17d18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb654f790"/></to>
    </wire>
    <wire loc="186:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6c75548"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6c1b170"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6c1b170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb657af10"/></to>
    </wire>
    <wire loc="187:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6c75880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6c1c948"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6c1c948"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb657a778"/></to>
    </wire>
    <wire loc="193:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6c1b4d8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6bd96a8"/></to>
    </wire>
    <wire loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6bd96a8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6bd26c8"/></to>
    </wire>
    <wire loc="197:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6c1bc70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6bdac58"/></to>
    </wire>
    <wire loc="114:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6bdac58"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6bd2390"/></to>
    </wire>
    <wire loc="220:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6bdc010"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0xb6dda840"/></to>
    </wire>
    <wire loc="221:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6c15678"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6bda760"/></to>
    </wire>
    <wire loc="113:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6bda760"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6bd9e70"/></to>
    </wire>
    <wire loc="230:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6bd2e40"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6b46628"/></to>
    </wire>
    <wire loc="232:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6bd9e70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6bced00"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6bced00"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6bc0938"/></to>
    </wire>
    <wire loc="233:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6bd2390"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6bcd250"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6bcd250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6bc0e30"/></to>
    </wire>
    <wire loc="234:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6bd26c8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6bcd568"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6bcd568"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6bbf1b0"/></to>
    </wire>
    <wire loc="250:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb6bc0360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6bbcd20"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6bbcd20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6533c88"/></to>
    </wire>
    <wire loc="251:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6bc0938"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6b7f330"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6b7f330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6530668"/></to>
    </wire>
    <wire loc="252:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6bc0e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6b7f828"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6b7f828"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6530b60"/></to>
    </wire>
    <wire loc="253:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6bbf1b0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6ae27f0"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6ae27f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb64e2ca8"/></to>
    </wire>
    <wire loc="260:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6b7eda0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6b79010"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6b79010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb65119f8"/></to>
    </wire>
    <wire loc="261:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6b7d310"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6c15230"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6c15230"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb654fc68"/></to>
    </wire>
    <wire loc="262:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6b7e628"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6ac7220"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6ac7220"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb6ac4010"/></to>
    </wire>
    <wire loc="263:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6b7e070"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6de9ee0"/></to>
    </wire>
    <wire loc="268:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6c15b70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6b794e8"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6b794e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6511ed0"/></to>
    </wire>
    <wire loc="277:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6b57928"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb6dd6568"/></to>
    </wire>
    <wire loc="278:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6b79930"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6b47cf8"/></to>
    </wire>
    <wire loc="279:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6b79e28"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6b46230"/></to>
    </wire>
    <wire loc="280:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6b57270"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6d82ee0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="286:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0xb6b2d4f0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6acaeb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="287:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6b2e458"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6d82ee0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6b2eb10"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb6ddd0f0"/></to>
    </wire>
    <wire loc="293:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6b46b50"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6b1ede0"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6b1ede0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6b1acc8"/></to>
    </wire>
    <wire loc="294:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6b2e060"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6b1c310"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6b1c310"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6b19250"/></to>
    </wire>
    <wire loc="299:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6b18250"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xb6de2a20"/></to>
    </wire>
    <wire loc="300:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6b1acc8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6ac7998"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6ac7998"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6ac4828"/></to>
    </wire>
    <wire loc="301:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6b19250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6ac7e70"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6ac7e70"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6ac4d20"/></to>
    </wire>
    <wire loc="302:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0xb6b19668"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb6abd820"/></to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6abd820"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb6aa5a08"/></to>
    </wire>
    <wire loc="307:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6ae1078"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6ab5950"/></to>
    </wire>
    <wire loc="308:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6ae18f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6add4a0"/></to>
    </wire>
    <wire loc="311:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0xb6ae0098"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6acaeb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6addc68"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6abdc88"/></to>
    </wire>
    <wire loc="326:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6ac3d20"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xb6de2a20"/></to>
    </wire>
    <wire loc="327:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6ac4828"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6ac0e40"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6ac0e40"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6aa5060"/></to>
    </wire>
    <wire loc="328:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6ac4d20"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6abd3d0"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6abd3d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6aa55b8"/></to>
    </wire>
    <wire loc="329:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0xb6ac4010"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6ac0668"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6ac0668"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6aa7858"/></to>
    </wire>
    <wire loc="341:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6ab2ec0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0xb6de3e98"/></to>
    </wire>
    <wire loc="342:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6ab1898"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6ae3180"/></to>
    </wire>
    <wire loc="349:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6aae0e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6acaeb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0xb6aae778"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6acaeb8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="351:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6aaee38"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6acaeb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="352:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6aad498"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6d82ee0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="353:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6aadb78"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6de9ee0"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6d82ee0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6603608"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6603e00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6d81d68"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb66017d8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6d815d0"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb65ee010"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6d13e48"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb65f05c0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6d00010"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb65f0d58"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6d007a8"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb65ef330"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6d00ca0"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb65ef668"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6cff010"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb6cb95a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb65b51e8"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb6cb99b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb65b55f0"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb65b5ab0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb6cb9e60"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb65b5ed8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb65b89d8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb65b44e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6579278"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6d13e48"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6579850"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6c1b4d8"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6578010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6c1bc70"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb654b310"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb6bf8010"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb6bf8010"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb6bf5010"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb654b9a8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb654ae88"/></to>
    </wire>
    <wire loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb654ae88"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb6bf5a38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb654c3e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6c15678"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb654c8d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6c15b70"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0xb654ccd0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6bdc010"/></to>
    </wire>
    <wire loc="118:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0xb6bd1a68"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6bd2e40"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb652fb18"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6b7e070"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb652f3a0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6b7e628"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb652e150"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6b7eda0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb652e628"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6b7d310"/></to>
    </wire>
    <wire loc="189:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0xb652ee98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0xb652d320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0xb652ea60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb650e330"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6b79930"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb650d728"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6b57928"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb650e828"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6b79e28"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb650ec20"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6b57270"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb650d310"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6b56478"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb6b56478"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6b52ec8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0xb650dd20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xb6b54b58"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xb6b52608"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6b59910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6b520e8"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6b278a0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6b1b698"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6b1c708"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb6b19668"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6b1e668"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb6b1a4b0"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6b1cb00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6b19a80"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6b1b330"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6b18250"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb6b1e350"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0xb6b1a178"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb6b27e58"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0xb6b1bc70"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb64e0d38"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6ae18f0"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb64e1b88"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6ae1078"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb64e04c0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6ae85d8"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6ae85d8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6f2d4d8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0xb64e1520"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0xb6ae0098"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6ac9450"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6ac51a0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6ac6290"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb6ac3170"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6ac6688"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6ac3588"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6ac6e20"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6ac3d20"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb6ac9ee0"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0xb6ac5c70"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb6ac9a08"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0xb6ac5778"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6a11030"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb692ee08"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6ab9e28"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6aa0010"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a10b48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6905778"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6a969f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6ab2ec0"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6a93288"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6aae0e0"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0xb6a93920"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0xb6aae778"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6a91010"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6aaee38"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6a91818"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6ab1898"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6a96088"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a10b48"/></to>
    </wire>
    <wire loc="102:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6a8e630"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6aad498"/></to>
    </wire>
    <wire loc="104:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb6a9da98"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0xb6a17b08"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb6a17b08"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7330750"/></to>
    </wire>
    <wire loc="105:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb6a9c5b8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0xb6a145b8"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb6a145b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb69f7c50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb6a98b40"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb6a14cc0"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb6a14cc0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb69ffe48"/></to>
    </wire>
    <wire loc="108:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb6a9b210"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0xb6a133d0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb6a133d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xb732b010"/></to>
    </wire>
    <wire loc="109:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb6a9bbf8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xb6a13db8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb6a13db8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xb73312f0"/></to>
    </wire>
    <wire loc="111:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb6a95d50"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb6a12820"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb6a12820"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb6a0e980"/></to>
    </wire>
    <wire loc="112:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6a8e010"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6aadb78"/></to>
    </wire>
    <wire loc="113:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb6a92588"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb6902c20"/></to>
    </wire>
    <wire loc="856:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0xb6a3a910"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb692ee08"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb649eac0"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb69ffe48"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb69f6520"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6905778"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb68f3988"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0xb6a09358"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xb7321a98"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0xb6a09d58"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xb7322670"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb6a0b590"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6984348"/></to>
    </wire>
    <wire loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb6984348"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6979b28"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb69f7500"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb69f6b38"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb69ffaa0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb69f6198"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6a0dd98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb69fdd80"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb69f7c50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb698e198"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb698e198"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb64b6d38"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb698d208"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb69f52d8"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xb69e41c8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xb69fce40"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xb69fce40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xb69bb1c8"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb69f4a98"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7361420"/></to>
    </wire>
    <wire loc="294:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xb69d1390"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xb69b5898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7361420"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb69b9010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7330750"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb69b99e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xb732f210"/></to>
    </wire>
    <wire loc="88:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xb69b84a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xb732fc08"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xb69b8e88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xb732e670"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb698e8d8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb64b5490"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb698ece0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb64b5898"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb64b5d58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb698d208"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb64b3250"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb64b8d00"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb64b3848"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6985610"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb697ad78"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6988328"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb697e9c0"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6981538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb6976a80"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6981538"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb69746a0"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6981538"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb6971340"/></to>
    </wire>
    <wire loc="43:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xb6498548"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6988328"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xb64967e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6981538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/wsn/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6927de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6988328"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb68f1360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb68ff7f0"/></to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb68f5ae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6901868"/></to>
    </wire>
    <wire loc="31:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6901868"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb68fca68"/></to>
    </wire>
    <wire loc="32:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb68fbc48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6988328"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb647db50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6473228"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb647a230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6e40c60"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb647a8c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6e42368"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb6874870"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb64794f0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb64794f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e41040"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb64738f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb68a8100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6472010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6e42368"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb68a8100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb687e010"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb687e780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6e45178"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb687ee28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6e42368"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb687da50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6e40c60"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0xb687c190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0xb687c5c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb68715d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6e40c60"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6871c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6e42368"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/wsn/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7376010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7376010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0xb73765e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wsn/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wsn/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialC" loc="6:SerialC.nc">
      <module/>
    </component>
    <component qname="SerialAppC.Timer0" loc="44(SerialAppC.Timer0):/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb6f23b70"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC.TaskletC" loc="42(RF230RadioC.TaskletC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <instance number="0">
        <component-ref qname="TaskletC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="50(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7378db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7378db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/wsn/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="SerialAppC.AMSenderC" loc="47(SerialAppC.AMSenderC):/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:44">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialAppC.AMSenderC.SenderC" loc="47(SerialAppC.AMSenderC.SenderC):/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SerialAppC.AMSenderC.SenderC.AMQueueEntryP):/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAppC.AMReceiverC" loc="43(SerialAppC.AMReceiverC):/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:44">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb730f5d8" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb730f7f0" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb730fa08" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb73079e0" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7307c08" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7307e30" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7304030" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb72b5088" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb72b52b0" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb72b54d8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb72b56c8" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb6fcf348" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6fcf348"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xb6fcf568" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb6fd3ee0" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb6fd3ee0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb6fc5348" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6fc5348"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb6fb6488" loc="55:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb6fb6488"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb6fb68e8" loc="56:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb6fb68e8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb6fb6b50" loc="57:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb6fb6b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb6fb5010" loc="58:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb6fb5010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb6fb5278" loc="59:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xb6fb5700" loc="60:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xb6fb5700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb6f23b70" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb6f23b70"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb6f23d30" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb6f1cec8" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb6f1cec8"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb6f190d0" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6f2eab8" loc="46:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6f2eab8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6e7d010" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6e7d010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb6e7d1f0" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6e528f0" loc="46:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6e528f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TaskletC" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb6cf0960" loc="83:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0xb6ce8680" loc="42:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb692af10" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb692af10"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb6921378" loc="52:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6921378"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xb6921538" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/wsn/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb68c2790" loc="47:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb68b93a0" loc="47:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb68b7e40" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xb68a6600" loc="45:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb6873b40" loc="43:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0xb7350010" loc="58:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7350010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb73501e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb734e320" loc="57:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb734e320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb734e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb73459c8" loc="52:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb73459c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7345ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7350908" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7350908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7350ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7345268" loc="50:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7345268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7345440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7345520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7345600"/>
        <function-ref name="actualMicro" scoped="" ref="0xb73456e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb73457c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb7343218" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xb7343218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb73433f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb734cd58" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb734cd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7343010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xb7343620" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xb7343620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb73437f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb734ba00" loc="41:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb734ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb734bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb734b630" loc="40:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb734b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb734b808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb733b588" loc="45:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb733b588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb733b760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xb7338b10" loc="44:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xb7338b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7338ce8"/>
        <function-ref name="isInput" scoped="" ref="0xb7338dc8"/>
        <function-ref name="toggle" scoped="" ref="0xb7338ea8"/>
        <function-ref name="isOutput" scoped="" ref="0xb733b010"/>
        <function-ref name="get" scoped="" ref="0xb733b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb733b1d0"/>
        <function-ref name="set" scoped="" ref="0xb733b2b0"/>
        <function-ref name="clr" scoped="" ref="0xb733b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb73405a0" loc="43:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb73405a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7340778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xb7315210" loc="98:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xb7315210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73155e8"/>
        <function-ref name="isInput" scoped="" ref="0xb73156c8"/>
        <function-ref name="toggle" scoped="" ref="0xb73157a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7315888"/>
        <function-ref name="get" scoped="" ref="0xb7315968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7315a48"/>
        <function-ref name="set" scoped="" ref="0xb7315b28"/>
        <function-ref name="clr" scoped="" ref="0xb7315c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xb7325750" loc="72:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xb7325750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7325928"/>
        <function-ref name="isInput" scoped="" ref="0xb7325a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7325ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7325bc8"/>
        <function-ref name="get" scoped="" ref="0xb7325ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7325d88"/>
        <function-ref name="set" scoped="" ref="0xb7325e68"/>
        <function-ref name="clr" scoped="" ref="0xb7324010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xb731ece8" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xb731ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb731eec0"/>
        <function-ref name="isInput" scoped="" ref="0xb731d010"/>
        <function-ref name="toggle" scoped="" ref="0xb731d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb731d1d0"/>
        <function-ref name="get" scoped="" ref="0xb731d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb731d390"/>
        <function-ref name="set" scoped="" ref="0xb731d470"/>
        <function-ref name="clr" scoped="" ref="0xb731d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xb7319ea8" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xb7319ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73180c0"/>
        <function-ref name="isInput" scoped="" ref="0xb73181a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7318280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7318360"/>
        <function-ref name="get" scoped="" ref="0xb7318440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7318520"/>
        <function-ref name="set" scoped="" ref="0xb7318600"/>
        <function-ref name="clr" scoped="" ref="0xb73186e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0xb7312750" loc="103:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0xb7312750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7312928"/>
        <function-ref name="isInput" scoped="" ref="0xb7312a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7312ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7312bc8"/>
        <function-ref name="get" scoped="" ref="0xb7312ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7312d88"/>
        <function-ref name="set" scoped="" ref="0xb7312e68"/>
        <function-ref name="clr" scoped="" ref="0xb7311010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xb73312f0" loc="50:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xb73312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73314c8"/>
        <function-ref name="isInput" scoped="" ref="0xb73315a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7331688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7331768"/>
        <function-ref name="get" scoped="" ref="0xb7331848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7331928"/>
        <function-ref name="set" scoped="" ref="0xb7331a08"/>
        <function-ref name="clr" scoped="" ref="0xb7331ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xb731aa98" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xb731aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb731ac70"/>
        <function-ref name="isInput" scoped="" ref="0xb731ad50"/>
        <function-ref name="toggle" scoped="" ref="0xb731ae30"/>
        <function-ref name="isOutput" scoped="" ref="0xb731af10"/>
        <function-ref name="get" scoped="" ref="0xb7319010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73190f0"/>
        <function-ref name="set" scoped="" ref="0xb73191d0"/>
        <function-ref name="clr" scoped="" ref="0xb73192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xb7330750" loc="53:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xb7330750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7330928"/>
        <function-ref name="isInput" scoped="" ref="0xb7330a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7330ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7330bc8"/>
        <function-ref name="get" scoped="" ref="0xb7330ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7330d88"/>
        <function-ref name="set" scoped="" ref="0xb7330e68"/>
        <function-ref name="clr" scoped="" ref="0xb732f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xb732aea8" loc="64:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xb732aea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73290c0"/>
        <function-ref name="isInput" scoped="" ref="0xb73291a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7329280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7329360"/>
        <function-ref name="get" scoped="" ref="0xb7329440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7329520"/>
        <function-ref name="set" scoped="" ref="0xb7329600"/>
        <function-ref name="clr" scoped="" ref="0xb73296e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xb7322670" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xb7322670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7322848"/>
        <function-ref name="isInput" scoped="" ref="0xb7322928"/>
        <function-ref name="toggle" scoped="" ref="0xb7322a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7322ae8"/>
        <function-ref name="get" scoped="" ref="0xb7322bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7322ca8"/>
        <function-ref name="set" scoped="" ref="0xb7322d88"/>
        <function-ref name="clr" scoped="" ref="0xb7322e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xb731cc08" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xb731cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb731cde0"/>
        <function-ref name="isInput" scoped="" ref="0xb731cec0"/>
        <function-ref name="toggle" scoped="" ref="0xb731b010"/>
        <function-ref name="isOutput" scoped="" ref="0xb731b0f0"/>
        <function-ref name="get" scoped="" ref="0xb731b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb731b2b0"/>
        <function-ref name="set" scoped="" ref="0xb731b390"/>
        <function-ref name="clr" scoped="" ref="0xb731b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xb733ff20" loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xb733ff20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7334110"/>
        <function-ref name="isInput" scoped="" ref="0xb73341f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73342d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73343b0"/>
        <function-ref name="get" scoped="" ref="0xb7334490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7334570"/>
        <function-ref name="set" scoped="" ref="0xb7334650"/>
        <function-ref name="clr" scoped="" ref="0xb7334730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xb732e670" loc="56:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xb732e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb732e848"/>
        <function-ref name="isInput" scoped="" ref="0xb732e928"/>
        <function-ref name="toggle" scoped="" ref="0xb732ea08"/>
        <function-ref name="isOutput" scoped="" ref="0xb732eae8"/>
        <function-ref name="get" scoped="" ref="0xb732ebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb732eca8"/>
        <function-ref name="set" scoped="" ref="0xb732ed88"/>
        <function-ref name="clr" scoped="" ref="0xb732ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xb7328ce8" loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xb7328ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7328ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7327010"/>
        <function-ref name="toggle" scoped="" ref="0xb73270f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73271d0"/>
        <function-ref name="get" scoped="" ref="0xb73272b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7327390"/>
        <function-ref name="set" scoped="" ref="0xb7327470"/>
        <function-ref name="clr" scoped="" ref="0xb7327550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xb73204b0" loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xb73204b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7320688"/>
        <function-ref name="isInput" scoped="" ref="0xb7320768"/>
        <function-ref name="toggle" scoped="" ref="0xb7320848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7320928"/>
        <function-ref name="get" scoped="" ref="0xb7320a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7320ae8"/>
        <function-ref name="set" scoped="" ref="0xb7320bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7320ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xb7317ce8" loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xb7317ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7317ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7316010"/>
        <function-ref name="toggle" scoped="" ref="0xb73160f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73161d0"/>
        <function-ref name="get" scoped="" ref="0xb73162b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7316390"/>
        <function-ref name="set" scoped="" ref="0xb7316470"/>
        <function-ref name="clr" scoped="" ref="0xb7316550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xb73132f0" loc="101:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xb73132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73134c8"/>
        <function-ref name="isInput" scoped="" ref="0xb73135a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7313688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7313768"/>
        <function-ref name="get" scoped="" ref="0xb7313848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7313928"/>
        <function-ref name="set" scoped="" ref="0xb7313a08"/>
        <function-ref name="clr" scoped="" ref="0xb7313ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xb731f8e0" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xb731f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb731fab8"/>
        <function-ref name="isInput" scoped="" ref="0xb731fb98"/>
        <function-ref name="toggle" scoped="" ref="0xb731fc78"/>
        <function-ref name="isOutput" scoped="" ref="0xb731fd58"/>
        <function-ref name="get" scoped="" ref="0xb731fe38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb731ff18"/>
        <function-ref name="set" scoped="" ref="0xb731e010"/>
        <function-ref name="clr" scoped="" ref="0xb731e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xb7333dc8" loc="48:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xb7333dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7332010"/>
        <function-ref name="isInput" scoped="" ref="0xb73320f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73321d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73322b0"/>
        <function-ref name="get" scoped="" ref="0xb7332390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7332470"/>
        <function-ref name="set" scoped="" ref="0xb7332550"/>
        <function-ref name="clr" scoped="" ref="0xb7332630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xb732c590" loc="59:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xb732c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb732c768"/>
        <function-ref name="isInput" scoped="" ref="0xb732c848"/>
        <function-ref name="toggle" scoped="" ref="0xb732c928"/>
        <function-ref name="isOutput" scoped="" ref="0xb732ca08"/>
        <function-ref name="get" scoped="" ref="0xb732cae8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb732cbc8"/>
        <function-ref name="set" scoped="" ref="0xb732cca8"/>
        <function-ref name="clr" scoped="" ref="0xb732cd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xb7315e08" loc="99:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xb7315e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7314010"/>
        <function-ref name="isInput" scoped="" ref="0xb73140f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73141d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73142b0"/>
        <function-ref name="get" scoped="" ref="0xb7314390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7314470"/>
        <function-ref name="set" scoped="" ref="0xb7314550"/>
        <function-ref name="clr" scoped="" ref="0xb7314630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xb732ba08" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xb732ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb732bbe0"/>
        <function-ref name="isInput" scoped="" ref="0xb732bcc0"/>
        <function-ref name="toggle" scoped="" ref="0xb732bda0"/>
        <function-ref name="isOutput" scoped="" ref="0xb732be80"/>
        <function-ref name="get" scoped="" ref="0xb732a010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb732a0f0"/>
        <function-ref name="set" scoped="" ref="0xb732a1d0"/>
        <function-ref name="clr" scoped="" ref="0xb732a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xb7324210" loc="73:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xb7324210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73243e8"/>
        <function-ref name="isInput" scoped="" ref="0xb73244c8"/>
        <function-ref name="toggle" scoped="" ref="0xb73245a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7324688"/>
        <function-ref name="get" scoped="" ref="0xb7324768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7324848"/>
        <function-ref name="set" scoped="" ref="0xb7324928"/>
        <function-ref name="clr" scoped="" ref="0xb7324a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xb731d750" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xb731d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb731d928"/>
        <function-ref name="isInput" scoped="" ref="0xb731da08"/>
        <function-ref name="toggle" scoped="" ref="0xb731dae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb731dbc8"/>
        <function-ref name="get" scoped="" ref="0xb731dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb731dd88"/>
        <function-ref name="set" scoped="" ref="0xb731de68"/>
        <function-ref name="clr" scoped="" ref="0xb731c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xb73188e0" loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xb73188e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7318ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7318b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7318c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7318d58"/>
        <function-ref name="get" scoped="" ref="0xb7318e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7318f18"/>
        <function-ref name="set" scoped="" ref="0xb7317010"/>
        <function-ref name="clr" scoped="" ref="0xb73170f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xb7331ce8" loc="51:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xb7331ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7331ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7330010"/>
        <function-ref name="toggle" scoped="" ref="0xb73300f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73301d0"/>
        <function-ref name="get" scoped="" ref="0xb73302b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7330390"/>
        <function-ref name="set" scoped="" ref="0xb7330470"/>
        <function-ref name="clr" scoped="" ref="0xb7330550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xb732f210" loc="54:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xb732f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb732f3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb732f4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb732f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb732f688"/>
        <function-ref name="get" scoped="" ref="0xb732f768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb732f848"/>
        <function-ref name="set" scoped="" ref="0xb732f928"/>
        <function-ref name="clr" scoped="" ref="0xb732fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xb73298e0" loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xb73298e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7329ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7329b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7329c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7329d58"/>
        <function-ref name="get" scoped="" ref="0xb7329e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7329f18"/>
        <function-ref name="set" scoped="" ref="0xb7328010"/>
        <function-ref name="clr" scoped="" ref="0xb73280f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xb73210a0" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xb73210a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7321278"/>
        <function-ref name="isInput" scoped="" ref="0xb7321358"/>
        <function-ref name="toggle" scoped="" ref="0xb7321438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7321518"/>
        <function-ref name="get" scoped="" ref="0xb73215f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73216d8"/>
        <function-ref name="set" scoped="" ref="0xb73217b8"/>
        <function-ref name="clr" scoped="" ref="0xb7321898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xb731b670" loc="87:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xb731b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb731b848"/>
        <function-ref name="isInput" scoped="" ref="0xb731b928"/>
        <function-ref name="toggle" scoped="" ref="0xb731ba08"/>
        <function-ref name="isOutput" scoped="" ref="0xb731bae8"/>
        <function-ref name="get" scoped="" ref="0xb731bbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb731bca8"/>
        <function-ref name="set" scoped="" ref="0xb731bd88"/>
        <function-ref name="clr" scoped="" ref="0xb731be68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xb7334930" loc="46:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xb7334930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7334b08"/>
        <function-ref name="isInput" scoped="" ref="0xb7334be8"/>
        <function-ref name="toggle" scoped="" ref="0xb7334cc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7334da8"/>
        <function-ref name="get" scoped="" ref="0xb7334e88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7333010"/>
        <function-ref name="set" scoped="" ref="0xb73330f0"/>
        <function-ref name="clr" scoped="" ref="0xb73331d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xb732d0a0" loc="57:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xb732d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb732d2f8"/>
        <function-ref name="isInput" scoped="" ref="0xb732d3d8"/>
        <function-ref name="toggle" scoped="" ref="0xb732d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0xb732d598"/>
        <function-ref name="get" scoped="" ref="0xb732d678"/>
        <function-ref name="makeOutput" scoped="" ref="0xb732d758"/>
        <function-ref name="set" scoped="" ref="0xb732d838"/>
        <function-ref name="clr" scoped="" ref="0xb732d918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xb7327750" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xb7327750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7327928"/>
        <function-ref name="isInput" scoped="" ref="0xb7327a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7327ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7327bc8"/>
        <function-ref name="get" scoped="" ref="0xb7327ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7327d88"/>
        <function-ref name="set" scoped="" ref="0xb7327e68"/>
        <function-ref name="clr" scoped="" ref="0xb7326010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xb7316750" loc="96:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xb7316750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7316928"/>
        <function-ref name="isInput" scoped="" ref="0xb7316a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7316ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7316bc8"/>
        <function-ref name="get" scoped="" ref="0xb7316ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7316d88"/>
        <function-ref name="set" scoped="" ref="0xb7316e68"/>
        <function-ref name="clr" scoped="" ref="0xb7315010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xb7326c08" loc="71:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xb7326c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7326ee0"/>
        <function-ref name="isInput" scoped="" ref="0xb7325010"/>
        <function-ref name="toggle" scoped="" ref="0xb73250f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73251d0"/>
        <function-ref name="get" scoped="" ref="0xb73252b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7325390"/>
        <function-ref name="set" scoped="" ref="0xb7325470"/>
        <function-ref name="clr" scoped="" ref="0xb7325550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xb731e2f0" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xb731e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb731e4c8"/>
        <function-ref name="isInput" scoped="" ref="0xb731e5a8"/>
        <function-ref name="toggle" scoped="" ref="0xb731e688"/>
        <function-ref name="isOutput" scoped="" ref="0xb731e768"/>
        <function-ref name="get" scoped="" ref="0xb731e848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb731e928"/>
        <function-ref name="set" scoped="" ref="0xb731ea08"/>
        <function-ref name="clr" scoped="" ref="0xb731eae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xb73194b0" loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xb73194b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7319688"/>
        <function-ref name="isInput" scoped="" ref="0xb7319768"/>
        <function-ref name="toggle" scoped="" ref="0xb7319848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7319928"/>
        <function-ref name="get" scoped="" ref="0xb7319a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7319ae8"/>
        <function-ref name="set" scoped="" ref="0xb7319bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7319ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xb7313ce8" loc="102:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xb7313ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7313ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7312010"/>
        <function-ref name="toggle" scoped="" ref="0xb73120f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73121d0"/>
        <function-ref name="get" scoped="" ref="0xb73122b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7312390"/>
        <function-ref name="set" scoped="" ref="0xb7312470"/>
        <function-ref name="clr" scoped="" ref="0xb7312550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xb7332830" loc="49:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xb7332830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7332a08"/>
        <function-ref name="isInput" scoped="" ref="0xb7332ae8"/>
        <function-ref name="toggle" scoped="" ref="0xb7332bc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7332ca8"/>
        <function-ref name="get" scoped="" ref="0xb7332d88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7332e68"/>
        <function-ref name="set" scoped="" ref="0xb7331010"/>
        <function-ref name="clr" scoped="" ref="0xb73310f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xb732b010" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xb732b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb732b1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb732b2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb732b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb732b488"/>
        <function-ref name="get" scoped="" ref="0xb732b568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb732b648"/>
        <function-ref name="set" scoped="" ref="0xb732b728"/>
        <function-ref name="clr" scoped="" ref="0xb732b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xb731a0a0" loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xb731a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb731a278"/>
        <function-ref name="isInput" scoped="" ref="0xb731a358"/>
        <function-ref name="toggle" scoped="" ref="0xb731a438"/>
        <function-ref name="isOutput" scoped="" ref="0xb731a518"/>
        <function-ref name="get" scoped="" ref="0xb731a5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb731a6d8"/>
        <function-ref name="set" scoped="" ref="0xb731a7b8"/>
        <function-ref name="clr" scoped="" ref="0xb731a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xb732a4b0" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xb732a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb732a688"/>
        <function-ref name="isInput" scoped="" ref="0xb732a768"/>
        <function-ref name="toggle" scoped="" ref="0xb732a848"/>
        <function-ref name="isOutput" scoped="" ref="0xb732a928"/>
        <function-ref name="get" scoped="" ref="0xb732aa08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb732aae8"/>
        <function-ref name="set" scoped="" ref="0xb732abc8"/>
        <function-ref name="clr" scoped="" ref="0xb732aca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xb7324c08" loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xb7324c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7324de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7324ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7322010"/>
        <function-ref name="isOutput" scoped="" ref="0xb73220f0"/>
        <function-ref name="get" scoped="" ref="0xb73221d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73222b0"/>
        <function-ref name="set" scoped="" ref="0xb7322390"/>
        <function-ref name="clr" scoped="" ref="0xb7322470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xb731c210" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xb731c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb731c3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb731c4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb731c5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb731c688"/>
        <function-ref name="get" scoped="" ref="0xb731c768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb731c848"/>
        <function-ref name="set" scoped="" ref="0xb731c928"/>
        <function-ref name="clr" scoped="" ref="0xb731ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xb73172f0" loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xb73172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73174c8"/>
        <function-ref name="isInput" scoped="" ref="0xb73175a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7317688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7317768"/>
        <function-ref name="get" scoped="" ref="0xb7317848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7317928"/>
        <function-ref name="set" scoped="" ref="0xb7317a08"/>
        <function-ref name="clr" scoped="" ref="0xb7317ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xb733f528" loc="44:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xb733f528"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb733f700"/>
        <function-ref name="isInput" scoped="" ref="0xb733f7e0"/>
        <function-ref name="toggle" scoped="" ref="0xb733f8c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb733f9a0"/>
        <function-ref name="get" scoped="" ref="0xb733fa80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb733fb60"/>
        <function-ref name="set" scoped="" ref="0xb733fc40"/>
        <function-ref name="clr" scoped="" ref="0xb733fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xb732fc08" loc="55:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xb732fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb732fde0"/>
        <function-ref name="isInput" scoped="" ref="0xb732fec0"/>
        <function-ref name="toggle" scoped="" ref="0xb732e010"/>
        <function-ref name="isOutput" scoped="" ref="0xb732e0f0"/>
        <function-ref name="get" scoped="" ref="0xb732e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb732e2b0"/>
        <function-ref name="set" scoped="" ref="0xb732e390"/>
        <function-ref name="clr" scoped="" ref="0xb732e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xb73282f0" loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xb73282f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73284c8"/>
        <function-ref name="isInput" scoped="" ref="0xb73285a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7328688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7328768"/>
        <function-ref name="get" scoped="" ref="0xb7328848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7328928"/>
        <function-ref name="set" scoped="" ref="0xb7328a08"/>
        <function-ref name="clr" scoped="" ref="0xb7328ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xb7321a98" loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xb7321a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7321c70"/>
        <function-ref name="isInput" scoped="" ref="0xb7321d50"/>
        <function-ref name="toggle" scoped="" ref="0xb7321e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7321f10"/>
        <function-ref name="get" scoped="" ref="0xb7320010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73200f0"/>
        <function-ref name="set" scoped="" ref="0xb73201d0"/>
        <function-ref name="clr" scoped="" ref="0xb73202b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xb7314830" loc="100:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xb7314830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7314a08"/>
        <function-ref name="isInput" scoped="" ref="0xb7314ae8"/>
        <function-ref name="toggle" scoped="" ref="0xb7314bc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7314ca8"/>
        <function-ref name="get" scoped="" ref="0xb7314d88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7314e68"/>
        <function-ref name="set" scoped="" ref="0xb7313010"/>
        <function-ref name="clr" scoped="" ref="0xb73130f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xb7320ea8" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xb7320ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb731f0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb731f1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb731f280"/>
        <function-ref name="isOutput" scoped="" ref="0xb731f360"/>
        <function-ref name="get" scoped="" ref="0xb731f440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb731f520"/>
        <function-ref name="set" scoped="" ref="0xb731f600"/>
        <function-ref name="clr" scoped="" ref="0xb731f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xb7326210" loc="69:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xb7326210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73263e8"/>
        <function-ref name="isInput" scoped="" ref="0xb73264c8"/>
        <function-ref name="toggle" scoped="" ref="0xb73265a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7326688"/>
        <function-ref name="get" scoped="" ref="0xb7326768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7326848"/>
        <function-ref name="set" scoped="" ref="0xb7326928"/>
        <function-ref name="clr" scoped="" ref="0xb7326a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xb73333d0" loc="47:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xb73333d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73335a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7333688"/>
        <function-ref name="toggle" scoped="" ref="0xb7333768"/>
        <function-ref name="isOutput" scoped="" ref="0xb7333848"/>
        <function-ref name="get" scoped="" ref="0xb7333928"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7333a08"/>
        <function-ref name="set" scoped="" ref="0xb7333ae8"/>
        <function-ref name="clr" scoped="" ref="0xb7333bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xb732db18" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xb732db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb732dcf0"/>
        <function-ref name="isInput" scoped="" ref="0xb732ddd0"/>
        <function-ref name="toggle" scoped="" ref="0xb732deb0"/>
        <function-ref name="isOutput" scoped="" ref="0xb732c010"/>
        <function-ref name="get" scoped="" ref="0xb732c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb732c1d0"/>
        <function-ref name="set" scoped="" ref="0xb732c2b0"/>
        <function-ref name="clr" scoped="" ref="0xb732c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb72e9d68" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb72e9d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e8010"/>
        <function-ref name="isInput" scoped="" ref="0xb72e80f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72e81d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e82b0"/>
        <function-ref name="get" scoped="" ref="0xb72e8390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e8470"/>
        <function-ref name="set" scoped="" ref="0xb72e8550"/>
        <function-ref name="clr" scoped="" ref="0xb72e8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb72e7ac8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb72e7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e7ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb72e7d80"/>
        <function-ref name="toggle" scoped="" ref="0xb72e7e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e6010"/>
        <function-ref name="get" scoped="" ref="0xb72e60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e61d0"/>
        <function-ref name="set" scoped="" ref="0xb72e62b0"/>
        <function-ref name="clr" scoped="" ref="0xb72e6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb72eaa28" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb72eaa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72eac00"/>
        <function-ref name="isInput" scoped="" ref="0xb72eace0"/>
        <function-ref name="toggle" scoped="" ref="0xb72eadc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72eaea0"/>
        <function-ref name="get" scoped="" ref="0xb72e9010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e90f0"/>
        <function-ref name="set" scoped="" ref="0xb72e91d0"/>
        <function-ref name="clr" scoped="" ref="0xb72e92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb72e8790" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb72e8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e8968"/>
        <function-ref name="isInput" scoped="" ref="0xb72e8a48"/>
        <function-ref name="toggle" scoped="" ref="0xb72e8b28"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e8c08"/>
        <function-ref name="get" scoped="" ref="0xb72e8ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e8dc8"/>
        <function-ref name="set" scoped="" ref="0xb72e8ea8"/>
        <function-ref name="clr" scoped="" ref="0xb72e7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb72e64f0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb72e64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e66c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72e67a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72e6888"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e6968"/>
        <function-ref name="get" scoped="" ref="0xb72e6a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e6b28"/>
        <function-ref name="set" scoped="" ref="0xb72e6c08"/>
        <function-ref name="clr" scoped="" ref="0xb72e6ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb72e9410" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb72e9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e95e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72e96c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72e97a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e9888"/>
        <function-ref name="get" scoped="" ref="0xb72e9968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e9a48"/>
        <function-ref name="set" scoped="" ref="0xb72e9b28"/>
        <function-ref name="clr" scoped="" ref="0xb72e9c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb72e7170" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb72e7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e7348"/>
        <function-ref name="isInput" scoped="" ref="0xb72e7428"/>
        <function-ref name="toggle" scoped="" ref="0xb72e7508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e75e8"/>
        <function-ref name="get" scoped="" ref="0xb72e76c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e77a8"/>
        <function-ref name="set" scoped="" ref="0xb72e7888"/>
        <function-ref name="clr" scoped="" ref="0xb72e7968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb72e6e48" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb72e6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e4050"/>
        <function-ref name="isInput" scoped="" ref="0xb72e4130"/>
        <function-ref name="toggle" scoped="" ref="0xb72e4210"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e42f0"/>
        <function-ref name="get" scoped="" ref="0xb72e43d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e44b0"/>
        <function-ref name="set" scoped="" ref="0xb72e4590"/>
        <function-ref name="clr" scoped="" ref="0xb72e4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb684b050" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb684b050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb684b228"/>
        <function-ref name="isInput" scoped="" ref="0xb684b308"/>
        <function-ref name="toggle" scoped="" ref="0xb684b3e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb684b4c8"/>
        <function-ref name="get" scoped="" ref="0xb684b5a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb684b688"/>
        <function-ref name="set" scoped="" ref="0xb684b768"/>
        <function-ref name="clr" scoped="" ref="0xb684b848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb684aa08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb684aa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb684abe0"/>
        <function-ref name="isInput" scoped="" ref="0xb684acc0"/>
        <function-ref name="toggle" scoped="" ref="0xb684ada0"/>
        <function-ref name="isOutput" scoped="" ref="0xb684ae80"/>
        <function-ref name="get" scoped="" ref="0xb6849010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb68490f0"/>
        <function-ref name="set" scoped="" ref="0xb68491d0"/>
        <function-ref name="clr" scoped="" ref="0xb68492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6848538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6848538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6848710"/>
        <function-ref name="isInput" scoped="" ref="0xb68487f0"/>
        <function-ref name="toggle" scoped="" ref="0xb68488d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb68489b0"/>
        <function-ref name="get" scoped="" ref="0xb6848a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6848b70"/>
        <function-ref name="set" scoped="" ref="0xb6848c50"/>
        <function-ref name="clr" scoped="" ref="0xb6848d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6846010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6846010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb68461e8"/>
        <function-ref name="isInput" scoped="" ref="0xb68462c8"/>
        <function-ref name="toggle" scoped="" ref="0xb68463a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6846488"/>
        <function-ref name="get" scoped="" ref="0xb6846568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6846648"/>
        <function-ref name="set" scoped="" ref="0xb6846728"/>
        <function-ref name="clr" scoped="" ref="0xb6846808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb68459e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb68459e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6845bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb6845ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb6845d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6845e60"/>
        <function-ref name="get" scoped="" ref="0xb6844010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb68440f0"/>
        <function-ref name="set" scoped="" ref="0xb68441d0"/>
        <function-ref name="clr" scoped="" ref="0xb68442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6843538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6843538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6843710"/>
        <function-ref name="isInput" scoped="" ref="0xb68437f0"/>
        <function-ref name="toggle" scoped="" ref="0xb68438d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb68439b0"/>
        <function-ref name="get" scoped="" ref="0xb6843a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6843b70"/>
        <function-ref name="set" scoped="" ref="0xb6843c50"/>
        <function-ref name="clr" scoped="" ref="0xb6843d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6841010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6841010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb68411e8"/>
        <function-ref name="isInput" scoped="" ref="0xb68412c8"/>
        <function-ref name="toggle" scoped="" ref="0xb68413a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6841488"/>
        <function-ref name="get" scoped="" ref="0xb6841568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6841648"/>
        <function-ref name="set" scoped="" ref="0xb6841728"/>
        <function-ref name="clr" scoped="" ref="0xb6841808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb68409e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb68409e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6840bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb6840ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb6840d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6840e60"/>
        <function-ref name="get" scoped="" ref="0xb683f010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb683f0f0"/>
        <function-ref name="set" scoped="" ref="0xb683f1d0"/>
        <function-ref name="clr" scoped="" ref="0xb683f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb72e06b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb72e06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e0888"/>
        <function-ref name="isInput" scoped="" ref="0xb72e0968"/>
        <function-ref name="toggle" scoped="" ref="0xb72e0a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e0b28"/>
        <function-ref name="get" scoped="" ref="0xb72e0c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e0ce8"/>
        <function-ref name="set" scoped="" ref="0xb72e0dc8"/>
        <function-ref name="clr" scoped="" ref="0xb72e0ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb72de330" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb72de330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72de508"/>
        <function-ref name="isInput" scoped="" ref="0xb72de5e8"/>
        <function-ref name="toggle" scoped="" ref="0xb72de6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72de7a8"/>
        <function-ref name="get" scoped="" ref="0xb72de888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72de968"/>
        <function-ref name="set" scoped="" ref="0xb72dea48"/>
        <function-ref name="clr" scoped="" ref="0xb72deb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb72e13d8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb72e13d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e15b0"/>
        <function-ref name="isInput" scoped="" ref="0xb72e1690"/>
        <function-ref name="toggle" scoped="" ref="0xb72e1770"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e1850"/>
        <function-ref name="get" scoped="" ref="0xb72e1930"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e1a10"/>
        <function-ref name="set" scoped="" ref="0xb72e1af0"/>
        <function-ref name="clr" scoped="" ref="0xb72e1bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb72df030" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb72df030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72df208"/>
        <function-ref name="isInput" scoped="" ref="0xb72df2e8"/>
        <function-ref name="toggle" scoped="" ref="0xb72df3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72df4a8"/>
        <function-ref name="get" scoped="" ref="0xb72df588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72df668"/>
        <function-ref name="set" scoped="" ref="0xb72df748"/>
        <function-ref name="clr" scoped="" ref="0xb72df828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb72dec88" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb72dec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72dee60"/>
        <function-ref name="isInput" scoped="" ref="0xb72dd010"/>
        <function-ref name="toggle" scoped="" ref="0xb72dd0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72dd1d0"/>
        <function-ref name="get" scoped="" ref="0xb72dd2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72dd390"/>
        <function-ref name="set" scoped="" ref="0xb72dd470"/>
        <function-ref name="clr" scoped="" ref="0xb72dd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb72e1d30" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb72e1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72e1f08"/>
        <function-ref name="isInput" scoped="" ref="0xb72e0010"/>
        <function-ref name="toggle" scoped="" ref="0xb72e00f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72e01d0"/>
        <function-ref name="get" scoped="" ref="0xb72e02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72e0390"/>
        <function-ref name="set" scoped="" ref="0xb72e0470"/>
        <function-ref name="clr" scoped="" ref="0xb72e0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb72df988" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb72df988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72dfb60"/>
        <function-ref name="isInput" scoped="" ref="0xb72dfc40"/>
        <function-ref name="toggle" scoped="" ref="0xb72dfd20"/>
        <function-ref name="isOutput" scoped="" ref="0xb72dfe00"/>
        <function-ref name="get" scoped="" ref="0xb72dfee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72de010"/>
        <function-ref name="set" scoped="" ref="0xb72de0f0"/>
        <function-ref name="clr" scoped="" ref="0xb72de1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb72dd6b0" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb72dd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72dd888"/>
        <function-ref name="isInput" scoped="" ref="0xb72dd968"/>
        <function-ref name="toggle" scoped="" ref="0xb72dda48"/>
        <function-ref name="isOutput" scoped="" ref="0xb72ddb28"/>
        <function-ref name="get" scoped="" ref="0xb72ddc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ddce8"/>
        <function-ref name="set" scoped="" ref="0xb72dddc8"/>
        <function-ref name="clr" scoped="" ref="0xb72ddea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6817de8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6817de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6813010"/>
        <function-ref name="isInput" scoped="" ref="0xb68130f0"/>
        <function-ref name="toggle" scoped="" ref="0xb68131d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb68132b0"/>
        <function-ref name="get" scoped="" ref="0xb6813390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6813470"/>
        <function-ref name="set" scoped="" ref="0xb6813550"/>
        <function-ref name="clr" scoped="" ref="0xb6813630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb68127f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb68127f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb68129d0"/>
        <function-ref name="isInput" scoped="" ref="0xb6812ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb6812b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6812c70"/>
        <function-ref name="get" scoped="" ref="0xb6812d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6812e30"/>
        <function-ref name="set" scoped="" ref="0xb6812f10"/>
        <function-ref name="clr" scoped="" ref="0xb6810010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb680f228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb680f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb680f400"/>
        <function-ref name="isInput" scoped="" ref="0xb680f4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb680f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb680f6a0"/>
        <function-ref name="get" scoped="" ref="0xb680f780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb680f860"/>
        <function-ref name="set" scoped="" ref="0xb680f940"/>
        <function-ref name="clr" scoped="" ref="0xb680fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb680ec08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb680ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb680ede0"/>
        <function-ref name="isInput" scoped="" ref="0xb680eec0"/>
        <function-ref name="toggle" scoped="" ref="0xb680d010"/>
        <function-ref name="isOutput" scoped="" ref="0xb680d0f0"/>
        <function-ref name="get" scoped="" ref="0xb680d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb680d2b0"/>
        <function-ref name="set" scoped="" ref="0xb680d390"/>
        <function-ref name="clr" scoped="" ref="0xb680d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb680c6c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb680c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb680c898"/>
        <function-ref name="isInput" scoped="" ref="0xb680c978"/>
        <function-ref name="toggle" scoped="" ref="0xb680ca58"/>
        <function-ref name="isOutput" scoped="" ref="0xb680cb38"/>
        <function-ref name="get" scoped="" ref="0xb680cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb680ccf8"/>
        <function-ref name="set" scoped="" ref="0xb680cdd8"/>
        <function-ref name="clr" scoped="" ref="0xb680ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb680a0b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb680a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb680a288"/>
        <function-ref name="isInput" scoped="" ref="0xb680a368"/>
        <function-ref name="toggle" scoped="" ref="0xb680a448"/>
        <function-ref name="isOutput" scoped="" ref="0xb680a528"/>
        <function-ref name="get" scoped="" ref="0xb680a608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb680a6e8"/>
        <function-ref name="set" scoped="" ref="0xb680a7c8"/>
        <function-ref name="clr" scoped="" ref="0xb680a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6809a88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6809a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6809c60"/>
        <function-ref name="isInput" scoped="" ref="0xb6809d40"/>
        <function-ref name="toggle" scoped="" ref="0xb6809e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb6809f00"/>
        <function-ref name="get" scoped="" ref="0xb6808010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb68080f0"/>
        <function-ref name="set" scoped="" ref="0xb68081d0"/>
        <function-ref name="clr" scoped="" ref="0xb68082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6807538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6807538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6807710"/>
        <function-ref name="isInput" scoped="" ref="0xb68077f0"/>
        <function-ref name="toggle" scoped="" ref="0xb68078d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb68079b0"/>
        <function-ref name="get" scoped="" ref="0xb6807a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6807b70"/>
        <function-ref name="set" scoped="" ref="0xb6807c50"/>
        <function-ref name="clr" scoped="" ref="0xb6807d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb72d7170" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb72d7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d7348"/>
        <function-ref name="isInput" scoped="" ref="0xb72d7428"/>
        <function-ref name="toggle" scoped="" ref="0xb72d7508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d75e8"/>
        <function-ref name="get" scoped="" ref="0xb72d76c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d77a8"/>
        <function-ref name="set" scoped="" ref="0xb72d7888"/>
        <function-ref name="clr" scoped="" ref="0xb72d7968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb72d6e48" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb72d6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d5050"/>
        <function-ref name="isInput" scoped="" ref="0xb72d5130"/>
        <function-ref name="toggle" scoped="" ref="0xb72d5210"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d52f0"/>
        <function-ref name="get" scoped="" ref="0xb72d53d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d54b0"/>
        <function-ref name="set" scoped="" ref="0xb72d5590"/>
        <function-ref name="clr" scoped="" ref="0xb72d5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb72d9dc8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb72d9dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d8010"/>
        <function-ref name="isInput" scoped="" ref="0xb72d80f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72d81d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d82b0"/>
        <function-ref name="get" scoped="" ref="0xb72d8390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d8470"/>
        <function-ref name="set" scoped="" ref="0xb72d8550"/>
        <function-ref name="clr" scoped="" ref="0xb72d8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb72d7ac8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb72d7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d7ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb72d7d80"/>
        <function-ref name="toggle" scoped="" ref="0xb72d7e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d6010"/>
        <function-ref name="get" scoped="" ref="0xb72d60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d61d0"/>
        <function-ref name="set" scoped="" ref="0xb72d62b0"/>
        <function-ref name="clr" scoped="" ref="0xb72d6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb72d57d0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb72d57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d59a8"/>
        <function-ref name="isInput" scoped="" ref="0xb72d5a88"/>
        <function-ref name="toggle" scoped="" ref="0xb72d5b68"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d5c48"/>
        <function-ref name="get" scoped="" ref="0xb72d5d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d5e08"/>
        <function-ref name="set" scoped="" ref="0xb72d5ee8"/>
        <function-ref name="clr" scoped="" ref="0xb72d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb72d8790" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb72d8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d8968"/>
        <function-ref name="isInput" scoped="" ref="0xb72d8a48"/>
        <function-ref name="toggle" scoped="" ref="0xb72d8b28"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d8c08"/>
        <function-ref name="get" scoped="" ref="0xb72d8ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d8dc8"/>
        <function-ref name="set" scoped="" ref="0xb72d8ea8"/>
        <function-ref name="clr" scoped="" ref="0xb72d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb72d64f0" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb72d64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d66c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72d67a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72d6888"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d6968"/>
        <function-ref name="get" scoped="" ref="0xb72d6a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d6b28"/>
        <function-ref name="set" scoped="" ref="0xb72d6c08"/>
        <function-ref name="clr" scoped="" ref="0xb72d6ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb72d4170" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb72d4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d4348"/>
        <function-ref name="isInput" scoped="" ref="0xb72d4428"/>
        <function-ref name="toggle" scoped="" ref="0xb72d4508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d45e8"/>
        <function-ref name="get" scoped="" ref="0xb72d46c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d47a8"/>
        <function-ref name="set" scoped="" ref="0xb72d4888"/>
        <function-ref name="clr" scoped="" ref="0xb72d4968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67db938" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67db938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67dbb10"/>
        <function-ref name="isInput" scoped="" ref="0xb67dbbf0"/>
        <function-ref name="toggle" scoped="" ref="0xb67dbcd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67dbdb0"/>
        <function-ref name="get" scoped="" ref="0xb67dbe90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67da010"/>
        <function-ref name="set" scoped="" ref="0xb67da0f0"/>
        <function-ref name="clr" scoped="" ref="0xb67da1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67d93b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67d93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67d9588"/>
        <function-ref name="isInput" scoped="" ref="0xb67d9668"/>
        <function-ref name="toggle" scoped="" ref="0xb67d9748"/>
        <function-ref name="isOutput" scoped="" ref="0xb67d9828"/>
        <function-ref name="get" scoped="" ref="0xb67d9908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d99e8"/>
        <function-ref name="set" scoped="" ref="0xb67d9ac8"/>
        <function-ref name="clr" scoped="" ref="0xb67d9ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67d8d70" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67d8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67d7010"/>
        <function-ref name="isInput" scoped="" ref="0xb67d70f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67d71d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67d72b0"/>
        <function-ref name="get" scoped="" ref="0xb67d7390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d7470"/>
        <function-ref name="set" scoped="" ref="0xb67d7550"/>
        <function-ref name="clr" scoped="" ref="0xb67d7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67d67f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67d67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67d69d0"/>
        <function-ref name="isInput" scoped="" ref="0xb67d6ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb67d6b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb67d6c70"/>
        <function-ref name="get" scoped="" ref="0xb67d6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d6e30"/>
        <function-ref name="set" scoped="" ref="0xb67d6f10"/>
        <function-ref name="clr" scoped="" ref="0xb67d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67d4228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67d4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67d4400"/>
        <function-ref name="isInput" scoped="" ref="0xb67d44e0"/>
        <function-ref name="toggle" scoped="" ref="0xb67d45c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67d46a0"/>
        <function-ref name="get" scoped="" ref="0xb67d4780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d4860"/>
        <function-ref name="set" scoped="" ref="0xb67d4940"/>
        <function-ref name="clr" scoped="" ref="0xb67d4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67d3c08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67d3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67d3de0"/>
        <function-ref name="isInput" scoped="" ref="0xb67d3ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb67d2010"/>
        <function-ref name="isOutput" scoped="" ref="0xb67d20f0"/>
        <function-ref name="get" scoped="" ref="0xb67d21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d22b0"/>
        <function-ref name="set" scoped="" ref="0xb67d2390"/>
        <function-ref name="clr" scoped="" ref="0xb67d2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67d16c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67d16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67d1898"/>
        <function-ref name="isInput" scoped="" ref="0xb67d1978"/>
        <function-ref name="toggle" scoped="" ref="0xb67d1a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb67d1b38"/>
        <function-ref name="get" scoped="" ref="0xb67d1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67d1cf8"/>
        <function-ref name="set" scoped="" ref="0xb67d1dd8"/>
        <function-ref name="clr" scoped="" ref="0xb67d1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67cf0b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67cf0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67cf288"/>
        <function-ref name="isInput" scoped="" ref="0xb67cf368"/>
        <function-ref name="toggle" scoped="" ref="0xb67cf448"/>
        <function-ref name="isOutput" scoped="" ref="0xb67cf528"/>
        <function-ref name="get" scoped="" ref="0xb67cf608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67cf6e8"/>
        <function-ref name="set" scoped="" ref="0xb67cf7c8"/>
        <function-ref name="clr" scoped="" ref="0xb67cf8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb72d09e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb72d09e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d0bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb72d0ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb72d0d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d0e60"/>
        <function-ref name="get" scoped="" ref="0xb72ce010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72ce0f0"/>
        <function-ref name="set" scoped="" ref="0xb72ce1d0"/>
        <function-ref name="clr" scoped="" ref="0xb72ce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb72cd790" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb72cd790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72cd968"/>
        <function-ref name="isInput" scoped="" ref="0xb72cda48"/>
        <function-ref name="toggle" scoped="" ref="0xb72cdb28"/>
        <function-ref name="isOutput" scoped="" ref="0xb72cdc08"/>
        <function-ref name="get" scoped="" ref="0xb72cdce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72cddc8"/>
        <function-ref name="set" scoped="" ref="0xb72cdea8"/>
        <function-ref name="clr" scoped="" ref="0xb72cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb72d16f8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb72d16f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d18d0"/>
        <function-ref name="isInput" scoped="" ref="0xb72d19b0"/>
        <function-ref name="toggle" scoped="" ref="0xb72d1a90"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d1b70"/>
        <function-ref name="get" scoped="" ref="0xb72d1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d1d30"/>
        <function-ref name="set" scoped="" ref="0xb72d1e10"/>
        <function-ref name="clr" scoped="" ref="0xb72d1ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb72ce410" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb72ce410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72ce5e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72ce6c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72ce7a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72ce888"/>
        <function-ref name="get" scoped="" ref="0xb72ce968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72cea48"/>
        <function-ref name="set" scoped="" ref="0xb72ceb28"/>
        <function-ref name="clr" scoped="" ref="0xb72cec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb72cc170" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb72cc170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72cc348"/>
        <function-ref name="isInput" scoped="" ref="0xb72cc428"/>
        <function-ref name="toggle" scoped="" ref="0xb72cc508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72cc5e8"/>
        <function-ref name="get" scoped="" ref="0xb72cc6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72cc7a8"/>
        <function-ref name="set" scoped="" ref="0xb72cc888"/>
        <function-ref name="clr" scoped="" ref="0xb72cc968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb72d0090" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb72d0090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72d0268"/>
        <function-ref name="isInput" scoped="" ref="0xb72d0348"/>
        <function-ref name="toggle" scoped="" ref="0xb72d0428"/>
        <function-ref name="isOutput" scoped="" ref="0xb72d0508"/>
        <function-ref name="get" scoped="" ref="0xb72d05e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72d06c8"/>
        <function-ref name="set" scoped="" ref="0xb72d07a8"/>
        <function-ref name="clr" scoped="" ref="0xb72d0888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb72ced68" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb72ced68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72cd010"/>
        <function-ref name="isInput" scoped="" ref="0xb72cd0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72cd1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72cd2b0"/>
        <function-ref name="get" scoped="" ref="0xb72cd390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72cd470"/>
        <function-ref name="set" scoped="" ref="0xb72cd550"/>
        <function-ref name="clr" scoped="" ref="0xb72cd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb72ccac8" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb72ccac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72ccca0"/>
        <function-ref name="isInput" scoped="" ref="0xb72ccd80"/>
        <function-ref name="toggle" scoped="" ref="0xb72cce60"/>
        <function-ref name="isOutput" scoped="" ref="0xb72cb010"/>
        <function-ref name="get" scoped="" ref="0xb72cb0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72cb1d0"/>
        <function-ref name="set" scoped="" ref="0xb72cb2b0"/>
        <function-ref name="clr" scoped="" ref="0xb72cb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67a2538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67a2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67a2710"/>
        <function-ref name="isInput" scoped="" ref="0xb67a27f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67a28d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67a29b0"/>
        <function-ref name="get" scoped="" ref="0xb67a2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67a2b70"/>
        <function-ref name="set" scoped="" ref="0xb67a2c50"/>
        <function-ref name="clr" scoped="" ref="0xb67a2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67a0010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67a0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67a01e8"/>
        <function-ref name="isInput" scoped="" ref="0xb67a02c8"/>
        <function-ref name="toggle" scoped="" ref="0xb67a03a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb67a0488"/>
        <function-ref name="get" scoped="" ref="0xb67a0568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67a0648"/>
        <function-ref name="set" scoped="" ref="0xb67a0728"/>
        <function-ref name="clr" scoped="" ref="0xb67a0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb679f9e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb679f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb679fbc0"/>
        <function-ref name="isInput" scoped="" ref="0xb679fca0"/>
        <function-ref name="toggle" scoped="" ref="0xb679fd80"/>
        <function-ref name="isOutput" scoped="" ref="0xb679fe60"/>
        <function-ref name="get" scoped="" ref="0xb679e010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb679e0f0"/>
        <function-ref name="set" scoped="" ref="0xb679e1d0"/>
        <function-ref name="clr" scoped="" ref="0xb679e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb679d538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb679d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb679d710"/>
        <function-ref name="isInput" scoped="" ref="0xb679d7f0"/>
        <function-ref name="toggle" scoped="" ref="0xb679d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb679d9b0"/>
        <function-ref name="get" scoped="" ref="0xb679da90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb679db70"/>
        <function-ref name="set" scoped="" ref="0xb679dc50"/>
        <function-ref name="clr" scoped="" ref="0xb679dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb679b010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb679b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb679b1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb679b2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb679b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb679b488"/>
        <function-ref name="get" scoped="" ref="0xb679b568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb679b648"/>
        <function-ref name="set" scoped="" ref="0xb679b728"/>
        <function-ref name="clr" scoped="" ref="0xb679b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb679a9e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb679a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb679abc0"/>
        <function-ref name="isInput" scoped="" ref="0xb679aca0"/>
        <function-ref name="toggle" scoped="" ref="0xb679ad80"/>
        <function-ref name="isOutput" scoped="" ref="0xb679ae60"/>
        <function-ref name="get" scoped="" ref="0xb6799010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67990f0"/>
        <function-ref name="set" scoped="" ref="0xb67991d0"/>
        <function-ref name="clr" scoped="" ref="0xb67992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6798538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6798538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6798710"/>
        <function-ref name="isInput" scoped="" ref="0xb67987f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67988d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67989b0"/>
        <function-ref name="get" scoped="" ref="0xb6798a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6798b70"/>
        <function-ref name="set" scoped="" ref="0xb6798c50"/>
        <function-ref name="clr" scoped="" ref="0xb6798d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6796010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6796010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67961e8"/>
        <function-ref name="isInput" scoped="" ref="0xb67962c8"/>
        <function-ref name="toggle" scoped="" ref="0xb67963a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6796488"/>
        <function-ref name="get" scoped="" ref="0xb6796568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6796648"/>
        <function-ref name="set" scoped="" ref="0xb6796728"/>
        <function-ref name="clr" scoped="" ref="0xb6796808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb72c7410" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb72c7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c75e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72c76c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72c77a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c7888"/>
        <function-ref name="get" scoped="" ref="0xb72c7968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c7a48"/>
        <function-ref name="set" scoped="" ref="0xb72c7b28"/>
        <function-ref name="clr" scoped="" ref="0xb72c7c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb72c5170" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb72c5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c5348"/>
        <function-ref name="isInput" scoped="" ref="0xb72c5428"/>
        <function-ref name="toggle" scoped="" ref="0xb72c5508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c55e8"/>
        <function-ref name="get" scoped="" ref="0xb72c56c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c57a8"/>
        <function-ref name="set" scoped="" ref="0xb72c5888"/>
        <function-ref name="clr" scoped="" ref="0xb72c5968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb72c8128" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb72c8128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c8300"/>
        <function-ref name="isInput" scoped="" ref="0xb72c83e0"/>
        <function-ref name="toggle" scoped="" ref="0xb72c84c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c85a0"/>
        <function-ref name="get" scoped="" ref="0xb72c8680"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c8760"/>
        <function-ref name="set" scoped="" ref="0xb72c8840"/>
        <function-ref name="clr" scoped="" ref="0xb72c8920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb72c7d68" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb72c7d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c6010"/>
        <function-ref name="isInput" scoped="" ref="0xb72c60f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72c61d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c62b0"/>
        <function-ref name="get" scoped="" ref="0xb72c6390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c6470"/>
        <function-ref name="set" scoped="" ref="0xb72c6550"/>
        <function-ref name="clr" scoped="" ref="0xb72c6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb72c5ac8" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb72c5ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c5ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb72c5d80"/>
        <function-ref name="toggle" scoped="" ref="0xb72c5e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c3010"/>
        <function-ref name="get" scoped="" ref="0xb72c30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c31d0"/>
        <function-ref name="set" scoped="" ref="0xb72c32b0"/>
        <function-ref name="clr" scoped="" ref="0xb72c3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb72c8a80" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb72c8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c8c58"/>
        <function-ref name="isInput" scoped="" ref="0xb72c8d38"/>
        <function-ref name="toggle" scoped="" ref="0xb72c8e18"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c8ef8"/>
        <function-ref name="get" scoped="" ref="0xb72c7010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c70f0"/>
        <function-ref name="set" scoped="" ref="0xb72c71d0"/>
        <function-ref name="clr" scoped="" ref="0xb72c72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb72c6790" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb72c6790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c6968"/>
        <function-ref name="isInput" scoped="" ref="0xb72c6a48"/>
        <function-ref name="toggle" scoped="" ref="0xb72c6b28"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c6c08"/>
        <function-ref name="get" scoped="" ref="0xb72c6ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c6dc8"/>
        <function-ref name="set" scoped="" ref="0xb72c6ea8"/>
        <function-ref name="clr" scoped="" ref="0xb72c5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb72c34f0" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb72c34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c36c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72c37a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72c3888"/>
        <function-ref name="isOutput" scoped="" ref="0xb72c3968"/>
        <function-ref name="get" scoped="" ref="0xb72c3a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72c3b28"/>
        <function-ref name="set" scoped="" ref="0xb72c3c08"/>
        <function-ref name="clr" scoped="" ref="0xb72c3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb676a418" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb676a418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb676a5f0"/>
        <function-ref name="isInput" scoped="" ref="0xb676a6d0"/>
        <function-ref name="toggle" scoped="" ref="0xb676a7b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb676a890"/>
        <function-ref name="get" scoped="" ref="0xb676a970"/>
        <function-ref name="makeOutput" scoped="" ref="0xb676aa50"/>
        <function-ref name="set" scoped="" ref="0xb676ab30"/>
        <function-ref name="clr" scoped="" ref="0xb676ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6769de0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6769de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6768010"/>
        <function-ref name="isInput" scoped="" ref="0xb67680f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67681d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67682b0"/>
        <function-ref name="get" scoped="" ref="0xb6768390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6768470"/>
        <function-ref name="set" scoped="" ref="0xb6768550"/>
        <function-ref name="clr" scoped="" ref="0xb6768630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67677f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67677f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67679d0"/>
        <function-ref name="isInput" scoped="" ref="0xb6767ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb6767b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6767c70"/>
        <function-ref name="get" scoped="" ref="0xb6767d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6767e30"/>
        <function-ref name="set" scoped="" ref="0xb6767f10"/>
        <function-ref name="clr" scoped="" ref="0xb6766010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6765228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6765228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6765400"/>
        <function-ref name="isInput" scoped="" ref="0xb67654e0"/>
        <function-ref name="toggle" scoped="" ref="0xb67655c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67656a0"/>
        <function-ref name="get" scoped="" ref="0xb6765780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6765860"/>
        <function-ref name="set" scoped="" ref="0xb6765940"/>
        <function-ref name="clr" scoped="" ref="0xb6765a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6764c08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6764c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6764de0"/>
        <function-ref name="isInput" scoped="" ref="0xb6764ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb6763010"/>
        <function-ref name="isOutput" scoped="" ref="0xb67630f0"/>
        <function-ref name="get" scoped="" ref="0xb67631d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67632b0"/>
        <function-ref name="set" scoped="" ref="0xb6763390"/>
        <function-ref name="clr" scoped="" ref="0xb6763470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67626c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67626c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6762898"/>
        <function-ref name="isInput" scoped="" ref="0xb6762978"/>
        <function-ref name="toggle" scoped="" ref="0xb6762a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb6762b38"/>
        <function-ref name="get" scoped="" ref="0xb6762c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6762cf8"/>
        <function-ref name="set" scoped="" ref="0xb6762dd8"/>
        <function-ref name="clr" scoped="" ref="0xb6762eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67600b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67600b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6760288"/>
        <function-ref name="isInput" scoped="" ref="0xb6760368"/>
        <function-ref name="toggle" scoped="" ref="0xb6760448"/>
        <function-ref name="isOutput" scoped="" ref="0xb6760528"/>
        <function-ref name="get" scoped="" ref="0xb6760608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67606e8"/>
        <function-ref name="set" scoped="" ref="0xb67607c8"/>
        <function-ref name="clr" scoped="" ref="0xb67608a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb675fa88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb675fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb675fc60"/>
        <function-ref name="isInput" scoped="" ref="0xb675fd40"/>
        <function-ref name="toggle" scoped="" ref="0xb675fe20"/>
        <function-ref name="isOutput" scoped="" ref="0xb675ff00"/>
        <function-ref name="get" scoped="" ref="0xb675e010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb675e0f0"/>
        <function-ref name="set" scoped="" ref="0xb675e1d0"/>
        <function-ref name="clr" scoped="" ref="0xb675e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb72bfe48" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb72bfe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72be050"/>
        <function-ref name="isInput" scoped="" ref="0xb72be130"/>
        <function-ref name="toggle" scoped="" ref="0xb72be210"/>
        <function-ref name="isOutput" scoped="" ref="0xb72be2f0"/>
        <function-ref name="get" scoped="" ref="0xb72be3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72be4b0"/>
        <function-ref name="set" scoped="" ref="0xb72be590"/>
        <function-ref name="clr" scoped="" ref="0xb72be670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb72bdac8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb72bdac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72bdca0"/>
        <function-ref name="isInput" scoped="" ref="0xb72bdd80"/>
        <function-ref name="toggle" scoped="" ref="0xb72bde60"/>
        <function-ref name="isOutput" scoped="" ref="0xb72bc010"/>
        <function-ref name="get" scoped="" ref="0xb72bc0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72bc1d0"/>
        <function-ref name="set" scoped="" ref="0xb72bc2b0"/>
        <function-ref name="clr" scoped="" ref="0xb72bc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb72c0b00" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb72c0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72c0cd8"/>
        <function-ref name="isInput" scoped="" ref="0xb72c0db8"/>
        <function-ref name="toggle" scoped="" ref="0xb72c0e98"/>
        <function-ref name="isOutput" scoped="" ref="0xb72bf010"/>
        <function-ref name="get" scoped="" ref="0xb72bf0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72bf1d0"/>
        <function-ref name="set" scoped="" ref="0xb72bf2b0"/>
        <function-ref name="clr" scoped="" ref="0xb72bf390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb72be7d0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb72be7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72be9a8"/>
        <function-ref name="isInput" scoped="" ref="0xb72bea88"/>
        <function-ref name="toggle" scoped="" ref="0xb72beb68"/>
        <function-ref name="isOutput" scoped="" ref="0xb72bec48"/>
        <function-ref name="get" scoped="" ref="0xb72bed28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72bee08"/>
        <function-ref name="set" scoped="" ref="0xb72beee8"/>
        <function-ref name="clr" scoped="" ref="0xb72bd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb72bc4f0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb72bc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72bc6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72bc7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72bc888"/>
        <function-ref name="isOutput" scoped="" ref="0xb72bc968"/>
        <function-ref name="get" scoped="" ref="0xb72bca48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72bcb28"/>
        <function-ref name="set" scoped="" ref="0xb72bcc08"/>
        <function-ref name="clr" scoped="" ref="0xb72bcce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb72bf4f0" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb72bf4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72bf6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72bf7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb72bf888"/>
        <function-ref name="isOutput" scoped="" ref="0xb72bf968"/>
        <function-ref name="get" scoped="" ref="0xb72bfa48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72bfb28"/>
        <function-ref name="set" scoped="" ref="0xb72bfc08"/>
        <function-ref name="clr" scoped="" ref="0xb72bfce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb72bd170" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb72bd170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72bd348"/>
        <function-ref name="isInput" scoped="" ref="0xb72bd428"/>
        <function-ref name="toggle" scoped="" ref="0xb72bd508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72bd5e8"/>
        <function-ref name="get" scoped="" ref="0xb72bd6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72bd7a8"/>
        <function-ref name="set" scoped="" ref="0xb72bd888"/>
        <function-ref name="clr" scoped="" ref="0xb72bd968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb72bce48" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb72bce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72bb050"/>
        <function-ref name="isInput" scoped="" ref="0xb72bb130"/>
        <function-ref name="toggle" scoped="" ref="0xb72bb210"/>
        <function-ref name="isOutput" scoped="" ref="0xb72bb2f0"/>
        <function-ref name="get" scoped="" ref="0xb72bb3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72bb4b0"/>
        <function-ref name="set" scoped="" ref="0xb72bb590"/>
        <function-ref name="clr" scoped="" ref="0xb72bb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6736de8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6736de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6731010"/>
        <function-ref name="isInput" scoped="" ref="0xb67310f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67311d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67312b0"/>
        <function-ref name="get" scoped="" ref="0xb6731390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6731470"/>
        <function-ref name="set" scoped="" ref="0xb6731550"/>
        <function-ref name="clr" scoped="" ref="0xb6731630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67307f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67307f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67309d0"/>
        <function-ref name="isInput" scoped="" ref="0xb6730ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb6730b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6730c70"/>
        <function-ref name="get" scoped="" ref="0xb6730d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6730e30"/>
        <function-ref name="set" scoped="" ref="0xb6730f10"/>
        <function-ref name="clr" scoped="" ref="0xb672f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb672e228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb672e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb672e400"/>
        <function-ref name="isInput" scoped="" ref="0xb672e4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb672e5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb672e6a0"/>
        <function-ref name="get" scoped="" ref="0xb672e780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb672e860"/>
        <function-ref name="set" scoped="" ref="0xb672e940"/>
        <function-ref name="clr" scoped="" ref="0xb672ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb672dc08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb672dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb672dde0"/>
        <function-ref name="isInput" scoped="" ref="0xb672dec0"/>
        <function-ref name="toggle" scoped="" ref="0xb672c010"/>
        <function-ref name="isOutput" scoped="" ref="0xb672c0f0"/>
        <function-ref name="get" scoped="" ref="0xb672c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb672c2b0"/>
        <function-ref name="set" scoped="" ref="0xb672c390"/>
        <function-ref name="clr" scoped="" ref="0xb672c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb672b6c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb672b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb672b898"/>
        <function-ref name="isInput" scoped="" ref="0xb672b978"/>
        <function-ref name="toggle" scoped="" ref="0xb672ba58"/>
        <function-ref name="isOutput" scoped="" ref="0xb672bb38"/>
        <function-ref name="get" scoped="" ref="0xb672bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb672bcf8"/>
        <function-ref name="set" scoped="" ref="0xb672bdd8"/>
        <function-ref name="clr" scoped="" ref="0xb672beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb67290b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb67290b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6729288"/>
        <function-ref name="isInput" scoped="" ref="0xb6729368"/>
        <function-ref name="toggle" scoped="" ref="0xb6729448"/>
        <function-ref name="isOutput" scoped="" ref="0xb6729528"/>
        <function-ref name="get" scoped="" ref="0xb6729608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67296e8"/>
        <function-ref name="set" scoped="" ref="0xb67297c8"/>
        <function-ref name="clr" scoped="" ref="0xb67298a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6728a88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6728a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6728c60"/>
        <function-ref name="isInput" scoped="" ref="0xb6728d40"/>
        <function-ref name="toggle" scoped="" ref="0xb6728e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb6728f00"/>
        <function-ref name="get" scoped="" ref="0xb6727010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67270f0"/>
        <function-ref name="set" scoped="" ref="0xb67271d0"/>
        <function-ref name="clr" scoped="" ref="0xb67272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6726538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6726538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6726710"/>
        <function-ref name="isInput" scoped="" ref="0xb67267f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67268d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67269b0"/>
        <function-ref name="get" scoped="" ref="0xb6726a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6726b70"/>
        <function-ref name="set" scoped="" ref="0xb6726c50"/>
        <function-ref name="clr" scoped="" ref="0xb6726d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72b6010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72b6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72b61e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72b62c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72b63a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72b6488"/>
        <function-ref name="get" scoped="" ref="0xb72b6568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72b6648"/>
        <function-ref name="set" scoped="" ref="0xb72b6728"/>
        <function-ref name="clr" scoped="" ref="0xb72b6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72a87b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72a87b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a8990"/>
        <function-ref name="isInput" scoped="" ref="0xb72a8a70"/>
        <function-ref name="toggle" scoped="" ref="0xb72a8b50"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a8c30"/>
        <function-ref name="get" scoped="" ref="0xb72a8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a8df0"/>
        <function-ref name="set" scoped="" ref="0xb72a8ed0"/>
        <function-ref name="clr" scoped="" ref="0xb72a7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72a5010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a51e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72a52c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72a53a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a5488"/>
        <function-ref name="get" scoped="" ref="0xb72a5568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a5648"/>
        <function-ref name="set" scoped="" ref="0xb72a5728"/>
        <function-ref name="clr" scoped="" ref="0xb72a5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72a27b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72a27b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72a2990"/>
        <function-ref name="isInput" scoped="" ref="0xb72a2a70"/>
        <function-ref name="toggle" scoped="" ref="0xb72a2b50"/>
        <function-ref name="isOutput" scoped="" ref="0xb72a2c30"/>
        <function-ref name="get" scoped="" ref="0xb72a2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72a2df0"/>
        <function-ref name="set" scoped="" ref="0xb72a2ed0"/>
        <function-ref name="clr" scoped="" ref="0xb72a1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb729f010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb729f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb729f1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb729f2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb729f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb729f488"/>
        <function-ref name="get" scoped="" ref="0xb729f568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb729f648"/>
        <function-ref name="set" scoped="" ref="0xb729f728"/>
        <function-ref name="clr" scoped="" ref="0xb729f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb729d7b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb729d7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb729d990"/>
        <function-ref name="isInput" scoped="" ref="0xb729da70"/>
        <function-ref name="toggle" scoped="" ref="0xb729db50"/>
        <function-ref name="isOutput" scoped="" ref="0xb729dc30"/>
        <function-ref name="get" scoped="" ref="0xb729dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb729ddf0"/>
        <function-ref name="set" scoped="" ref="0xb729ded0"/>
        <function-ref name="clr" scoped="" ref="0xb729c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7299080" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7299080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7299258"/>
        <function-ref name="isInput" scoped="" ref="0xb7299338"/>
        <function-ref name="toggle" scoped="" ref="0xb7299418"/>
        <function-ref name="isOutput" scoped="" ref="0xb72994f8"/>
        <function-ref name="get" scoped="" ref="0xb72995d8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72996b8"/>
        <function-ref name="set" scoped="" ref="0xb7299798"/>
        <function-ref name="clr" scoped="" ref="0xb7299878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7297840" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7297840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7297a18"/>
        <function-ref name="isInput" scoped="" ref="0xb7297af8"/>
        <function-ref name="toggle" scoped="" ref="0xb7297bd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7297cb8"/>
        <function-ref name="get" scoped="" ref="0xb7297d98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7297e78"/>
        <function-ref name="set" scoped="" ref="0xb7296010"/>
        <function-ref name="clr" scoped="" ref="0xb72960f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72940b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72940b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7294288"/>
        <function-ref name="isInput" scoped="" ref="0xb7294368"/>
        <function-ref name="toggle" scoped="" ref="0xb7294448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7294528"/>
        <function-ref name="get" scoped="" ref="0xb7294608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72946e8"/>
        <function-ref name="set" scoped="" ref="0xb72947c8"/>
        <function-ref name="clr" scoped="" ref="0xb72948a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7291880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7291880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7291a58"/>
        <function-ref name="isInput" scoped="" ref="0xb7291b38"/>
        <function-ref name="toggle" scoped="" ref="0xb7291c18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7291cf8"/>
        <function-ref name="get" scoped="" ref="0xb7291dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7291eb8"/>
        <function-ref name="set" scoped="" ref="0xb7290010"/>
        <function-ref name="clr" scoped="" ref="0xb72900f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb728e0b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb728e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb728e288"/>
        <function-ref name="isInput" scoped="" ref="0xb728e368"/>
        <function-ref name="toggle" scoped="" ref="0xb728e448"/>
        <function-ref name="isOutput" scoped="" ref="0xb728e528"/>
        <function-ref name="get" scoped="" ref="0xb728e608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb728e6e8"/>
        <function-ref name="set" scoped="" ref="0xb728e7c8"/>
        <function-ref name="clr" scoped="" ref="0xb728e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb728b880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb728b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb728ba58"/>
        <function-ref name="isInput" scoped="" ref="0xb728bb38"/>
        <function-ref name="toggle" scoped="" ref="0xb728bc18"/>
        <function-ref name="isOutput" scoped="" ref="0xb728bcf8"/>
        <function-ref name="get" scoped="" ref="0xb728bdd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb728beb8"/>
        <function-ref name="set" scoped="" ref="0xb728a010"/>
        <function-ref name="clr" scoped="" ref="0xb728a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72880b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72880b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7288288"/>
        <function-ref name="isInput" scoped="" ref="0xb7288368"/>
        <function-ref name="toggle" scoped="" ref="0xb7288448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7288528"/>
        <function-ref name="get" scoped="" ref="0xb7288608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72886e8"/>
        <function-ref name="set" scoped="" ref="0xb72887c8"/>
        <function-ref name="clr" scoped="" ref="0xb72888a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7286880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7286880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7286a58"/>
        <function-ref name="isInput" scoped="" ref="0xb7286b38"/>
        <function-ref name="toggle" scoped="" ref="0xb7286c18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7286cf8"/>
        <function-ref name="get" scoped="" ref="0xb7286dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7286eb8"/>
        <function-ref name="set" scoped="" ref="0xb7285010"/>
        <function-ref name="clr" scoped="" ref="0xb72850f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7268bf8" loc="61:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7268bf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb74097d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb74097d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7268dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7267010" loc="62:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7267010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb72671e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb72672c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb72673a8"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7267488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7267568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb7256808" loc="60:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7256808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72569e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb734fa28" loc="57:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb734fa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb734fc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb7256400" loc="59:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7256400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72565d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb734fdc0" loc="58:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb734fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7256010"/>
        <function-ref name="taskLoop" scoped="" ref="0xb72560f0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb72561d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb73e8d58" loc="48:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb73e8d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb73ef010"/>
        <function-ref name="runTask" scoped="" ref="0xb73ef0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb73ed5f0" loc="47:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb73ed5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb73ed7c8"/>
        <function-ref name="taskLoop" scoped="" ref="0xb73ed8a8"/>
        <function-ref name="runNextTask" scoped="" ref="0xb73ed988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7373100" loc="56:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7373100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb73732d8"/>
        <function-ref name="runTask" scoped="" ref="0xb73733b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb7373d68" loc="57:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7373d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7372010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb73748a8" loc="55:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb73748a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7374a80"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7374b60"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7374c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb735f218" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb735f218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb735f3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb73ee728" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb73ee728"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb73ee900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb7361420" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb7361420"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb73615f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7245010" loc="46:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7245010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb72451e8"/>
        <function-ref name="stopDone" scoped="" ref="0xb72452c8"/>
        <function-ref name="start" scoped="" ref="0xb72453a8"/>
        <function-ref name="stop" scoped="" ref="0xb7245488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7209d60" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7209d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7244010"/>
        <function-ref name="getPayload" scoped="" ref="0xb72440f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72441d0"/>
        <function-ref name="cancel" scoped="" ref="0xb72442b0"/>
        <function-ref name="sendDone" scoped="" ref="0xb7244390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb71fe148" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb71fe148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb71fe320"/>
        <function-ref name="payloadLength" scoped="" ref="0xb71fe400"/>
        <function-ref name="getPayload" scoped="" ref="0xb71fe4e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71fe5c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb71fe6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7242248" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7242248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7242420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb71ea9e0" loc="53:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb71ea9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb71eabb8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb71eac98"/>
        <function-ref name="led1On" scoped="" ref="0xb71ead78"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb71eae58"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7205010"/>
        <function-ref name="get" scoped="" ref="0xb72050f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb72051d0"/>
        <function-ref name="led2Off" scoped="" ref="0xb7205550"/>
        <function-ref name="set" scoped="" ref="0xb72052b0"/>
        <function-ref name="led0On" scoped="" ref="0xb7205390"/>
        <function-ref name="led2On" scoped="" ref="0xb7205470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb71f0308" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb71f0308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb71f04e0"/>
        <function-ref name="noAck" scoped="" ref="0xb71f05c0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb71f06a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb71f5140" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb71f5140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb71f5318"/>
        <function-ref name="source" scoped="" ref="0xb71f53f8"/>
        <function-ref name="address" scoped="" ref="0xb71f54d8"/>
        <function-ref name="destination" scoped="" ref="0xb71f55b8"/>
        <function-ref name="setSource" scoped="" ref="0xb71f5698"/>
        <function-ref name="setDestination" scoped="" ref="0xb71f5778"/>
        <function-ref name="type" scoped="" ref="0xb71f5858"/>
        <function-ref name="setType" scoped="" ref="0xb71f5938"/>
        <function-ref name="isForMe" scoped="" ref="0xb71f5a18"/>
        <function-ref name="setGroup" scoped="" ref="0xb71f5af8"/>
        <function-ref name="localGroup" scoped="" ref="0xb71f5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb71b4ed0" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb71b4ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb71b30c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb71b31a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71b3280"/>
        <function-ref name="cancel" scoped="" ref="0xb71b3360"/>
        <function-ref name="sendDone" scoped="" ref="0xb71b3440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb71b35a0" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb71b35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb71b3778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7204be8" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7204be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7204dd0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7204eb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71e9010"/>
        <function-ref name="cancel" scoped="" ref="0xb71e90f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb71e91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb71b4310" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb71b4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb71b44e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb71b45c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb71b46a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71b4788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb71b4868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb71e93a8" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb71e93a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb71e9590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb71b49a8" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb71b49a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb71b4b80"/>
        <function-ref name="noAck" scoped="" ref="0xb71b4c60"/>
        <function-ref name="wasAcked" scoped="" ref="0xb71b4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb71e96d0" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb71e96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb71e98a8"/>
        <function-ref name="source" scoped="" ref="0xb71e9988"/>
        <function-ref name="address" scoped="" ref="0xb71e9a68"/>
        <function-ref name="destination" scoped="" ref="0xb71e9b48"/>
        <function-ref name="setSource" scoped="" ref="0xb71e9c28"/>
        <function-ref name="setDestination" scoped="" ref="0xb71e9d08"/>
        <function-ref name="type" scoped="" ref="0xb71e9de8"/>
        <function-ref name="setType" scoped="" ref="0xb71e9ec8"/>
        <function-ref name="isForMe" scoped="" ref="0xb71b4010"/>
        <function-ref name="setGroup" scoped="" ref="0xb71b40f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb71b41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb71b2d18" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb71b2d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb71b2ef0"/>
        <function-ref name="stopDone" scoped="" ref="0xb71af010"/>
        <function-ref name="start" scoped="" ref="0xb71af0f0"/>
        <function-ref name="stop" scoped="" ref="0xb71af1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb71afc20" loc="52:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb71afc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb724dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb71afdf8"/>
        <function-ref name="getPayload" scoped="" ref="0xb71afed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71ad010"/>
        <function-ref name="cancel" scoped="" ref="0xb71ad0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb71ad1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb71b2980" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb71b2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb71b2b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb71af618" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb71af618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb724dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb71af7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb71a9840" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb71a9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb71a9a18"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb71a9af8"/>
        <function-ref name="led1On" scoped="" ref="0xb71a9bd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb71a9cb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb71a9d98"/>
        <function-ref name="get" scoped="" ref="0xb71a9e78"/>
        <function-ref name="led1Off" scoped="" ref="0xb71ac010"/>
        <function-ref name="led2Off" scoped="" ref="0xb71ac390"/>
        <function-ref name="set" scoped="" ref="0xb71ac0f0"/>
        <function-ref name="led0On" scoped="" ref="0xb71ac1d0"/>
        <function-ref name="led2On" scoped="" ref="0xb71ac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0xb71a9338" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0xb71a9338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb724dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb71a9510"/>
        <function-ref name="offset" scoped="" ref="0xb71a95f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb71a96d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7198de8" loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7198de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7197010"/>
        <function-ref name="stopDone" scoped="" ref="0xb71970f0"/>
        <function-ref name="start" scoped="" ref="0xb71971d0"/>
        <function-ref name="stop" scoped="" ref="0xb71972b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0xb715dce8" loc="332:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0xb715dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb715dec0"/>
        <function-ref name="runTask" scoped="" ref="0xb715b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb718be08" loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0xb718be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7195010"/>
        <function-ref name="stop" scoped="" ref="0xb71950f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0xb717b168" loc="191:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0xb717b168"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb717b340"/>
        <function-ref name="runTask" scoped="" ref="0xb717b420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7198a50" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7198a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7198c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0xb7195df8" loc="75:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0xb7195df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0xb718c010"/>
        <function-ref name="flush" scoped="" ref="0xb718c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0xb715e578" loc="322:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0xb715e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb715e750"/>
        <function-ref name="runTask" scoped="" ref="0xb715e830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0xb718d8d8" loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0xb718d8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb718dab0"/>
        <function-ref name="resetSend" scoped="" ref="0xb718db90"/>
        <function-ref name="dataReceived" scoped="" ref="0xb718dc70"/>
        <function-ref name="resetReceive" scoped="" ref="0xb718dd50"/>
        <function-ref name="putData" scoped="" ref="0xb718de30"/>
        <function-ref name="putDone" scoped="" ref="0xb718df10"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb7196010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7196180" loc="73:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7196180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7196358"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7196438"/>
        <function-ref name="led1On" scoped="" ref="0xb7196518"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb71965f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb71966d8"/>
        <function-ref name="get" scoped="" ref="0xb71967b8"/>
        <function-ref name="led1Off" scoped="" ref="0xb7196898"/>
        <function-ref name="led2Off" scoped="" ref="0xb7196c18"/>
        <function-ref name="set" scoped="" ref="0xb7196978"/>
        <function-ref name="led0On" scoped="" ref="0xb7196a58"/>
        <function-ref name="led2On" scoped="" ref="0xb7196b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0xb715a998" loc="341:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb715a998"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb715ab70"/>
        <function-ref name="runTask" scoped="" ref="0xb715ac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0xb71935b8" loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0xb71935b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb7193790"/>
        <function-ref name="nextByte" scoped="" ref="0xb7193870"/>
        <function-ref name="startSend" scoped="" ref="0xb7193950"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb7193a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0xb7191778" loc="68:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb7191778"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb7191950"/>
        <function-ref name="byteReceived" scoped="" ref="0xb7191a30"/>
        <function-ref name="endPacket" scoped="" ref="0xb7191b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0xb70e7030" loc="275:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0xb70e7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb70e7208"/>
        <function-ref name="runTask" scoped="" ref="0xb70e72e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7122c60" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7122c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb724dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7122e48"/>
        <function-ref name="getPayload" scoped="" ref="0xb7122f28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70e9018"/>
        <function-ref name="cancel" scoped="" ref="0xb70e90f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb70e91d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0xb70e7468" loc="158:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0xb70e7468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb70e7640"/>
        <function-ref name="runTask" scoped="" ref="0xb70e7720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb71228a0" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb71228a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb724dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7122a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0xb70e9400" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0xb70e9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb724dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb70e95e8"/>
        <function-ref name="offset" scoped="" ref="0xb70e96c8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb70e97a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb70e83f0" loc="57:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb70e83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb70e85c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb70e86a8"/>
        <function-ref name="led1On" scoped="" ref="0xb70e8788"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb70e8868"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb70e8948"/>
        <function-ref name="get" scoped="" ref="0xb70e8a28"/>
        <function-ref name="led1Off" scoped="" ref="0xb70e8b08"/>
        <function-ref name="led2On" scoped="" ref="0xb70e8e88"/>
        <function-ref name="set" scoped="" ref="0xb70e8cc8"/>
        <function-ref name="led2Off" scoped="" ref="0xb70e8be8"/>
        <function-ref name="led0On" scoped="" ref="0xb70e8da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0xb70e9dc0" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0xb70e9dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb70e8010"/>
        <function-ref name="nextByte" scoped="" ref="0xb70e80f0"/>
        <function-ref name="startSend" scoped="" ref="0xb70e81d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb70e82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0xb70e98e8" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb70e98e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb70e9ac0"/>
        <function-ref name="byteReceived" scoped="" ref="0xb70e9ba0"/>
        <function-ref name="endPacket" scoped="" ref="0xb70e9c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0xb70dcb80" loc="50:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb70dcb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70dcd58"/>
        <function-ref name="receivedByte" scoped="" ref="0xb70dce38"/>
        <function-ref name="receive" scoped="" ref="0xb70dcf18"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb70e1010"/>
        <function-ref name="receiveDone" scoped="" ref="0xb70e10f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb70e11d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb70e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0xb70e6868" loc="48:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0xb70e6868"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb70e6a40"/>
        <function-ref name="resetSend" scoped="" ref="0xb70e6b20"/>
        <function-ref name="dataReceived" scoped="" ref="0xb70e6c00"/>
        <function-ref name="resetReceive" scoped="" ref="0xb70e6ce0"/>
        <function-ref name="putData" scoped="" ref="0xb70e6dc0"/>
        <function-ref name="putDone" scoped="" ref="0xb70e6ea0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb70e3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb70e1420" loc="51:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb70e1420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb70e15f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb70e16d8"/>
        <function-ref name="led1On" scoped="" ref="0xb70e17b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb70e1898"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb70e1978"/>
        <function-ref name="get" scoped="" ref="0xb70e1a58"/>
        <function-ref name="led1Off" scoped="" ref="0xb70e1b38"/>
        <function-ref name="led2Off" scoped="" ref="0xb70e1eb8"/>
        <function-ref name="set" scoped="" ref="0xb70e1c18"/>
        <function-ref name="led0On" scoped="" ref="0xb70e1cf8"/>
        <function-ref name="led2On" scoped="" ref="0xb70e1dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb70c86e8" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb70c86e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70c88c0"/>
        <function-ref name="receive" scoped="" ref="0xb70c89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb70e5870" loc="41:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb70e5870"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70e5a48"/>
        <function-ref name="receivedByte" scoped="" ref="0xb70e5b28"/>
        <function-ref name="receive" scoped="" ref="0xb70e5c08"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb70e5ce8"/>
        <function-ref name="receiveDone" scoped="" ref="0xb70e5dc8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb70e5ea8"/>
        <function-ref name="sendDone" scoped="" ref="0xb70cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb70e53f0" loc="40:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb70e53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb70e55c8"/>
        <function-ref name="stop" scoped="" ref="0xb70e56a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb70c75d8" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb70c75d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70c77b0"/>
        <function-ref name="receive" scoped="" ref="0xb70c7890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb70c7a58" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb70c7a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70c7c30"/>
        <function-ref name="receivedByte" scoped="" ref="0xb70c7d10"/>
        <function-ref name="receive" scoped="" ref="0xb70c7df0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb70c7ed0"/>
        <function-ref name="receiveDone" scoped="" ref="0xb70c6010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb70c60f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb70c61d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb70c2450" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb70c2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb70c2ba0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb70c50a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb70c2e18"/>
        <function-ref name="overflow" scoped="" ref="0xb70c5320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb70c7168" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb70c7168"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb70c7340"/>
        <function-ref name="stop" scoped="" ref="0xb70c7420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb70c1e28" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb70c1e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70c0050"/>
        <function-ref name="receive" scoped="" ref="0xb70c0130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0xb70c0b28" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0xb70c0b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb70c0d00"/>
        <function-ref name="stop" scoped="" ref="0xb70c0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb70c16d8" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb70c16d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb70c18b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb70c0290" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb70c0290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70c0468"/>
        <function-ref name="receivedByte" scoped="" ref="0xb70c0548"/>
        <function-ref name="receive" scoped="" ref="0xb70c0628"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb70c0708"/>
        <function-ref name="receiveDone" scoped="" ref="0xb70c07e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb70c08c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb70c09a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb70990a0" loc="56:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb70990a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb70997f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7099ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7099a68"/>
        <function-ref name="overflow" scoped="" ref="0xb7098010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0xb709a448" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0xb709a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb709a620"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb709a700"/>
        <function-ref name="rxDone" scoped="" ref="0xb709a7e0"/>
        <function-ref name="txDone" scoped="" ref="0xb709a8c0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb709a9a0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb709aa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb709ab60"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb709ac40"/>
        <function-ref name="tx" scoped="" ref="0xb709ad20"/>
        <function-ref name="rx" scoped="" ref="0xb709ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb70c1a10" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb70c1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb70c1be8"/>
        <function-ref name="stop" scoped="" ref="0xb70c1cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0xb709a010" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0xb709a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb709a1e8"/>
        <function-ref name="stop" scoped="" ref="0xb709a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0xb7086508" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0xb7086508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb70866e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb70867c0"/>
        <function-ref name="rxDone" scoped="" ref="0xb70868a0"/>
        <function-ref name="txDone" scoped="" ref="0xb7086980"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb7086a60"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb7086b40"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb7086c20"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb7086d00"/>
        <function-ref name="tx" scoped="" ref="0xb7086de0"/>
        <function-ref name="rx" scoped="" ref="0xb7086ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0xb7085b80" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0xb7085b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb7085d58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb7085e38"/>
        <function-ref name="rxDone" scoped="" ref="0xb7085f18"/>
        <function-ref name="txDone" scoped="" ref="0xb7084010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb70840f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb70841d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb70842b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb7084390"/>
        <function-ref name="tx" scoped="" ref="0xb7084470"/>
        <function-ref name="rx" scoped="" ref="0xb7084550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0xb7086010" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0xb7086010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb70861e8"/>
        <function-ref name="stop" scoped="" ref="0xb70862c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0xb7085178" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0xb7085178"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7085350"/>
        <function-ref name="stop" scoped="" ref="0xb7085430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0xb7085688" loc="52:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0xb7085688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7085860"/>
        <function-ref name="stop" scoped="" ref="0xb7085940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0xb7087a80" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0xb7087a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7087c58"/>
        <function-ref name="stop" scoped="" ref="0xb7087d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0xb7084d80" loc="114:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0xb7084d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb707c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0xb707ccd0" loc="117:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0xb707ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb707cea8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb707b010"/>
        <function-ref name="rxDone" scoped="" ref="0xb707b0f0"/>
        <function-ref name="txDone" scoped="" ref="0xb707b1d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb707b2b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb707b390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb707b470"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb707b550"/>
        <function-ref name="tx" scoped="" ref="0xb707b630"/>
        <function-ref name="rx" scoped="" ref="0xb707b710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0xb707b920" loc="119:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0xb707b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb707baf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0xb707a880" loc="122:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0xb707a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb707aa58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb707ab38"/>
        <function-ref name="rxDone" scoped="" ref="0xb707ac18"/>
        <function-ref name="txDone" scoped="" ref="0xb707acf8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb707add8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb707aeb8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb7079010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb70790f0"/>
        <function-ref name="tx" scoped="" ref="0xb70791d0"/>
        <function-ref name="rx" scoped="" ref="0xb70792b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0xb707c7b8" loc="116:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0xb707c7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb707c990"/>
        <function-ref name="stop" scoped="" ref="0xb707ca70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0xb707bd70" loc="120:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0xb707bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb707a010"/>
        <function-ref name="stop" scoped="" ref="0xb707a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0xb707a368" loc="121:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0xb707a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb707a540"/>
        <function-ref name="stop" scoped="" ref="0xb707a620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0xb70794a8" loc="124:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb70794a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7079680"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7079760"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7079840"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7079920"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7079a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb7079be8" loc="125:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb7079be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7079dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0xb707c288" loc="115:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0xb707c288"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb707c460"/>
        <function-ref name="stop" scoped="" ref="0xb707c540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb70ca878" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb70ca878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7043010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7043500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7043288"/>
        <function-ref name="overflow" scoped="" ref="0xb7043778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb70403c0" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb70403c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7376010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7040b10"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb703f010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7040d88"/>
        <function-ref name="overflow" scoped="" ref="0xb703f288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb702e360" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb702e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb702e538"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb702e618"/>
        <function-ref name="getControlA" scoped="" ref="0xb702e6f8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb702e7d8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb702e8b8"/>
        <function-ref name="setControlB" scoped="" ref="0xb702e998"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb702ea78"/>
        <function-ref name="getControlB" scoped="" ref="0xb702eb58"/>
        <function-ref name="setControlC" scoped="" ref="0xb702ec38"/>
        <function-ref name="setControlA" scoped="" ref="0xb702ed18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb7033190" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb7033190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb702dc68"/>
        <function-ref name="test" scoped="" ref="0xb702d778"/>
        <function-ref name="get" scoped="" ref="0xb70337d8"/>
        <function-ref name="captured" scoped="" ref="0xb7033cf0"/>
        <function-ref name="reset" scoped="" ref="0xb702d010"/>
        <function-ref name="isOn" scoped="" ref="0xb702d9f0"/>
        <function-ref name="set" scoped="" ref="0xb7033a50"/>
        <function-ref name="start" scoped="" ref="0xb702d288"/>
        <function-ref name="stop" scoped="" ref="0xb702d500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb7024cd8" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb7024cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7027288"/>
        <function-ref name="fired" scoped="" ref="0xb7028888"/>
        <function-ref name="get" scoped="" ref="0xb7028370"/>
        <function-ref name="reset" scoped="" ref="0xb7028b00"/>
        <function-ref name="isOn" scoped="" ref="0xb7027500"/>
        <function-ref name="set" scoped="" ref="0xb70285e8"/>
        <function-ref name="start" scoped="" ref="0xb7028d78"/>
        <function-ref name="stop" scoped="" ref="0xb7027010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7036928" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7036928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7035418"/>
        <function-ref name="test" scoped="" ref="0xb703cf08"/>
        <function-ref name="get" scoped="" ref="0xb703c010"/>
        <function-ref name="setScale" scoped="" ref="0xb7035690"/>
        <function-ref name="getScale" scoped="" ref="0xb7035930"/>
        <function-ref name="reset" scoped="" ref="0xb703c7a0"/>
        <function-ref name="overflow" scoped="" ref="0xb703c528"/>
        <function-ref name="isOn" scoped="" ref="0xb70351a0"/>
        <function-ref name="set" scoped="" ref="0xb703c288"/>
        <function-ref name="start" scoped="" ref="0xb703ca18"/>
        <function-ref name="stop" scoped="" ref="0xb703cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb701e530" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb701e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb701e708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb701e7e8"/>
        <function-ref name="getControlA" scoped="" ref="0xb701e8c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb701e9a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb701ea88"/>
        <function-ref name="setControlB" scoped="" ref="0xb701eb68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb701ec48"/>
        <function-ref name="getControlB" scoped="" ref="0xb701ed28"/>
        <function-ref name="setControlC" scoped="" ref="0xb701ee08"/>
        <function-ref name="setControlA" scoped="" ref="0xb701eee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb701a128" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb701a128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7019690"/>
        <function-ref name="fired" scoped="" ref="0xb701ac88"/>
        <function-ref name="get" scoped="" ref="0xb701a770"/>
        <function-ref name="reset" scoped="" ref="0xb701af00"/>
        <function-ref name="isOn" scoped="" ref="0xb7019908"/>
        <function-ref name="set" scoped="" ref="0xb701a9e8"/>
        <function-ref name="start" scoped="" ref="0xb70191a0"/>
        <function-ref name="stop" scoped="" ref="0xb7019418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb701d258" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb701d258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb701bcc0"/>
        <function-ref name="test" scoped="" ref="0xb701b7d0"/>
        <function-ref name="get" scoped="" ref="0xb701d8a0"/>
        <function-ref name="captured" scoped="" ref="0xb701ddb8"/>
        <function-ref name="reset" scoped="" ref="0xb701b068"/>
        <function-ref name="isOn" scoped="" ref="0xb701ba48"/>
        <function-ref name="set" scoped="" ref="0xb701db18"/>
        <function-ref name="start" scoped="" ref="0xb701b2e0"/>
        <function-ref name="stop" scoped="" ref="0xb701b558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb7019d20" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb7019d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb70162c0"/>
        <function-ref name="fired" scoped="" ref="0xb70178a8"/>
        <function-ref name="get" scoped="" ref="0xb7017390"/>
        <function-ref name="reset" scoped="" ref="0xb7017b20"/>
        <function-ref name="isOn" scoped="" ref="0xb7016538"/>
        <function-ref name="set" scoped="" ref="0xb7017608"/>
        <function-ref name="start" scoped="" ref="0xb7017d98"/>
        <function-ref name="stop" scoped="" ref="0xb7016048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb7016950" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb7016950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7015f08"/>
        <function-ref name="fired" scoped="" ref="0xb7015528"/>
        <function-ref name="get" scoped="" ref="0xb7015010"/>
        <function-ref name="reset" scoped="" ref="0xb70157a0"/>
        <function-ref name="isOn" scoped="" ref="0xb70131a0"/>
        <function-ref name="set" scoped="" ref="0xb7015288"/>
        <function-ref name="start" scoped="" ref="0xb7015a18"/>
        <function-ref name="stop" scoped="" ref="0xb7015c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7020230" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7020230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb701fca0"/>
        <function-ref name="test" scoped="" ref="0xb701f7b0"/>
        <function-ref name="get" scoped="" ref="0xb7020878"/>
        <function-ref name="setScale" scoped="" ref="0xb701ff18"/>
        <function-ref name="getScale" scoped="" ref="0xb701e1d0"/>
        <function-ref name="reset" scoped="" ref="0xb701f048"/>
        <function-ref name="overflow" scoped="" ref="0xb7020d90"/>
        <function-ref name="isOn" scoped="" ref="0xb701fa28"/>
        <function-ref name="set" scoped="" ref="0xb7020af0"/>
        <function-ref name="start" scoped="" ref="0xb701f2c0"/>
        <function-ref name="stop" scoped="" ref="0xb701f538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6fd1c70" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6fd1c70"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb74095d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb74095d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6fd1e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6fd0078" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6fd0078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6fc8ab8"/>
        <function-ref name="test" scoped="" ref="0xb6fc85c8"/>
        <function-ref name="get" scoped="" ref="0xb6fd06c0"/>
        <function-ref name="setScale" scoped="" ref="0xb6fc8d30"/>
        <function-ref name="getScale" scoped="" ref="0xb6fc7010"/>
        <function-ref name="reset" scoped="" ref="0xb6fd0e50"/>
        <function-ref name="overflow" scoped="" ref="0xb6fd0bd8"/>
        <function-ref name="isOn" scoped="" ref="0xb6fc8840"/>
        <function-ref name="set" scoped="" ref="0xb6fd0938"/>
        <function-ref name="start" scoped="" ref="0xb6fc80d8"/>
        <function-ref name="stop" scoped="" ref="0xb6fc8350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6fd2890" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6fd2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7376010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6fbc010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6fbc500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6fbc288"/>
        <function-ref name="overflow" scoped="" ref="0xb6fbc778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6fbca58" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6fbca58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6fba500"/>
        <function-ref name="test" scoped="" ref="0xb6fba010"/>
        <function-ref name="get" scoped="" ref="0xb6fbb0b8"/>
        <function-ref name="setScale" scoped="" ref="0xb6fba778"/>
        <function-ref name="getScale" scoped="" ref="0xb6fbaa18"/>
        <function-ref name="reset" scoped="" ref="0xb6fbb848"/>
        <function-ref name="overflow" scoped="" ref="0xb6fbb5d0"/>
        <function-ref name="isOn" scoped="" ref="0xb6fba288"/>
        <function-ref name="set" scoped="" ref="0xb6fbb330"/>
        <function-ref name="start" scoped="" ref="0xb6fbbac0"/>
        <function-ref name="stop" scoped="" ref="0xb6fbbd38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb6fa70e0" loc="63:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb6fa70e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7376010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6fa7830"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6fa7d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6fa7aa8"/>
        <function-ref name="overflow" scoped="" ref="0xb6fa5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb7041e60" loc="62:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7041e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6fb75e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6fb7ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6fb7858"/>
        <function-ref name="overflow" scoped="" ref="0xb6fb7d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0xb6fa4928" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0xb6fa4928"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb6fa4b00"/>
        <function-ref name="offset" scoped="" ref="0xb6fa4be0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb6fa4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb6f9cd98" loc="46:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6f9cd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6f99010"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6f990f0"/>
        <function-ref name="led1On" scoped="" ref="0xb6f991d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6f992b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6f99390"/>
        <function-ref name="get" scoped="" ref="0xb6f99470"/>
        <function-ref name="led1Off" scoped="" ref="0xb6f99550"/>
        <function-ref name="led2Off" scoped="" ref="0xb6f998d0"/>
        <function-ref name="set" scoped="" ref="0xb6f99630"/>
        <function-ref name="led0On" scoped="" ref="0xb6f99710"/>
        <function-ref name="led2On" scoped="" ref="0xb6f997f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb6f95240" loc="50:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb6f95240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6f95418"/>
        <function-ref name="isInput" scoped="" ref="0xb6f954f8"/>
        <function-ref name="toggle" scoped="" ref="0xb6f955d8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6f956b8"/>
        <function-ref name="get" scoped="" ref="0xb6f95798"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6f95878"/>
        <function-ref name="set" scoped="" ref="0xb6f95958"/>
        <function-ref name="clr" scoped="" ref="0xb6f95a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6f96168" loc="46:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6f96168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6f96340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb6f95c28" loc="51:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb6f95c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6f95e00"/>
        <function-ref name="isInput" scoped="" ref="0xb6f95ee0"/>
        <function-ref name="toggle" scoped="" ref="0xb6f94010"/>
        <function-ref name="isOutput" scoped="" ref="0xb6f940f0"/>
        <function-ref name="get" scoped="" ref="0xb6f941d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6f942b0"/>
        <function-ref name="set" scoped="" ref="0xb6f94390"/>
        <function-ref name="clr" scoped="" ref="0xb6f94470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb6f964b0" loc="47:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6f964b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6f96688"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6f96768"/>
        <function-ref name="led1On" scoped="" ref="0xb6f96848"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6f96928"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6f96a08"/>
        <function-ref name="get" scoped="" ref="0xb6f96ae8"/>
        <function-ref name="led1Off" scoped="" ref="0xb6f96bc8"/>
        <function-ref name="led2Off" scoped="" ref="0xb6f95010"/>
        <function-ref name="set" scoped="" ref="0xb6f96ca8"/>
        <function-ref name="led0On" scoped="" ref="0xb6f96d88"/>
        <function-ref name="led2On" scoped="" ref="0xb6f96e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb6f94660" loc="52:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb6f94660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6f94838"/>
        <function-ref name="isInput" scoped="" ref="0xb6f94918"/>
        <function-ref name="toggle" scoped="" ref="0xb6f949f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6f94ad8"/>
        <function-ref name="get" scoped="" ref="0xb6f94bb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6f94c98"/>
        <function-ref name="set" scoped="" ref="0xb6f94d78"/>
        <function-ref name="clr" scoped="" ref="0xb6f94e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb6f84a70" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb6f84a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6f84c48"/>
        <function-ref name="isInput" scoped="" ref="0xb6f84d28"/>
        <function-ref name="toggle" scoped="" ref="0xb6f84e08"/>
        <function-ref name="isOutput" scoped="" ref="0xb6f84ee8"/>
        <function-ref name="get" scoped="" ref="0xb6f83010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6f830f0"/>
        <function-ref name="set" scoped="" ref="0xb6f831d0"/>
        <function-ref name="clr" scoped="" ref="0xb6f832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb6f834c0" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb6f834c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6f83698"/>
        <function-ref name="isInput" scoped="" ref="0xb6f83778"/>
        <function-ref name="toggle" scoped="" ref="0xb6f83858"/>
        <function-ref name="isOutput" scoped="" ref="0xb6f83938"/>
        <function-ref name="get" scoped="" ref="0xb6f83a18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6f83af8"/>
        <function-ref name="set" scoped="" ref="0xb6f83bd8"/>
        <function-ref name="clr" scoped="" ref="0xb6f83cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb6f82870" loc="47:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6f82870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6f82a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb6f83ec8" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb6f83ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6f820c0"/>
        <function-ref name="isInput" scoped="" ref="0xb6f821a0"/>
        <function-ref name="toggle" scoped="" ref="0xb6f82280"/>
        <function-ref name="isOutput" scoped="" ref="0xb6f82360"/>
        <function-ref name="get" scoped="" ref="0xb6f82440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6f82520"/>
        <function-ref name="set" scoped="" ref="0xb6f82600"/>
        <function-ref name="clr" scoped="" ref="0xb6f826e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0xb6f73768" loc="10:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0xb6f73768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6f72330"/>
        <function-ref name="fired" scoped="" ref="0xb6f7a520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6f7ac28"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6f7a9d0"/>
        <function-ref name="getdt" scoped="" ref="0xb6f727e0"/>
        <function-ref name="gett0" scoped="" ref="0xb6f72588"/>
        <function-ref name="isRunning" scoped="" ref="0xb6f7a778"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6f73d90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6f72010"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6f7a048"/>
        <function-ref name="stop" scoped="" ref="0xb6f7a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendToSerial" ref="0xb6f6aae8" loc="44:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendToSerial" scoped="" ref="0xb6f6aae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6f6acc0"/>
        <function-ref name="runTask" scoped="" ref="0xb6f6ada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb6f7cd00" loc="8:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb6f7cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb6f7ced8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb6f71278" loc="12:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0xb6f71278"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6f71450"/>
        <function-ref name="stopDone" scoped="" ref="0xb6f71530"/>
        <function-ref name="start" scoped="" ref="0xb6f71610"/>
        <function-ref name="stop" scoped="" ref="0xb6f716f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0xb6f71888" loc="13:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb6f71888"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f71a60"/>
        <function-ref name="receive" scoped="" ref="0xb6f71b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb6f705f0" loc="16:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6f705f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f707c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f708a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f70988"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f70a68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f70b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xb6f72b20" loc="11:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xb6f72b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6f72cf8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6f72dd8"/>
        <function-ref name="start" scoped="" ref="0xb6f72eb8"/>
        <function-ref name="stop" scoped="" ref="0xb6f71010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb6f6e238" loc="19:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6f6e238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f6e410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0xb6f71ce8" loc="14:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb6f71ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f71ec0"/>
        <function-ref name="receivedByte" scoped="" ref="0xb6f70010"/>
        <function-ref name="receive" scoped="" ref="0xb6f700f0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb6f701d0"/>
        <function-ref name="receiveDone" scoped="" ref="0xb6f702b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb6f70390"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f70470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6f7b060" loc="9:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6f7b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6f7b238"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6f7b318"/>
        <function-ref name="led1On" scoped="" ref="0xb6f7b3f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6f7b4d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6f7b5b8"/>
        <function-ref name="get" scoped="" ref="0xb6f7b698"/>
        <function-ref name="led1Off" scoped="" ref="0xb6f7b778"/>
        <function-ref name="led2Off" scoped="" ref="0xb6f7baf8"/>
        <function-ref name="set" scoped="" ref="0xb6f7b858"/>
        <function-ref name="led0On" scoped="" ref="0xb6f7b938"/>
        <function-ref name="led2On" scoped="" ref="0xb6f7ba18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb6f6f9f0" loc="18:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6f6f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f6fbc8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f6fca8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f6fd88"/>
        <function-ref name="cancel" scoped="" ref="0xb6f6fe68"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f6e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendToRadio" ref="0xb6f69308" loc="45:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendToRadio" scoped="" ref="0xb6f69308"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6f69560"/>
        <function-ref name="runTask" scoped="" ref="0xb6f69640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb6f70ce0" loc="17:SerialC.nc">
      <component-ref qname="SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6f70ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6f70eb8"/>
        <function-ref name="source" scoped="" ref="0xb6f6f010"/>
        <function-ref name="address" scoped="" ref="0xb6f6f0f0"/>
        <function-ref name="destination" scoped="" ref="0xb6f6f1d0"/>
        <function-ref name="setSource" scoped="" ref="0xb6f6f2b0"/>
        <function-ref name="setDestination" scoped="" ref="0xb6f6f390"/>
        <function-ref name="type" scoped="" ref="0xb6f6f470"/>
        <function-ref name="setType" scoped="" ref="0xb6f6f550"/>
        <function-ref name="isForMe" scoped="" ref="0xb6f6f630"/>
        <function-ref name="setGroup" scoped="" ref="0xb6f6f710"/>
        <function-ref name="localGroup" scoped="" ref="0xb6f6f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6f40c88" loc="45:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6f40c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6e49790"/>
        <function-ref name="fired" scoped="" ref="0xb6f3fa20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6e49150"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6f3fed0"/>
        <function-ref name="getdt" scoped="" ref="0xb6e49c40"/>
        <function-ref name="gett0" scoped="" ref="0xb6e499e8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6f3fc78"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6f3f2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6e49470"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6f3f548"/>
        <function-ref name="stop" scoped="" ref="0xb6f3f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb6f394d0" loc="49:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb6f394d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6f37010"/>
        <function-ref name="fired" scoped="" ref="0xb6f38268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6f38970"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6f38718"/>
        <function-ref name="getdt" scoped="" ref="0xb6f374c0"/>
        <function-ref name="gett0" scoped="" ref="0xb6f37268"/>
        <function-ref name="isRunning" scoped="" ref="0xb6f384c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6f39af8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6f38c90"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6f39d78"/>
        <function-ref name="stop" scoped="" ref="0xb6f38010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb6f33510" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb6f33510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6f31010"/>
        <function-ref name="fired" scoped="" ref="0xb6f322a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6f329a8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6f32750"/>
        <function-ref name="getdt" scoped="" ref="0xb6f314c0"/>
        <function-ref name="gett0" scoped="" ref="0xb6f31268"/>
        <function-ref name="isRunning" scoped="" ref="0xb6f324f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6f33b38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6f32cc8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6f33db8"/>
        <function-ref name="stop" scoped="" ref="0xb6f32048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6f2d4d8" loc="47:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6f2d4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6f2db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6f37d48" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6f37d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6f37f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xb6f24010" loc="29:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xb6f24010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6f24760"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6f24c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6f249d8"/>
        <function-ref name="overflow" scoped="" ref="0xb6f24ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6f2fbc8" loc="27:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6f2fbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6f2fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xb6f25390" loc="28:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xb6f25390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6f2a840"/>
        <function-ref name="fired" scoped="" ref="0xb6f2a010"/>
        <function-ref name="startAt" scoped="" ref="0xb6f2a500"/>
        <function-ref name="isRunning" scoped="" ref="0xb6f2a288"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6f2aab8"/>
        <function-ref name="start" scoped="" ref="0xb6f25ae0"/>
        <function-ref name="stop" scoped="" ref="0xb6f25d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6e9e0c0" loc="61:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6e9e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6e9d5c8"/>
        <function-ref name="fired" scoped="" ref="0xb6e9ed28"/>
        <function-ref name="startAt" scoped="" ref="0xb6e9d288"/>
        <function-ref name="isRunning" scoped="" ref="0xb6e9d010"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6e9d840"/>
        <function-ref name="start" scoped="" ref="0xb6e9e810"/>
        <function-ref name="stop" scoped="" ref="0xb6e9eab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6f21c78" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6f21c78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb74095d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb74095d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6f21e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6e9db70" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6e9db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6e9b308"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6e9b7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6e9b580"/>
        <function-ref name="overflow" scoped="" ref="0xb6e9ba70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xb6650640" loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6650640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6650818"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb66508f8"/>
        <function-ref name="getControlA" scoped="" ref="0xb66509d8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6650ab8"/>
        <function-ref name="setControlB" scoped="" ref="0xb6650b98"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6650c78"/>
        <function-ref name="getControlB" scoped="" ref="0xb6650d58"/>
        <function-ref name="setControlA" scoped="" ref="0xb6650e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb66567c8" loc="61:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb66567c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6655c78"/>
        <function-ref name="fired" scoped="" ref="0xb6655448"/>
        <function-ref name="startAt" scoped="" ref="0xb6655938"/>
        <function-ref name="isRunning" scoped="" ref="0xb66556c0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6655ef0"/>
        <function-ref name="start" scoped="" ref="0xb6656f18"/>
        <function-ref name="stop" scoped="" ref="0xb66551d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6656390" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6656390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6656568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6654258" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6654258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb66549a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6654e98"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6654c20"/>
        <function-ref name="overflow" scoped="" ref="0xb6652130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xb664da50" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb664da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb664dc28"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb664dd08"/>
        <function-ref name="controlABusy" scoped="" ref="0xb664dde8"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb664dec8"/>
        <function-ref name="countBusy" scoped="" ref="0xb664c010"/>
        <function-ref name="compareABusy" scoped="" ref="0xb664c0f0"/>
        <function-ref name="getAssr" scoped="" ref="0xb664c1d0"/>
        <function-ref name="setAssr" scoped="" ref="0xb664c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xb664f050" loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb664f050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb664d5a8"/>
        <function-ref name="fired" scoped="" ref="0xb664fbb0"/>
        <function-ref name="get" scoped="" ref="0xb664f698"/>
        <function-ref name="reset" scoped="" ref="0xb664fe28"/>
        <function-ref name="isOn" scoped="" ref="0xb664d820"/>
        <function-ref name="set" scoped="" ref="0xb664f910"/>
        <function-ref name="start" scoped="" ref="0xb664d0b8"/>
        <function-ref name="stop" scoped="" ref="0xb664d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6652420" loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6652420"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6651ee0"/>
        <function-ref name="test" scoped="" ref="0xb66519f0"/>
        <function-ref name="get" scoped="" ref="0xb6652a68"/>
        <function-ref name="setScale" scoped="" ref="0xb6650170"/>
        <function-ref name="getScale" scoped="" ref="0xb6650410"/>
        <function-ref name="reset" scoped="" ref="0xb6651288"/>
        <function-ref name="overflow" scoped="" ref="0xb6651010"/>
        <function-ref name="isOn" scoped="" ref="0xb6651c68"/>
        <function-ref name="set" scoped="" ref="0xb6652ce0"/>
        <function-ref name="start" scoped="" ref="0xb6651500"/>
        <function-ref name="stop" scoped="" ref="0xb6651778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6edd408" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6edd408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6edd5e0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6edd6c0"/>
        <function-ref name="getControlA" scoped="" ref="0xb6edd7a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6edd880"/>
        <function-ref name="setControlB" scoped="" ref="0xb6edd960"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6edda40"/>
        <function-ref name="getControlB" scoped="" ref="0xb6eddb20"/>
        <function-ref name="setControlA" scoped="" ref="0xb6eddc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb6edaad0" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb6edaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb6edaca8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb6edad88"/>
        <function-ref name="controlABusy" scoped="" ref="0xb6edae68"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb6ed9010"/>
        <function-ref name="countBusy" scoped="" ref="0xb6ed90f0"/>
        <function-ref name="compareABusy" scoped="" ref="0xb6ed91d0"/>
        <function-ref name="getAssr" scoped="" ref="0xb6ed92b0"/>
        <function-ref name="setAssr" scoped="" ref="0xb6ed9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6eddf28" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6eddf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6eda500"/>
        <function-ref name="fired" scoped="" ref="0xb6edca98"/>
        <function-ref name="get" scoped="" ref="0xb6edc580"/>
        <function-ref name="reset" scoped="" ref="0xb6edcd10"/>
        <function-ref name="isOn" scoped="" ref="0xb6eda778"/>
        <function-ref name="set" scoped="" ref="0xb6edc7f8"/>
        <function-ref name="start" scoped="" ref="0xb6eda010"/>
        <function-ref name="stop" scoped="" ref="0xb6eda288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6edf128" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6edf128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6edeb80"/>
        <function-ref name="test" scoped="" ref="0xb6ede690"/>
        <function-ref name="get" scoped="" ref="0xb6edf770"/>
        <function-ref name="setScale" scoped="" ref="0xb6ededf8"/>
        <function-ref name="getScale" scoped="" ref="0xb6edd0b8"/>
        <function-ref name="reset" scoped="" ref="0xb6edff00"/>
        <function-ref name="overflow" scoped="" ref="0xb6edfc88"/>
        <function-ref name="isOn" scoped="" ref="0xb6ede908"/>
        <function-ref name="set" scoped="" ref="0xb6edf9e8"/>
        <function-ref name="start" scoped="" ref="0xb6ede1a0"/>
        <function-ref name="stop" scoped="" ref="0xb6ede418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6ed2398" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6ed2398"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6ed2570"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6ed2650"/>
        <function-ref name="getControlA" scoped="" ref="0xb6ed2730"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6ed2810"/>
        <function-ref name="setControlB" scoped="" ref="0xb6ed28f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6ed29d0"/>
        <function-ref name="getControlB" scoped="" ref="0xb6ed2ab0"/>
        <function-ref name="setControlA" scoped="" ref="0xb6ed2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xb6ed0958" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb6ed0958"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb6ed0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb6ed0db8" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb6ed0db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb6ecf010"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb6ecf0f0"/>
        <function-ref name="controlABusy" scoped="" ref="0xb6ecf1d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb6ecf2b0"/>
        <function-ref name="countBusy" scoped="" ref="0xb6ecf390"/>
        <function-ref name="compareABusy" scoped="" ref="0xb6ecf470"/>
        <function-ref name="getAssr" scoped="" ref="0xb6ecf550"/>
        <function-ref name="setAssr" scoped="" ref="0xb6ecf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6ed2eb8" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6ed2eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6ed0428"/>
        <function-ref name="fired" scoped="" ref="0xb6ed1a38"/>
        <function-ref name="get" scoped="" ref="0xb6ed1520"/>
        <function-ref name="reset" scoped="" ref="0xb6ed1cb0"/>
        <function-ref name="isOn" scoped="" ref="0xb6ed06a0"/>
        <function-ref name="set" scoped="" ref="0xb6ed1798"/>
        <function-ref name="start" scoped="" ref="0xb6ed1f28"/>
        <function-ref name="stop" scoped="" ref="0xb6ed01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6ed5098" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6ed5098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6ed4af0"/>
        <function-ref name="test" scoped="" ref="0xb6ed4600"/>
        <function-ref name="get" scoped="" ref="0xb6ed56e0"/>
        <function-ref name="setScale" scoped="" ref="0xb6ed4d68"/>
        <function-ref name="getScale" scoped="" ref="0xb6ed2048"/>
        <function-ref name="reset" scoped="" ref="0xb6ed5e70"/>
        <function-ref name="overflow" scoped="" ref="0xb6ed5bf8"/>
        <function-ref name="isOn" scoped="" ref="0xb6ed4878"/>
        <function-ref name="set" scoped="" ref="0xb6ed5958"/>
        <function-ref name="start" scoped="" ref="0xb6ed4110"/>
        <function-ref name="stop" scoped="" ref="0xb6ed4388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xb6e81bd0" loc="74:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xb6e81bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6e81da8"/>
        <function-ref name="runTask" scoped="" ref="0xb6e81e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb6e82248" loc="49:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6e82248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6e81708"/>
        <function-ref name="fired" scoped="" ref="0xb6e82eb0"/>
        <function-ref name="startAt" scoped="" ref="0xb6e813c8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6e81150"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6e81980"/>
        <function-ref name="start" scoped="" ref="0xb6e82998"/>
        <function-ref name="stop" scoped="" ref="0xb6e82c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6f2cf08" loc="48:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6f2cf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6e84a18"/>
        <function-ref name="fired" scoped="" ref="0xb6e99cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6e843d8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6e84180"/>
        <function-ref name="getdt" scoped="" ref="0xb6e84ec8"/>
        <function-ref name="gett0" scoped="" ref="0xb6e84c70"/>
        <function-ref name="isRunning" scoped="" ref="0xb6e99f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6e99558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6e846f8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6e997d8"/>
        <function-ref name="stop" scoped="" ref="0xb6e99a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xb6e54560" loc="71:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xb6e54560"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6e54738"/>
        <function-ref name="runTask" scoped="" ref="0xb6e54818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xb6e56338" loc="49:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xb6e56338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6e55e38"/>
        <function-ref name="fired" scoped="" ref="0xb6e550f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6e557f8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6e555a0"/>
        <function-ref name="getdt" scoped="" ref="0xb6e54310"/>
        <function-ref name="gett0" scoped="" ref="0xb6e540b8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6e55348"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6e56960"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6e55b18"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6e56be0"/>
        <function-ref name="stop" scoped="" ref="0xb6e56e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6e7ef00" loc="48:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6e7ef00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6e58b40"/>
        <function-ref name="fired" scoped="" ref="0xb6e59ce0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6e584e0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6e58278"/>
        <function-ref name="getdt" scoped="" ref="0xb6e56048"/>
        <function-ref name="gett0" scoped="" ref="0xb6e58da8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6e58010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6e59558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6e58810"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6e597e8"/>
        <function-ref name="stop" scoped="" ref="0xb6e59a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6e51a88" loc="48:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6e51a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6e500f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb6e50448" loc="49:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6e50448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6e50b98"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6e4b0a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6e50e10"/>
        <function-ref name="overflow" scoped="" ref="0xb6e4b320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6e48890" loc="41:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6e48890"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6e48a68"/>
        <function-ref name="stopDone" scoped="" ref="0xb6e48b48"/>
        <function-ref name="start" scoped="" ref="0xb6e48c28"/>
        <function-ref name="stop" scoped="" ref="0xb6e48d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6e40908" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6e40908"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6e40ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6e40c60" loc="48:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6e40c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e40e38"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6e40f18"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e42010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e420f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6e421d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6e45178" loc="43:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6e45178"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e45350"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e45430"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e45510"/>
        <function-ref name="cancel" scoped="" ref="0xb6e455f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e456d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6e441f8" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6e441f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e443d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6e3ce58" loc="52:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6e3ce58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6e3f050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6e3f130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6e3f210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6e3f2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6e45b38" loc="44:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6e45b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e45d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6e41040" loc="51:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e41040"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6e41218"/>
        <function-ref name="noAck" scoped="" ref="0xb6e412f8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6e413d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6e377a0" loc="53:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6e377a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6e37978"/>
        <function-ref name="setRetries" scoped="" ref="0xb6e37a58"/>
        <function-ref name="getRetries" scoped="" ref="0xb6e37b38"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6e37c18"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6e37cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6e42368" loc="49:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6e42368"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6e42540"/>
        <function-ref name="source" scoped="" ref="0xb6e42620"/>
        <function-ref name="address" scoped="" ref="0xb6e42700"/>
        <function-ref name="destination" scoped="" ref="0xb6e427e0"/>
        <function-ref name="setSource" scoped="" ref="0xb6e428c0"/>
        <function-ref name="setDestination" scoped="" ref="0xb6e429a0"/>
        <function-ref name="type" scoped="" ref="0xb6e42a80"/>
        <function-ref name="setType" scoped="" ref="0xb6e42b60"/>
        <function-ref name="isForMe" scoped="" ref="0xb6e42c40"/>
        <function-ref name="setGroup" scoped="" ref="0xb6e42d20"/>
        <function-ref name="localGroup" scoped="" ref="0xb6e42e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6e341a8" loc="54:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6e341a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6e34380"/>
        <function-ref name="setChannel" scoped="" ref="0xb6e34460"/>
        <function-ref name="getChannel" scoped="" ref="0xb6e34540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0xb6e31c68" loc="56:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb6e31c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6e3b7a0"/>
        <function-ref name="clear" scoped="" ref="0xb6e3bb50"/>
        <function-ref name="isValid" scoped="" ref="0xb6e3b3f0"/>
        <function-ref name="set" scoped="" ref="0xb6e3bf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6e2f650" loc="57:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6e2f650"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6e2e1f8"/>
        <function-ref name="clear" scoped="" ref="0xb6e2e5a8"/>
        <function-ref name="isValid" scoped="" ref="0xb6e2fe20"/>
        <function-ref name="set" scoped="" ref="0xb6e2e958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6e2d3e8" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6e2d3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6e2d5c0"/>
        <function-ref name="stopDone" scoped="" ref="0xb6e2d6a0"/>
        <function-ref name="start" scoped="" ref="0xb6e2d780"/>
        <function-ref name="stop" scoped="" ref="0xb6e2d860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6e22b60" loc="66:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6e22b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e1d780"/>
        <function-ref name="get" scoped="" ref="0xb6e1d4c0"/>
        <function-ref name="isSet" scoped="" ref="0xb6e1d200"/>
        <function-ref name="set" scoped="" ref="0xb6e1da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6e18748" loc="71:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6e18748"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6e17260"/>
        <function-ref name="clear" scoped="" ref="0xb6e17610"/>
        <function-ref name="isValid" scoped="" ref="0xb6e18e98"/>
        <function-ref name="set" scoped="" ref="0xb6e179c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6e284b0" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6e284b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6e28688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6e27600" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6e27600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e277d8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6e278b8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e27998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e27a78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6e27b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6e2dcc0" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6e2dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e2de98"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e2a010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e2a0f0"/>
        <function-ref name="cancel" scoped="" ref="0xb6e2a1d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e2a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6e2adb0" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6e2adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e28010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6e237f0" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6e237f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e223d8"/>
        <function-ref name="get" scoped="" ref="0xb6e22118"/>
        <function-ref name="isSet" scoped="" ref="0xb6e23e38"/>
        <function-ref name="set" scoped="" ref="0xb6e22698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6e25010" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6e25010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6e251e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6e252c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6e253a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6e25488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6e2a718" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6e2a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e2a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb6e1cd78" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6e1cd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6e19898"/>
        <function-ref name="clear" scoped="" ref="0xb6e19c48"/>
        <function-ref name="isValid" scoped="" ref="0xb6e194e8"/>
        <function-ref name="set" scoped="" ref="0xb6e18010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6e1c1e0" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6e1c1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6e1c828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6e20410" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6e20410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e23010"/>
        <function-ref name="get" scoped="" ref="0xb6e20d18"/>
        <function-ref name="isSet" scoped="" ref="0xb6e20a58"/>
        <function-ref name="set" scoped="" ref="0xb6e232d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6e26a10" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e26a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6e26be8"/>
        <function-ref name="noAck" scoped="" ref="0xb6e26cc8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6e26da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb6e28bb0" loc="53:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb6e28bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e28d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6e25630" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6e25630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6e25808"/>
        <function-ref name="setRetries" scoped="" ref="0xb6e258e8"/>
        <function-ref name="getRetries" scoped="" ref="0xb6e259c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6e25aa8"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6e25b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6e27cf0" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6e27cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6e27ec8"/>
        <function-ref name="source" scoped="" ref="0xb6e26010"/>
        <function-ref name="address" scoped="" ref="0xb6e260f0"/>
        <function-ref name="destination" scoped="" ref="0xb6e261d0"/>
        <function-ref name="setSource" scoped="" ref="0xb6e262b0"/>
        <function-ref name="setDestination" scoped="" ref="0xb6e26390"/>
        <function-ref name="type" scoped="" ref="0xb6e26470"/>
        <function-ref name="setType" scoped="" ref="0xb6e26550"/>
        <function-ref name="isForMe" scoped="" ref="0xb6e26630"/>
        <function-ref name="setGroup" scoped="" ref="0xb6e26710"/>
        <function-ref name="localGroup" scoped="" ref="0xb6e267f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6e25d48" loc="62:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6e25d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6e24010"/>
        <function-ref name="setChannel" scoped="" ref="0xb6e240f0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6e241d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6e1acc8" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6e1acc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6e1aea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb6e272a8" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb6e272a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e27480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6e15390" loc="41:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6e15390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6e15568"/>
        <function-ref name="stopDone" scoped="" ref="0xb6e15648"/>
        <function-ref name="start" scoped="" ref="0xb6e15728"/>
        <function-ref name="stop" scoped="" ref="0xb6e15808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6dfb8d8" loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6dfb8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6dfa4b8"/>
        <function-ref name="get" scoped="" ref="0xb6dfa1f8"/>
        <function-ref name="isSet" scoped="" ref="0xb6dfbf20"/>
        <function-ref name="set" scoped="" ref="0xb6dfa778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0xb6e0eac8" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0xb6e0eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6e0eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0xb6e0d258" loc="72:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0xb6e0d258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6e0d4b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6e0d590"/>
        <function-ref name="request" scoped="" ref="0xb6e0d670"/>
        <function-ref name="granted" scoped="" ref="0xb6e0d750"/>
        <function-ref name="isOwner" scoped="" ref="0xb6e0d830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6e113c0" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6e113c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6e11598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6e15c68" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6e15c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e15e40"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e15f20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e12018"/>
        <function-ref name="cancel" scoped="" ref="0xb6e120f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e121d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6e12cd8" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6e12cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e12eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6dff488" loc="74:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6dff488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb6dff660"/>
        <function-ref name="address" scoped="" ref="0xb6dff740"/>
        <function-ref name="destination" scoped="" ref="0xb6dff820"/>
        <function-ref name="setSource" scoped="" ref="0xb6dff900"/>
        <function-ref name="setDestination" scoped="" ref="0xb6dff9e0"/>
        <function-ref name="pan" scoped="" ref="0xb6dffac0"/>
        <function-ref name="setPan" scoped="" ref="0xb6dffba0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6dffc80"/>
        <function-ref name="localPan" scoped="" ref="0xb6dffd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0xb6e08010" loc="75:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0xb6e08010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e081e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6e082c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e083a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e08488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6e08568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6dfd568" loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6dfd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6dfb150"/>
        <function-ref name="get" scoped="" ref="0xb6dfde70"/>
        <function-ref name="isSet" scoped="" ref="0xb6dfdbb0"/>
        <function-ref name="set" scoped="" ref="0xb6dfb410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6e08d10" loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6e08d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6e08ee8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6e04010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6e040f0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6e041d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0xb6e0f298" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb6e0f298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e0f470"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6e0f550"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e0f630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e0f710"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6e0f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6e12640" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6e12640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e12818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb6df8bc8" loc="94:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6df8bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6df77e8"/>
        <function-ref name="clear" scoped="" ref="0xb6df7b98"/>
        <function-ref name="isValid" scoped="" ref="0xb6df7438"/>
        <function-ref name="set" scoped="" ref="0xb6df6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6df8030" loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6df8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6df8678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6dfe1a0" loc="88:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6dfe1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6dfed68"/>
        <function-ref name="get" scoped="" ref="0xb6dfeaa8"/>
        <function-ref name="isSet" scoped="" ref="0xb6dfe7e8"/>
        <function-ref name="set" scoped="" ref="0xb6dfd048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6e08788" loc="78:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e08788"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6e08960"/>
        <function-ref name="noAck" scoped="" ref="0xb6e08a40"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6e08b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb6e09ea8" loc="68:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb6e09ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e0e0c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6e0e1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e0e280"/>
        <function-ref name="cancel" scoped="" ref="0xb6e0e360"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e0e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb6e11ac0" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb6e11ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e11c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6e04378" loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6e04378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6e04550"/>
        <function-ref name="setRetries" scoped="" ref="0xb6e04630"/>
        <function-ref name="getRetries" scoped="" ref="0xb6e04710"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6e047f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6e048d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6e04a90" loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6e04a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6e04c68"/>
        <function-ref name="setChannel" scoped="" ref="0xb6e04d48"/>
        <function-ref name="getChannel" scoped="" ref="0xb6e04e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6e10568" loc="63:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6e10568"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6e10740"/>
        <function-ref name="source" scoped="" ref="0xb6e10820"/>
        <function-ref name="address" scoped="" ref="0xb6e10900"/>
        <function-ref name="destination" scoped="" ref="0xb6e109e0"/>
        <function-ref name="setSource" scoped="" ref="0xb6e10ac0"/>
        <function-ref name="setDestination" scoped="" ref="0xb6e10ba0"/>
        <function-ref name="type" scoped="" ref="0xb6e10c80"/>
        <function-ref name="setType" scoped="" ref="0xb6e10d60"/>
        <function-ref name="isForMe" scoped="" ref="0xb6e10e40"/>
        <function-ref name="setGroup" scoped="" ref="0xb6e10f20"/>
        <function-ref name="localGroup" scoped="" ref="0xb6e0f018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6df6748" loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6df6748"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6df4260"/>
        <function-ref name="clear" scoped="" ref="0xb6df4610"/>
        <function-ref name="isValid" scoped="" ref="0xb6df6e98"/>
        <function-ref name="set" scoped="" ref="0xb6df49c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb6e0e678" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb6e0e678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e0e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6dfab28" loc="91:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6dfab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6dfad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb6e101f8" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb6e101f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e103d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0xb6de9ee0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="RF230RadioC.TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6de9ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6df20e0"/>
        <function-ref name="suspend" scoped="" ref="0xb6df21c0"/>
        <function-ref name="resume" scoped="" ref="0xb6df22a0"/>
        <function-ref name="run" scoped="" ref="0xb6df2380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0xb6de2a20" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0xb6de2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6de2bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0xb6dd84c8" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb6dd84c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0xb6dd86a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0xb6dcea08" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb6dcea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6dcebe0"/>
        <function-ref name="checkFrame" scoped="" ref="0xb6dcecc0"/>
        <function-ref name="source" scoped="" ref="0xb6dceda0"/>
        <function-ref name="destination" scoped="" ref="0xb6dcee80"/>
        <function-ref name="setSource" scoped="" ref="0xb6de2010"/>
        <function-ref name="setDestination" scoped="" ref="0xb6de20f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb6de21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0xb6dd3ee8" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0xb6dd3ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0xb6de50e0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0xb6de51c0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0xb6de52a0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0xb6de5380"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0xb6de5460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6dba830" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6dba830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6dbaa08"/>
        <function-ref name="wait" scoped="" ref="0xb6dbaae8"/>
        <function-ref name="cancel" scoped="" ref="0xb6dbabc8"/>
        <function-ref name="isFree" scoped="" ref="0xb6dbaca8"/>
        <function-ref name="getNow" scoped="" ref="0xb6dbad88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0xb6db6a28" loc="62:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0xb6db6a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6db6c00"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6db6ce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6db6dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6db6ea0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6dbc010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6dbc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb6dbc480" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6dbc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6db9010"/>
        <function-ref name="clear" scoped="" ref="0xb6db93c0"/>
        <function-ref name="isValid" scoped="" ref="0xb6dbcc50"/>
        <function-ref name="set" scoped="" ref="0xb6db9770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0xb6de3e98" loc="43:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0xb6de3e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6de60c0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6de61a0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6de6280"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb6de6360"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb6de6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0xb6dd97a0" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0xb6dd97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0xb6dd9978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0xb6ddd0f0" loc="44:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb6ddd0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb6ddd2c8"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb6ddd3a8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6ddd488"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb6ddd568"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb6ddd648"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb6ddd728"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6ddd808"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6ddd8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xb6dbd3a8" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6dbd3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6dbd580"/>
        <function-ref name="getDSN" scoped="" ref="0xb6dbd660"/>
        <function-ref name="setFCF" scoped="" ref="0xb6dbd740"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6dbd820"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6dbd900"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6dbd9e0"/>
        <function-ref name="setDSN" scoped="" ref="0xb6dbdac0"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6dbdba0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6dbdc80"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6dbdd60"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6dbde40"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6dbdf20"/>
        <function-ref name="localAddr" scoped="" ref="0xb6dd2018"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6dd2178"/>
        <function-ref name="localPan" scoped="" ref="0xb6dd2258"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6dd2338"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6dd2418"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6dd24f8"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6dd25d8"/>
        <function-ref name="isForMe" scoped="" ref="0xb6dd26b8"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6dd2798"/>
        <function-ref name="getFCF" scoped="" ref="0xb6dd2878"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6dd2958"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6dd2a38"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6dd2b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0xb6dda840" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb6dda840"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb6ddaa18"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb6ddaaf8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb6ddabd8"/>
        <function-ref name="getSender" scoped="" ref="0xb6ddacb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0xb6dd6568" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb6dd6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb6dd6740"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb6dd6820"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb6dd6900"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb6dd69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb6d82ee0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6d82ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6d810e0"/>
        <function-ref name="wait" scoped="" ref="0xb6d811c0"/>
        <function-ref name="cancel" scoped="" ref="0xb6d812a0"/>
        <function-ref name="isFree" scoped="" ref="0xb6d81380"/>
        <function-ref name="getNow" scoped="" ref="0xb6d81460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb6d81d68" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6d81d68"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb74097d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb74097d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb721e3a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6d68258"/>
        <function-ref name="fired" scoped="" ref="0xb6d69a00"/>
        <function-ref name="startAt" scoped="" ref="0xb6d69ef0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6d69c78"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6d684d0"/>
        <function-ref name="start" scoped="" ref="0xb6d694e8"/>
        <function-ref name="stop" scoped="" ref="0xb6d69788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6d815d0" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6d815d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6d817a8"/>
        <function-ref name="suspend" scoped="" ref="0xb6d81888"/>
        <function-ref name="resume" scoped="" ref="0xb6d81968"/>
        <function-ref name="run" scoped="" ref="0xb6d81a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb6603608" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6603608"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb66037f0"/>
        <function-ref name="wait" scoped="" ref="0xb66038d0"/>
        <function-ref name="cancel" scoped="" ref="0xb66039b0"/>
        <function-ref name="isFree" scoped="" ref="0xb6603a90"/>
        <function-ref name="getNow" scoped="" ref="0xb6603b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb6603e00" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6603e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb721e3a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6601350"/>
        <function-ref name="fired" scoped="" ref="0xb6602a88"/>
        <function-ref name="startAt" scoped="" ref="0xb6601010"/>
        <function-ref name="isRunning" scoped="" ref="0xb6602d00"/>
        <function-ref name="getAlarm" scoped="" ref="0xb66015c8"/>
        <function-ref name="start" scoped="" ref="0xb6602570"/>
        <function-ref name="stop" scoped="" ref="0xb6602810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb66017d8" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb66017d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb66019b0"/>
        <function-ref name="suspend" scoped="" ref="0xb6601a90"/>
        <function-ref name="resume" scoped="" ref="0xb6601b70"/>
        <function-ref name="run" scoped="" ref="0xb6601c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6d007a8" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6d007a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6d00980"/>
        <function-ref name="cancel" scoped="" ref="0xb6d00a60"/>
        <function-ref name="sendDone" scoped="" ref="0xb6d00b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6d00ca0" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6d00ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d00e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6d01468" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6d01468"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6d01650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6d03d98" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6d03d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6d02010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6d020f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6d021d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6d022b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6d02390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6d02568" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6d02568"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6d02750"/>
        <function-ref name="getPayload" scoped="" ref="0xb6d02830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6d02910"/>
        <function-ref name="cancel" scoped="" ref="0xb6d029f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6d02ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6d010a8" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6d010a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d01290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6d00010" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6d00010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6d001e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6d002c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6d003a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6d00488"/>
        <function-ref name="headerLength" scoped="" ref="0xb6d00568"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6d00648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6cff010" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6cff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6cff1e8"/>
        <function-ref name="checkFrame" scoped="" ref="0xb6cff2c8"/>
        <function-ref name="source" scoped="" ref="0xb6cff3a8"/>
        <function-ref name="destination" scoped="" ref="0xb6cff488"/>
        <function-ref name="setSource" scoped="" ref="0xb6cff568"/>
        <function-ref name="setDestination" scoped="" ref="0xb6cff648"/>
        <function-ref name="setGroup" scoped="" ref="0xb6cff728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6d02ca8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6d02ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d02e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb6d01848" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb6d01848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d01a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6d031c0" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6d031c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6d03398"/>
        <function-ref name="source" scoped="" ref="0xb6d03478"/>
        <function-ref name="address" scoped="" ref="0xb6d03558"/>
        <function-ref name="destination" scoped="" ref="0xb6d03638"/>
        <function-ref name="setSource" scoped="" ref="0xb6d03718"/>
        <function-ref name="setDestination" scoped="" ref="0xb6d037f8"/>
        <function-ref name="type" scoped="" ref="0xb6d038d8"/>
        <function-ref name="setType" scoped="" ref="0xb6d039b8"/>
        <function-ref name="isForMe" scoped="" ref="0xb6d03a98"/>
        <function-ref name="setGroup" scoped="" ref="0xb6d03b78"/>
        <function-ref name="localGroup" scoped="" ref="0xb6d03c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb6d01c28" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb6d01c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6d01e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb65ef330" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb65ef330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65ef508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb65f0d58" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb65f0d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb65ef010"/>
        <function-ref name="cancel" scoped="" ref="0xb65ef0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb65ef1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb65f1a68" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb65f1a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb65f1c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb65f33f0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb65f33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65f35c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65f36a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb65f3788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65f3868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb65f3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb65f3b20" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb65f3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb65f3d08"/>
        <function-ref name="getPayload" scoped="" ref="0xb65f3de8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65f3ec8"/>
        <function-ref name="cancel" scoped="" ref="0xb65f1010"/>
        <function-ref name="sendDone" scoped="" ref="0xb65f10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb65f16a8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb65f16a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65f1890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb65f4010" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb65f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65f41e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65f42c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65f43a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb65f4488"/>
        <function-ref name="headerLength" scoped="" ref="0xb65f4568"/>
        <function-ref name="metadataLength" scoped="" ref="0xb65f4648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb65ef668" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb65ef668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb65ef8c0"/>
        <function-ref name="checkFrame" scoped="" ref="0xb65ef9a0"/>
        <function-ref name="source" scoped="" ref="0xb65efa80"/>
        <function-ref name="destination" scoped="" ref="0xb65efb60"/>
        <function-ref name="setSource" scoped="" ref="0xb65efc40"/>
        <function-ref name="setDestination" scoped="" ref="0xb65efd20"/>
        <function-ref name="setGroup" scoped="" ref="0xb65efe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb65ee010" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb65ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb65ee1e8"/>
        <function-ref name="changed" scoped="" ref="0xb65ee2c8"/>
        <function-ref name="amGroup" scoped="" ref="0xb65ee3a8"/>
        <function-ref name="setAddress" scoped="" ref="0xb65ee488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb65f05c0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb65f05c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65f0798"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65f0878"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65f0958"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb65f0a38"/>
        <function-ref name="headerLength" scoped="" ref="0xb65f0b18"/>
        <function-ref name="metadataLength" scoped="" ref="0xb65f0bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb65f12c8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb65f12c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65f14b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb65f1e48" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb65f1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65f0050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb65f4788" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb65f4788"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb65f4960"/>
        <function-ref name="source" scoped="" ref="0xb65f4a40"/>
        <function-ref name="address" scoped="" ref="0xb65f4b20"/>
        <function-ref name="destination" scoped="" ref="0xb65f4c00"/>
        <function-ref name="setSource" scoped="" ref="0xb65f4ce0"/>
        <function-ref name="setDestination" scoped="" ref="0xb65f4dc0"/>
        <function-ref name="type" scoped="" ref="0xb65f4ea0"/>
        <function-ref name="setType" scoped="" ref="0xb65f3010"/>
        <function-ref name="isForMe" scoped="" ref="0xb65f30f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb65f31d0"/>
        <function-ref name="localGroup" scoped="" ref="0xb65f32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb65f0248" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb65f0248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65f0430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xb6d13e48" loc="54:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6d13e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb6d10050"/>
        <function-ref name="changed" scoped="" ref="0xb6d10130"/>
        <function-ref name="amGroup" scoped="" ref="0xb6d10210"/>
        <function-ref name="setAddress" scoped="" ref="0xb6d102f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6cfb1a0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6cfb1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6cfb378"/>
        <function-ref name="cancel" scoped="" ref="0xb6cfb458"/>
        <function-ref name="sendDone" scoped="" ref="0xb6cfb538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb6cfb678" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6cfb678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6cfb850"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6cfb930"/>
        <function-ref name="request" scoped="" ref="0xb6cfba10"/>
        <function-ref name="granted" scoped="" ref="0xb6cfbaf0"/>
        <function-ref name="isOwner" scoped="" ref="0xb6cfbbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6cf1c60" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6cf1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6cf1e38"/>
        <function-ref name="cancel" scoped="" ref="0xb6cf1f18"/>
        <function-ref name="sendDone" scoped="" ref="0xb6cfb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6cb95a8" loc="86:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb6cb95a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6cb9790"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6cb9870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6cb9e60" loc="89:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6cb9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6cb8070"/>
        <function-ref name="configure" scoped="" ref="0xb6cb8150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6cefe18" loc="85:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6cefe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6cb9050"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6cb9130"/>
        <function-ref name="request" scoped="" ref="0xb6cb9210"/>
        <function-ref name="granted" scoped="" ref="0xb6cb92f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb6cb93d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6cb99b0" loc="87:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6cb99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6cb9b88"/>
        <function-ref name="userId" scoped="" ref="0xb6cb9c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb65b86a0" loc="44:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb65b86a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb65b8878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb65b89d8" loc="45:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb65b89d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb65b8bb0"/>
        <function-ref name="isEmpty" scoped="" ref="0xb65b8c90"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb65b8d70"/>
        <function-ref name="dequeue" scoped="" ref="0xb65b8e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb65b51e8" loc="52:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb65b51e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb65b53d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb65b54b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb65b5ab0" loc="56:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb65b5ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb65b5c98"/>
        <function-ref name="configure" scoped="" ref="0xb65b5d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb65b5ed8" loc="57:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb65b5ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb65b40c0"/>
        <function-ref name="isEmpty" scoped="" ref="0xb65b41a0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb65b4280"/>
        <function-ref name="dequeue" scoped="" ref="0xb65b4360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb65b6a50" loc="51:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb65b6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb65b6c38"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb65b6d18"/>
        <function-ref name="request" scoped="" ref="0xb65b6df8"/>
        <function-ref name="granted" scoped="" ref="0xb65b6ed8"/>
        <function-ref name="isOwner" scoped="" ref="0xb65b5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb65b55f0" loc="53:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb65b55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb65b57c8"/>
        <function-ref name="userId" scoped="" ref="0xb65b58a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb65b44e0" loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb65b44e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb65b46b8"/>
        <function-ref name="runTask" scoped="" ref="0xb65b4798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6c99250" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6c99250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c99428"/>
        <function-ref name="cancel" scoped="" ref="0xb6c99508"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c995e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6c99748" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6c99748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c99920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6cb6ce8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6cb6ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6cb6ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6cb7c68" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6cb7c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cb7e40"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6cb7f20"/>
        <function-ref name="getPayload" scoped="" ref="0xb6cb6018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6cb60f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6cb61d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0xb6c9aa30" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6c9aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c9ac08"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c9ace8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c9adc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c9aea8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c99010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c990f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xb6c9b070" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6c9b070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6c9b248"/>
        <function-ref name="getDSN" scoped="" ref="0xb6c9b328"/>
        <function-ref name="setFCF" scoped="" ref="0xb6c9b408"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6c9b4e8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6c9b5c8"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6c9b6a8"/>
        <function-ref name="setDSN" scoped="" ref="0xb6c9b788"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6c9b868"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6c9b948"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6c9ba28"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6c9bb08"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6c9bbe8"/>
        <function-ref name="localAddr" scoped="" ref="0xb6c9bcc8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6c9be28"/>
        <function-ref name="localPan" scoped="" ref="0xb6c9bf08"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6c9a010"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6c9a0f0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6c9a1d0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6c9a2b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6c9a390"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6c9a470"/>
        <function-ref name="getFCF" scoped="" ref="0xb6c9a550"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6c9a630"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6c9a710"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6c9a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb6cb6318" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb6cb6318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6cb64f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6cb65d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6cb66b0"/>
        <function-ref name="cancel" scoped="" ref="0xb6cb6790"/>
        <function-ref name="sendDone" scoped="" ref="0xb6cb6870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb6cb69d0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb6cb69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6cb6ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6c75050" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6c75050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c75228"/>
        <function-ref name="cancel" scoped="" ref="0xb6c75308"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c753e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6c75548" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6c75548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c75720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6c94880" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6c94880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c94a58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c94b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c94c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c94cf8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c94dd8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c94eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0xb6c77528" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0xb6c77528"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c77700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6c75880" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6c75880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c75a58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c75b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c75c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c75cf8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c75dd8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c75eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0xb6c77030" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0xb6c77030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c77208"/>
        <function-ref name="cancel" scoped="" ref="0xb6c772e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c773c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb6c94050" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb6c94050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c94228"/>
        <function-ref name="cancel" scoped="" ref="0xb6c94308"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c943e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb6c94548" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb6c94548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c94720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0xb6c77860" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0xb6c77860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c77a38"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c77b18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c77bf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c77cd8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c77db8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c77e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6c1bc70" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6c1bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c1be48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6c1df10" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6c1df10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb6c1c108"/>
        <function-ref name="address" scoped="" ref="0xb6c1c1e8"/>
        <function-ref name="destination" scoped="" ref="0xb6c1c2c8"/>
        <function-ref name="setSource" scoped="" ref="0xb6c1c3a8"/>
        <function-ref name="setDestination" scoped="" ref="0xb6c1c488"/>
        <function-ref name="pan" scoped="" ref="0xb6c1c568"/>
        <function-ref name="setPan" scoped="" ref="0xb6c1c648"/>
        <function-ref name="isForMe" scoped="" ref="0xb6c1c728"/>
        <function-ref name="localPan" scoped="" ref="0xb6c1c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6c1c948" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6c1c948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c1cb20"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c1cc00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c1cce0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c1cdc0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c1cea0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c1b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xb6c1e530" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6c1e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6c1e708"/>
        <function-ref name="getDSN" scoped="" ref="0xb6c1e7e8"/>
        <function-ref name="setFCF" scoped="" ref="0xb6c1e8c8"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6c1e9a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6c1ea88"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6c1eb68"/>
        <function-ref name="setDSN" scoped="" ref="0xb6c1ec48"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6c1ed28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6c1ee08"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6c1eee8"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6c1d010"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6c1d0f0"/>
        <function-ref name="localAddr" scoped="" ref="0xb6c1d1d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6c1d330"/>
        <function-ref name="localPan" scoped="" ref="0xb6c1d410"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6c1d4f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6c1d5d0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6c1d6b0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6c1d790"/>
        <function-ref name="isForMe" scoped="" ref="0xb6c1d870"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6c1d950"/>
        <function-ref name="getFCF" scoped="" ref="0xb6c1da30"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6c1db10"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6c1dbf0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6c1dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6c1b4d8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6c1b4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c1b6b0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c1b790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c1b870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c1b950"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c1ba30"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c1bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6c1b170" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6c1b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c1b348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6578010" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6578010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65781e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb657bd50" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb657bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb657bf28"/>
        <function-ref name="address" scoped="" ref="0xb657a018"/>
        <function-ref name="destination" scoped="" ref="0xb657a0f8"/>
        <function-ref name="setSource" scoped="" ref="0xb657a1d8"/>
        <function-ref name="setDestination" scoped="" ref="0xb657a2b8"/>
        <function-ref name="pan" scoped="" ref="0xb657a398"/>
        <function-ref name="setPan" scoped="" ref="0xb657a478"/>
        <function-ref name="isForMe" scoped="" ref="0xb657a558"/>
        <function-ref name="localPan" scoped="" ref="0xb657a638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb657a778" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb657a778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb657a950"/>
        <function-ref name="payloadLength" scoped="" ref="0xb657aa30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb657ab10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb657abf0"/>
        <function-ref name="headerLength" scoped="" ref="0xb657acd0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb657adb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xb657c340" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb657c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb657c518"/>
        <function-ref name="getDSN" scoped="" ref="0xb657c5f8"/>
        <function-ref name="setFCF" scoped="" ref="0xb657c6d8"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb657c7b8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb657c898"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb657c978"/>
        <function-ref name="setDSN" scoped="" ref="0xb657ca58"/>
        <function-ref name="createAckReply" scoped="" ref="0xb657cb38"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb657cc18"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb657ccf8"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb657cdd8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb657ceb8"/>
        <function-ref name="localAddr" scoped="" ref="0xb657b010"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb657b170"/>
        <function-ref name="localPan" scoped="" ref="0xb657b250"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb657b330"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb657b410"/>
        <function-ref name="setFramePending" scoped="" ref="0xb657b4f0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb657b5d0"/>
        <function-ref name="isForMe" scoped="" ref="0xb657b6b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb657b790"/>
        <function-ref name="getFCF" scoped="" ref="0xb657b870"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb657b950"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb657ba30"/>
        <function-ref name="getFramePending" scoped="" ref="0xb657bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb6579278" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6579278"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb6579450"/>
        <function-ref name="changed" scoped="" ref="0xb6579530"/>
        <function-ref name="amGroup" scoped="" ref="0xb6579610"/>
        <function-ref name="setAddress" scoped="" ref="0xb65796f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb657af10" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb657af10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6579108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6579850" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6579850"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6579a28"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6579b08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6579be8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6579cc8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6579da8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6579e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6c15678" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6c15678"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c15850"/>
        <function-ref name="cancel" scoped="" ref="0xb6c15930"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c15a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6c15b70" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6c15b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c15d48"/>
        <function-ref name="header" scoped="" ref="0xb6c15e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6c17d18" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6c17d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c17ef0"/>
        <function-ref name="cancel" scoped="" ref="0xb6c15010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c150f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6bdc010" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6bdc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb6bdc1e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb6bdc2c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb6bdc3a8"/>
        <function-ref name="getSender" scoped="" ref="0xb6bdc488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6c15230" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6c15230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c15408"/>
        <function-ref name="header" scoped="" ref="0xb6c154e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb654c3e0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb654c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb654c5b8"/>
        <function-ref name="cancel" scoped="" ref="0xb654c698"/>
        <function-ref name="sendDone" scoped="" ref="0xb654c778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb654c8d8" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb654c8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb654cab0"/>
        <function-ref name="header" scoped="" ref="0xb654cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0xb654b9a8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb654b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb654bb80"/>
        <function-ref name="clearAll" scoped="" ref="0xb654bc60"/>
        <function-ref name="get" scoped="" ref="0xb654bd40"/>
        <function-ref name="set" scoped="" ref="0xb654be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb654f790" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb654f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb654f968"/>
        <function-ref name="cancel" scoped="" ref="0xb654fa48"/>
        <function-ref name="sendDone" scoped="" ref="0xb654fb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0xb654b310" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb654b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb654b4e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb654b5c8"/>
        <function-ref name="getNode" scoped="" ref="0xb654b6a8"/>
        <function-ref name="evicted" scoped="" ref="0xb654b788"/>
        <function-ref name="getIndex" scoped="" ref="0xb654b868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb654fc68" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb654fc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb654fe40"/>
        <function-ref name="header" scoped="" ref="0xb654ff20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb654c078" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb654c078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb654c250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0xb654ccd0" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb654ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb654cea8"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb654b010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb654b0f0"/>
        <function-ref name="getSender" scoped="" ref="0xb654b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb6bf8010" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb6bf8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb6bf81e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb6bf82c8"/>
        <function-ref name="getNode" scoped="" ref="0xb6bf83a8"/>
        <function-ref name="evicted" scoped="" ref="0xb6bf8488"/>
        <function-ref name="getIndex" scoped="" ref="0xb6bf8568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb6bf5a38" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb6bf5a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6bf5c10"/>
        <function-ref name="clearAll" scoped="" ref="0xb6bf5cf0"/>
        <function-ref name="get" scoped="" ref="0xb6bf5dd0"/>
        <function-ref name="set" scoped="" ref="0xb6bf5eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb6bf5010" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb6bf5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb6bf51e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb6bf52c8"/>
        <function-ref name="getNode" scoped="" ref="0xb6bf53a8"/>
        <function-ref name="evicted" scoped="" ref="0xb6bf5488"/>
        <function-ref name="getIndex" scoped="" ref="0xb6bf5568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6bf8be0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6bf8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6bf8db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb654ae88" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb654ae88"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6549070"/>
        <function-ref name="clearAll" scoped="" ref="0xb6549150"/>
        <function-ref name="get" scoped="" ref="0xb6549230"/>
        <function-ref name="set" scoped="" ref="0xb6549310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6bd9e70" loc="85:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6bd9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6bd2070"/>
        <function-ref name="cancel" scoped="" ref="0xb6bd2150"/>
        <function-ref name="sendDone" scoped="" ref="0xb6bd2230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6bd2390" loc="86:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6bd2390"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6bd2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0xb6bd1a68" loc="93:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0xb6bd1a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6bd1c40"/>
        <function-ref name="noAck" scoped="" ref="0xb6bd1d20"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6bd1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6bda760" loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6bda760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6bda938"/>
        <function-ref name="cancel" scoped="" ref="0xb6bdaa18"/>
        <function-ref name="sendDone" scoped="" ref="0xb6bdaaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6bd96a8" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6bd96a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6bd9880"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6bd9960"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6bd9a40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6bd9b20"/>
        <function-ref name="headerLength" scoped="" ref="0xb6bd9c00"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6bd9ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6bd26c8" loc="87:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6bd26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6bd28a0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6bd2980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6bd2a60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6bd2b40"/>
        <function-ref name="headerLength" scoped="" ref="0xb6bd2c20"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6bd2d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0xb6bd1390" loc="92:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0xb6bd1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6bd1568"/>
        <function-ref name="setRetries" scoped="" ref="0xb6bd1648"/>
        <function-ref name="getRetries" scoped="" ref="0xb6bd1728"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6bd1808"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6bd18e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6bdac58" loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6bdac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6bdae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb6bd2e40" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6bd2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6bd1050"/>
        <function-ref name="noAck" scoped="" ref="0xb6bd1130"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6bd1210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6bd9010" loc="79:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6bd9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6bd91e8"/>
        <function-ref name="setRetries" scoped="" ref="0xb6bd92c8"/>
        <function-ref name="getRetries" scoped="" ref="0xb6bd93a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6bd9488"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6bd9568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6bce728" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6bce728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6bce900"/>
        <function-ref name="stopDone" scoped="" ref="0xb6bce9e0"/>
        <function-ref name="start" scoped="" ref="0xb6bceac0"/>
        <function-ref name="stop" scoped="" ref="0xb6bceba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6bc0938" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6bc0938"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6bc0b10"/>
        <function-ref name="cancel" scoped="" ref="0xb6bc0bf0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6bc0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6bc0e30" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6bc0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6bbf050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6bced00" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6bced00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6bceed8"/>
        <function-ref name="cancel" scoped="" ref="0xb6bcd010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6bcd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6bcd568" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6bcd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6bcd740"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6bcd820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6bcd900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6bcd9e0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6bcdac0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6bcdba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6bcdce0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6bcdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6bcdeb8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6bc0010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6bc00f0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6bc01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6bc0360" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6bc0360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6bc0538"/>
        <function-ref name="stopDone" scoped="" ref="0xb6bc0618"/>
        <function-ref name="start" scoped="" ref="0xb6bc06f8"/>
        <function-ref name="stop" scoped="" ref="0xb6bc07d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6bcd250" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6bcd250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6bcd428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6bbf1b0" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6bbf1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6bbf388"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6bbf468"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6bbf548"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6bbf628"/>
        <function-ref name="headerLength" scoped="" ref="0xb6bbf708"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6bbf7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb65358c0" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb65358c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6535a98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6535b78"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6535c58"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6535d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6bbcd20" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6bbcd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6bbcef8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6b7f010"/>
        <function-ref name="start" scoped="" ref="0xb6b7f0f0"/>
        <function-ref name="stop" scoped="" ref="0xb6b7f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb6b7e628" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6b7e628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6b7e800"/>
        <function-ref name="turnOn" scoped="" ref="0xb6b7e8e0"/>
        <function-ref name="setChannel" scoped="" ref="0xb6b7e9c0"/>
        <function-ref name="done" scoped="" ref="0xb6b7eaa0"/>
        <function-ref name="standby" scoped="" ref="0xb6b7eb80"/>
        <function-ref name="getChannel" scoped="" ref="0xb6b7ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6b7f330" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6b7f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b7f508"/>
        <function-ref name="cancel" scoped="" ref="0xb6b7f5e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b7f6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb6b7d310" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6b7d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b7d4e8"/>
        <function-ref name="header" scoped="" ref="0xb6b7d5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6b7f828" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6b7f828"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b7fa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb6b7eda0" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6b7eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b7d010"/>
        <function-ref name="ready" scoped="" ref="0xb6b7d0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b7d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6b7fb40" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6b7fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6b7fd18"/>
        <function-ref name="setChannel" scoped="" ref="0xb6b7fdf8"/>
        <function-ref name="getChannel" scoped="" ref="0xb6b7fed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6b7e070" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6b7e070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6b7e248"/>
        <function-ref name="suspend" scoped="" ref="0xb6b7e328"/>
        <function-ref name="resume" scoped="" ref="0xb6b7e408"/>
        <function-ref name="run" scoped="" ref="0xb6b7e4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6533c88" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6533c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6533e60"/>
        <function-ref name="stopDone" scoped="" ref="0xb6530010"/>
        <function-ref name="start" scoped="" ref="0xb65300f0"/>
        <function-ref name="stop" scoped="" ref="0xb65301d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb6530330" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb6530330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6530508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb652f3a0" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb652f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb652f578"/>
        <function-ref name="turnOn" scoped="" ref="0xb652f658"/>
        <function-ref name="setChannel" scoped="" ref="0xb652f738"/>
        <function-ref name="done" scoped="" ref="0xb652f818"/>
        <function-ref name="standby" scoped="" ref="0xb652f8f8"/>
        <function-ref name="getChannel" scoped="" ref="0xb652f9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6530668" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6530668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6530840"/>
        <function-ref name="cancel" scoped="" ref="0xb6530920"/>
        <function-ref name="sendDone" scoped="" ref="0xb6530a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0xb652ee98" loc="189:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0xb652ee98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb652d0c0"/>
        <function-ref name="runTask" scoped="" ref="0xb652d1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb652e628" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb652e628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb652e800"/>
        <function-ref name="header" scoped="" ref="0xb652e8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0xb652d320" loc="144:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0xb652d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb652d4f8"/>
        <function-ref name="runTask" scoped="" ref="0xb652d5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6530b60" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6530b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6530d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0xb652ea60" loc="322:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0xb652ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb652ec38"/>
        <function-ref name="runTask" scoped="" ref="0xb652ed18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb652e150" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb652e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb652e328"/>
        <function-ref name="ready" scoped="" ref="0xb652e408"/>
        <function-ref name="sendDone" scoped="" ref="0xb652e4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6530e78" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6530e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb652f070"/>
        <function-ref name="setChannel" scoped="" ref="0xb652f150"/>
        <function-ref name="getChannel" scoped="" ref="0xb652f230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb652fb18" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb652fb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb652fcf0"/>
        <function-ref name="suspend" scoped="" ref="0xb652fdd0"/>
        <function-ref name="resume" scoped="" ref="0xb652feb0"/>
        <function-ref name="run" scoped="" ref="0xb652e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6b79930" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6b79930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b79b08"/>
        <function-ref name="ready" scoped="" ref="0xb6b79be8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b79cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6b79e28" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6b79e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b57050"/>
        <function-ref name="header" scoped="" ref="0xb6b57130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6b57270" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6b57270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6b57448"/>
        <function-ref name="wait" scoped="" ref="0xb6b57528"/>
        <function-ref name="cancel" scoped="" ref="0xb6b57608"/>
        <function-ref name="isFree" scoped="" ref="0xb6b576e8"/>
        <function-ref name="getNow" scoped="" ref="0xb6b577c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6b57928" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6b57928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb6b57b00"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb6b57be0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb6b57cc0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb6b57da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6b794e8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6b794e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b796c0"/>
        <function-ref name="header" scoped="" ref="0xb6b797a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6b79010" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6b79010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b791e8"/>
        <function-ref name="ready" scoped="" ref="0xb6b792c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b793a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb650e330" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb650e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb650e508"/>
        <function-ref name="ready" scoped="" ref="0xb650e5e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb650e6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb650e828" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb650e828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb650ea00"/>
        <function-ref name="header" scoped="" ref="0xb650eae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb650ec20" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb650ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb650edf8"/>
        <function-ref name="wait" scoped="" ref="0xb650eed8"/>
        <function-ref name="cancel" scoped="" ref="0xb650d010"/>
        <function-ref name="isFree" scoped="" ref="0xb650d0f0"/>
        <function-ref name="getNow" scoped="" ref="0xb650d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb650d310" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb650d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb650d4e8"/>
        <function-ref name="rand32" scoped="" ref="0xb650d5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb650d728" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb650d728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb650d900"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb650d9e0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb650dac0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb650dba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6511ed0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6511ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb650e0c0"/>
        <function-ref name="header" scoped="" ref="0xb650e1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb65119f8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb65119f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6511bd0"/>
        <function-ref name="ready" scoped="" ref="0xb6511cb0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6511d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0xb650dd20" loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0xb650dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb650def8"/>
        <function-ref name="runTask" scoped="" ref="0xb650c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb6b56478" loc="46:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6b56478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6b56650"/>
        <function-ref name="rand32" scoped="" ref="0xb6b56730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb6b54b58" loc="45:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb6b54b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6b561e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6b59910" loc="44:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6b59910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6b59ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb6b52ec8" loc="48:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6b52ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6b510c0"/>
        <function-ref name="rand32" scoped="" ref="0xb6b511a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb6b52608" loc="47:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb6b52608"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6b52c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6b520e8" loc="46:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6b520e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6b522c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6b46b50" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6b46b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b46d28"/>
        <function-ref name="ready" scoped="" ref="0xb6b46e08"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b46ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6b2e060" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6b2e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b2e238"/>
        <function-ref name="header" scoped="" ref="0xb6b2e318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6b2e458" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6b2e458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6b2e630"/>
        <function-ref name="wait" scoped="" ref="0xb6b2e710"/>
        <function-ref name="cancel" scoped="" ref="0xb6b2e7f0"/>
        <function-ref name="isFree" scoped="" ref="0xb6b2e8d0"/>
        <function-ref name="getNow" scoped="" ref="0xb6b2e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0xb6b2d4f0" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0xb6b2d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b2d6c8"/>
        <function-ref name="get" scoped="" ref="0xb6b2d7a8"/>
        <function-ref name="setValue" scoped="" ref="0xb6b2d888"/>
        <function-ref name="set" scoped="" ref="0xb6b2d968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6b2eb10" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6b2eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb6b2ece8"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb6b2edc8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6b2eea8"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb6b2d010"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb6b2d0f0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb6b2d1d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6b2d2b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6b2d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6b46230" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6b46230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b46408"/>
        <function-ref name="header" scoped="" ref="0xb6b464e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6b47cf8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6b47cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b47ed0"/>
        <function-ref name="ready" scoped="" ref="0xb6b46010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b460f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6b46628" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6b46628"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6b46800"/>
        <function-ref name="noAck" scoped="" ref="0xb6b468e0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6b469c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6b278a0" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6b278a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6b27a78"/>
        <function-ref name="stopDone" scoped="" ref="0xb6b27b58"/>
        <function-ref name="start" scoped="" ref="0xb6b27c38"/>
        <function-ref name="stop" scoped="" ref="0xb6b27d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6b1c708" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6b1c708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6b1c8e0"/>
        <function-ref name="request" scoped="" ref="0xb6b1c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6b1acc8" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6b1acc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b1aea0"/>
        <function-ref name="ready" scoped="" ref="0xb6b19010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b190f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6b19250" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6b19250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b19428"/>
        <function-ref name="header" scoped="" ref="0xb6b19508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6b1e668" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6b1e668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6b1e840"/>
        <function-ref name="turnOn" scoped="" ref="0xb6b1e920"/>
        <function-ref name="setChannel" scoped="" ref="0xb6b1ea00"/>
        <function-ref name="done" scoped="" ref="0xb6b1eae0"/>
        <function-ref name="standby" scoped="" ref="0xb6b1ebc0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6b1eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6b1cb00" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6b1cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b1ccd8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6b1cdb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6b1ce98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6b1b010"/>
        <function-ref name="headerLength" scoped="" ref="0xb6b1b0f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6b1b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb6b1a4b0" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb6b1a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6b1a708"/>
        <function-ref name="turnOn" scoped="" ref="0xb6b1a7e8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6b1a8c8"/>
        <function-ref name="done" scoped="" ref="0xb6b1a9a8"/>
        <function-ref name="standby" scoped="" ref="0xb6b1aa88"/>
        <function-ref name="getChannel" scoped="" ref="0xb6b1ab68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb6b1b330" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6b1b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6b1b508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6b1c310" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6b1c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b1c4e8"/>
        <function-ref name="header" scoped="" ref="0xb6b1c5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0xb6b1a178" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0xb6b1a178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b1a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6b1b698" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6b1b698"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6b1b870"/>
        <function-ref name="stopDone" scoped="" ref="0xb6b1b950"/>
        <function-ref name="start" scoped="" ref="0xb6b1ba30"/>
        <function-ref name="stop" scoped="" ref="0xb6b1bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6b19a80" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6b19a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6b19c58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6b19d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6b19e18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6b19ef8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6b18010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6b180f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb6b1e350" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb6b1e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6b1e528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6b18250" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6b18250"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6b18428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0xb6b1bc70" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0xb6b1bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b1be48"/>
        <function-ref name="cancel" scoped="" ref="0xb6b1bf28"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b1a018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6b1ede0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6b1ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b1c010"/>
        <function-ref name="ready" scoped="" ref="0xb6b1c0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b1c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb6b19668" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb6b19668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6b19840"/>
        <function-ref name="request" scoped="" ref="0xb6b19920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6b27e58" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6b27e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6b1e050"/>
        <function-ref name="cancel" scoped="" ref="0xb6b1e130"/>
        <function-ref name="sendDone" scoped="" ref="0xb6b1e210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0xb6ae0098" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0xb6ae0098"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ae0270"/>
        <function-ref name="get" scoped="" ref="0xb6ae0350"/>
        <function-ref name="setValue" scoped="" ref="0xb6ae0430"/>
        <function-ref name="set" scoped="" ref="0xb6ae0510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6ae27f0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6ae27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ae29c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ae2aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ae2b88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ae2c68"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ae2d48"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ae2e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6ae18f0" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6ae18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ae1ac8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ae1ba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ae1c88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ae1d68"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ae1e48"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ae1f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb6ae3180" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6ae3180"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6ae3c80"/>
        <function-ref name="clear" scoped="" ref="0xb6ae2048"/>
        <function-ref name="isValid" scoped="" ref="0xb6ae38d0"/>
        <function-ref name="set" scoped="" ref="0xb6ae23f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb6ae1078" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6ae1078"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6ae16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6b14998" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6b14998"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6ae64d0"/>
        <function-ref name="clear" scoped="" ref="0xb6ae6880"/>
        <function-ref name="isValid" scoped="" ref="0xb6ae6120"/>
        <function-ref name="set" scoped="" ref="0xb6ae6c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0xb64e1520" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0xb64e1520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64e16f8"/>
        <function-ref name="get" scoped="" ref="0xb64e17d8"/>
        <function-ref name="setValue" scoped="" ref="0xb64e18b8"/>
        <function-ref name="set" scoped="" ref="0xb64e1998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb64e2ca8" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb64e2ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64e2e80"/>
        <function-ref name="payloadLength" scoped="" ref="0xb64e1010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb64e10f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb64e11d0"/>
        <function-ref name="headerLength" scoped="" ref="0xb64e12b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb64e1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb64e0d38" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb64e0d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64e0f10"/>
        <function-ref name="payloadLength" scoped="" ref="0xb64de010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb64de0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb64de1d0"/>
        <function-ref name="headerLength" scoped="" ref="0xb64de2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb64de390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb64e3610" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb64e3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb64e2150"/>
        <function-ref name="clear" scoped="" ref="0xb64e2500"/>
        <function-ref name="isValid" scoped="" ref="0xb64e3d60"/>
        <function-ref name="set" scoped="" ref="0xb64e28b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb64e1b88" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb64e1b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb64e0200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb64e04c0" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb64e04c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb64e0b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb64e8e38" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb64e8e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb64e5950"/>
        <function-ref name="clear" scoped="" ref="0xb64e5d00"/>
        <function-ref name="isValid" scoped="" ref="0xb64e55a0"/>
        <function-ref name="set" scoped="" ref="0xb64e30d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6ae85d8" loc="20:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6ae85d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0340"/>
            <typename><typedef-ref name="TMilli" ref="0xb73a0508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6ae8c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6add4a0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6add4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6add678"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6add758"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6add838"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6add918"/>
        <function-ref name="headerLength" scoped="" ref="0xb6add9f8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6addad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6addc68" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6addc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6adde40"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6addf20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6adc018"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6adc0f8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6adc1d8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6adc2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xb6acaeb8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xb6acaeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6add0c0"/>
        <function-ref name="get" scoped="" ref="0xb6add1a0"/>
        <function-ref name="setValue" scoped="" ref="0xb6add280"/>
        <function-ref name="set" scoped="" ref="0xb6add360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6ac9450" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6ac9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6ac9628"/>
        <function-ref name="stopDone" scoped="" ref="0xb6ac9708"/>
        <function-ref name="start" scoped="" ref="0xb6ac97e8"/>
        <function-ref name="stop" scoped="" ref="0xb6ac98c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6ac6290" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6ac6290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6ac6468"/>
        <function-ref name="request" scoped="" ref="0xb6ac6548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6ac4828" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6ac4828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ac4a00"/>
        <function-ref name="ready" scoped="" ref="0xb6ac4ae0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ac4bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6ac4d20" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6ac4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ac4ef8"/>
        <function-ref name="header" scoped="" ref="0xb6ac3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6ac7220" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6ac7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6ac73f8"/>
        <function-ref name="turnOn" scoped="" ref="0xb6ac74d8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6ac75b8"/>
        <function-ref name="done" scoped="" ref="0xb6ac7698"/>
        <function-ref name="standby" scoped="" ref="0xb6ac7778"/>
        <function-ref name="getChannel" scoped="" ref="0xb6ac7858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6ac6688" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6ac6688"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ac6860"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ac6940"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ac6a20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ac6b00"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ac6be0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ac6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb6ac4010" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb6ac4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6ac4268"/>
        <function-ref name="turnOn" scoped="" ref="0xb6ac4348"/>
        <function-ref name="setChannel" scoped="" ref="0xb6ac4428"/>
        <function-ref name="done" scoped="" ref="0xb6ac4508"/>
        <function-ref name="standby" scoped="" ref="0xb6ac45e8"/>
        <function-ref name="getChannel" scoped="" ref="0xb6ac46c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb6ac6e20" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6ac6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6ac5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6ac7e70" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6ac7e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ac6070"/>
        <function-ref name="header" scoped="" ref="0xb6ac6150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0xb6ac5c70" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0xb6ac5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ac5e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6ac51a0" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6ac51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6ac5378"/>
        <function-ref name="stopDone" scoped="" ref="0xb6ac5458"/>
        <function-ref name="start" scoped="" ref="0xb6ac5538"/>
        <function-ref name="stop" scoped="" ref="0xb6ac5618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6ac3588" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6ac3588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ac3760"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ac3840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ac3920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ac3a00"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ac3ae0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ac3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb6ac9ee0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb6ac9ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ac70e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6ac3d20" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6ac3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6ac3ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0xb6ac5778" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0xb6ac5778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ac5950"/>
        <function-ref name="cancel" scoped="" ref="0xb6ac5a30"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ac5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6ac7998" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6ac7998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ac7b70"/>
        <function-ref name="ready" scoped="" ref="0xb6ac7c50"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ac7d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb6ac3170" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb6ac3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6ac3348"/>
        <function-ref name="request" scoped="" ref="0xb6ac3428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6ac9a08" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6ac9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ac9be0"/>
        <function-ref name="cancel" scoped="" ref="0xb6ac9cc0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ac9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6abd820" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6abd820"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6abd9f8"/>
        <function-ref name="request" scoped="" ref="0xb6abdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6abaa58" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6abaa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ab9638"/>
        <function-ref name="get" scoped="" ref="0xb6ab9378"/>
        <function-ref name="isSet" scoped="" ref="0xb6ab90b8"/>
        <function-ref name="set" scoped="" ref="0xb6ab98f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0xb6aae778" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0xb6aae778"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6aae950"/>
        <function-ref name="get" scoped="" ref="0xb6aaea30"/>
        <function-ref name="setValue" scoped="" ref="0xb6aaeb10"/>
        <function-ref name="set" scoped="" ref="0xb6aaebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb6ab1898" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6ab1898"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6ab03c0"/>
        <function-ref name="clear" scoped="" ref="0xb6ab0770"/>
        <function-ref name="isValid" scoped="" ref="0xb6ab0010"/>
        <function-ref name="set" scoped="" ref="0xb6ab0b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6ac0668" loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6ac0668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6ac0840"/>
        <function-ref name="turnOn" scoped="" ref="0xb6ac0920"/>
        <function-ref name="setChannel" scoped="" ref="0xb6ac0a00"/>
        <function-ref name="done" scoped="" ref="0xb6ac0ae0"/>
        <function-ref name="standby" scoped="" ref="0xb6ac0bc0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6ac0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6aad498" loc="66:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6aad498"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6aad670"/>
        <function-ref name="wait" scoped="" ref="0xb6aad750"/>
        <function-ref name="cancel" scoped="" ref="0xb6aad830"/>
        <function-ref name="isFree" scoped="" ref="0xb6aad910"/>
        <function-ref name="getNow" scoped="" ref="0xb6aad9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6abc6f8" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6abc6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6aba2d0"/>
        <function-ref name="get" scoped="" ref="0xb6aba010"/>
        <function-ref name="isSet" scoped="" ref="0xb6abcd40"/>
        <function-ref name="set" scoped="" ref="0xb6aba590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6abdc88" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6abdc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6abde60"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6abc010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6abc0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6abc1d0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6abc2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6abc390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6ab2ec0" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6ab2ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ab1188"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ab1268"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ab1348"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb6ab1428"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb6ab1508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6abd3d0" loc="44:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6abd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6abd5a8"/>
        <function-ref name="header" scoped="" ref="0xb6abd688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6ab3428" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6ab3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb721e3a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6ab28d8"/>
        <function-ref name="fired" scoped="" ref="0xb6ab20a8"/>
        <function-ref name="startAt" scoped="" ref="0xb6ab2598"/>
        <function-ref name="isRunning" scoped="" ref="0xb6ab2320"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6ab2b50"/>
        <function-ref name="start" scoped="" ref="0xb6ab3b78"/>
        <function-ref name="stop" scoped="" ref="0xb6ab3e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb6ab9e28" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6ab9e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ab7a08"/>
        <function-ref name="get" scoped="" ref="0xb6ab7748"/>
        <function-ref name="isSet" scoped="" ref="0xb6ab7488"/>
        <function-ref name="set" scoped="" ref="0xb6ab7cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6ab5950" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6ab5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6ab3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6ac0e40" loc="43:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6ac0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6abd050"/>
        <function-ref name="ready" scoped="" ref="0xb6abd130"/>
        <function-ref name="sendDone" scoped="" ref="0xb6abd210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6ab6208" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6ab6208"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ab6dd0"/>
        <function-ref name="get" scoped="" ref="0xb6ab6b10"/>
        <function-ref name="isSet" scoped="" ref="0xb6ab6850"/>
        <function-ref name="set" scoped="" ref="0xb6ab50a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0xb6aaee38" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6aaee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6aad050"/>
        <function-ref name="get" scoped="" ref="0xb6aad130"/>
        <function-ref name="setValue" scoped="" ref="0xb6aad210"/>
        <function-ref name="set" scoped="" ref="0xb6aad2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0xb6aae0e0" loc="63:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6aae0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6aae2b8"/>
        <function-ref name="get" scoped="" ref="0xb6aae398"/>
        <function-ref name="setValue" scoped="" ref="0xb6aae478"/>
        <function-ref name="set" scoped="" ref="0xb6aae558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6ab5458" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6ab5458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6ab5630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6aadb78" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6aadb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6aadd50"/>
        <function-ref name="suspend" scoped="" ref="0xb6aade30"/>
        <function-ref name="resume" scoped="" ref="0xb6aadf10"/>
        <function-ref name="run" scoped="" ref="0xb6aac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6aa5a08" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6aa5a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6aa5be0"/>
        <function-ref name="request" scoped="" ref="0xb6aa5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xb6a92588" loc="74:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb6a92588"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb6a92cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6aa3b98" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6aa3b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6aa2780"/>
        <function-ref name="get" scoped="" ref="0xb6aa24c0"/>
        <function-ref name="isSet" scoped="" ref="0xb6aa2200"/>
        <function-ref name="set" scoped="" ref="0xb6aa2a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0xb6a93920" loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0xb6a93920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a93af8"/>
        <function-ref name="get" scoped="" ref="0xb6a93bd8"/>
        <function-ref name="setValue" scoped="" ref="0xb6a93cb8"/>
        <function-ref name="set" scoped="" ref="0xb6a93d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb6aa74d8" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb6aa74d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb74097d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb74097d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6aa76b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb6a91818" loc="83:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6a91818"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6a90438"/>
        <function-ref name="clear" scoped="" ref="0xb6a907e8"/>
        <function-ref name="isValid" scoped="" ref="0xb6a90088"/>
        <function-ref name="set" scoped="" ref="0xb6a90b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xb6a9bbf8" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb6a9bbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a9bdd0"/>
        <function-ref name="isInput" scoped="" ref="0xb6a9beb0"/>
        <function-ref name="toggle" scoped="" ref="0xb6a9a010"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a9a0f0"/>
        <function-ref name="get" scoped="" ref="0xb6a9a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a9a2b0"/>
        <function-ref name="set" scoped="" ref="0xb6a9a390"/>
        <function-ref name="clr" scoped="" ref="0xb6a9a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6a8e630" loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6a8e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6a8e808"/>
        <function-ref name="wait" scoped="" ref="0xb6a8e8e8"/>
        <function-ref name="cancel" scoped="" ref="0xb6a8e9c8"/>
        <function-ref name="isFree" scoped="" ref="0xb6a8eaa8"/>
        <function-ref name="getNow" scoped="" ref="0xb6a8eb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6aa7858" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6aa7858"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6aa7a30"/>
        <function-ref name="turnOn" scoped="" ref="0xb6aa7b10"/>
        <function-ref name="setChannel" scoped="" ref="0xb6aa7bf0"/>
        <function-ref name="done" scoped="" ref="0xb6aa7cd0"/>
        <function-ref name="standby" scoped="" ref="0xb6aa7db0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6aa7e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0xb6a96088" loc="75:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6a96088"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6a966d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6aa4838" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6aa4838"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6aa3410"/>
        <function-ref name="get" scoped="" ref="0xb6aa3150"/>
        <function-ref name="isSet" scoped="" ref="0xb6aa4e80"/>
        <function-ref name="set" scoped="" ref="0xb6aa36d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6aa5e70" loc="53:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6aa5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6aa4070"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6aa4150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6aa4230"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6aa4310"/>
        <function-ref name="headerLength" scoped="" ref="0xb6aa43f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6aa44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0xb6a9b210" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb6a9b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a9b3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb6a9b4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb6a9b5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a9b688"/>
        <function-ref name="get" scoped="" ref="0xb6a9b768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a9b848"/>
        <function-ref name="set" scoped="" ref="0xb6a9b928"/>
        <function-ref name="clr" scoped="" ref="0xb6a9ba08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6a969f0" loc="77:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6a969f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a96bc8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6a96ca8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6a96d88"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb6a96e68"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb6a93010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6aa55b8" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6aa55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6aa5790"/>
        <function-ref name="header" scoped="" ref="0xb6aa5870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0xb6a3a910" loc="856:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0xb6a3a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6a3aae8"/>
        <function-ref name="runTask" scoped="" ref="0xb6a3abc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb6aa0010" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6aa0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6aa0bd8"/>
        <function-ref name="get" scoped="" ref="0xb6aa0918"/>
        <function-ref name="isSet" scoped="" ref="0xb6aa0658"/>
        <function-ref name="set" scoped="" ref="0xb6aa0e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb6aa8e40" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb6aa8e40"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb74097d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb74097d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6aa7050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb6a9c5b8" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb6a9c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6a9c790"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6a9c870"/>
        <function-ref name="request" scoped="" ref="0xb6a9c950"/>
        <function-ref name="granted" scoped="" ref="0xb6a9ca30"/>
        <function-ref name="isOwner" scoped="" ref="0xb6a9cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0xb6a9da98" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb6a9da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a9dcf0"/>
        <function-ref name="isInput" scoped="" ref="0xb6a9ddd0"/>
        <function-ref name="toggle" scoped="" ref="0xb6a9deb0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a9c010"/>
        <function-ref name="get" scoped="" ref="0xb6a9c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a9c1d0"/>
        <function-ref name="set" scoped="" ref="0xb6a9c2b0"/>
        <function-ref name="clr" scoped="" ref="0xb6a9c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6a9f3d8" loc="58:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6a9f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a9d010"/>
        <function-ref name="get" scoped="" ref="0xb6a9fce0"/>
        <function-ref name="isSet" scoped="" ref="0xb6a9fa20"/>
        <function-ref name="set" scoped="" ref="0xb6a9d2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6aa5060" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6aa5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6aa5238"/>
        <function-ref name="ready" scoped="" ref="0xb6aa5318"/>
        <function-ref name="sendDone" scoped="" ref="0xb6aa53f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0xb6a95d50" loc="72:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb6a95d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb6a95f28"/>
        <function-ref name="disable" scoped="" ref="0xb6a97018"/>
        <function-ref name="captured" scoped="" ref="0xb6a970f8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb6a971d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0xb6a98b40" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6a98b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb6a98d18"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb6a98df8"/>
        <function-ref name="splitRead" scoped="" ref="0xb6a98ed8"/>
        <function-ref name="write" scoped="" ref="0xb6a9b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0xb6a91010" loc="81:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6a91010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a911e8"/>
        <function-ref name="get" scoped="" ref="0xb6a912c8"/>
        <function-ref name="setValue" scoped="" ref="0xb6a913a8"/>
        <function-ref name="set" scoped="" ref="0xb6a91488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0xb6a93288" loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6a93288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a93460"/>
        <function-ref name="get" scoped="" ref="0xb6a93540"/>
        <function-ref name="setValue" scoped="" ref="0xb6a93620"/>
        <function-ref name="set" scoped="" ref="0xb6a93700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6a9d680" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6a9d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6a9d858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6a8e010" loc="85:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6a8e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6a8e1e8"/>
        <function-ref name="suspend" scoped="" ref="0xb6a8e2c8"/>
        <function-ref name="resume" scoped="" ref="0xb6a8e3a8"/>
        <function-ref name="run" scoped="" ref="0xb6a8e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xb6a13db8" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb6a13db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a12010"/>
        <function-ref name="isInput" scoped="" ref="0xb6a120f0"/>
        <function-ref name="toggle" scoped="" ref="0xb6a121d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a122b0"/>
        <function-ref name="get" scoped="" ref="0xb6a12390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a12470"/>
        <function-ref name="set" scoped="" ref="0xb6a12550"/>
        <function-ref name="clr" scoped="" ref="0xb6a12630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0xb6a133d0" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb6a133d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a135a8"/>
        <function-ref name="isInput" scoped="" ref="0xb6a13688"/>
        <function-ref name="toggle" scoped="" ref="0xb6a13768"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a13848"/>
        <function-ref name="get" scoped="" ref="0xb6a13928"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a13a08"/>
        <function-ref name="set" scoped="" ref="0xb6a13ae8"/>
        <function-ref name="clr" scoped="" ref="0xb6a13bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6a11030" loc="49:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6a11030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6a104e0"/>
        <function-ref name="fired" scoped="" ref="0xb6a11c98"/>
        <function-ref name="startAt" scoped="" ref="0xb6a101a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6a11f10"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6a10758"/>
        <function-ref name="start" scoped="" ref="0xb6a11780"/>
        <function-ref name="stop" scoped="" ref="0xb6a11a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0xb6a145b8" loc="42:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb6a145b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6a14790"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6a14870"/>
        <function-ref name="request" scoped="" ref="0xb6a14950"/>
        <function-ref name="granted" scoped="" ref="0xb6a14a30"/>
        <function-ref name="isOwner" scoped="" ref="0xb6a14b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0xb6a17b08" loc="41:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb6a17b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a17ce0"/>
        <function-ref name="isInput" scoped="" ref="0xb6a17dc0"/>
        <function-ref name="toggle" scoped="" ref="0xb6a17ea0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a14010"/>
        <function-ref name="get" scoped="" ref="0xb6a140f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a141d0"/>
        <function-ref name="set" scoped="" ref="0xb6a142b0"/>
        <function-ref name="clr" scoped="" ref="0xb6a14390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb6a12820" loc="48:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb6a12820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb6a129f8"/>
        <function-ref name="disable" scoped="" ref="0xb6a12ad8"/>
        <function-ref name="captured" scoped="" ref="0xb6a12bb8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb6a12c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb6a14cc0" loc="43:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6a14cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb6a14e98"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb6a13010"/>
        <function-ref name="splitRead" scoped="" ref="0xb6a130f0"/>
        <function-ref name="write" scoped="" ref="0xb6a131d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6a10b48" loc="50:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6a10b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb721e0f8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6a0e200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0xb6a09358" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0xb6a09358"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a09530"/>
        <function-ref name="isInput" scoped="" ref="0xb6a09610"/>
        <function-ref name="toggle" scoped="" ref="0xb6a096f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a097d0"/>
        <function-ref name="get" scoped="" ref="0xb6a098b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a09990"/>
        <function-ref name="set" scoped="" ref="0xb6a09a70"/>
        <function-ref name="clr" scoped="" ref="0xb6a09b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0xb6a0b590" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6a0b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6a09048"/>
        <function-ref name="test" scoped="" ref="0xb6a0ab38"/>
        <function-ref name="get" scoped="" ref="0xb6a0bbd8"/>
        <function-ref name="captured" scoped="" ref="0xb6a0a130"/>
        <function-ref name="reset" scoped="" ref="0xb6a0a3d0"/>
        <function-ref name="isOn" scoped="" ref="0xb6a0adb0"/>
        <function-ref name="set" scoped="" ref="0xb6a0be50"/>
        <function-ref name="start" scoped="" ref="0xb6a0a648"/>
        <function-ref name="stop" scoped="" ref="0xb6a0a8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0xb6a09d58" loc="47:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0xb6a09d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6a07010"/>
        <function-ref name="isInput" scoped="" ref="0xb6a070f0"/>
        <function-ref name="toggle" scoped="" ref="0xb6a071d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6a072b0"/>
        <function-ref name="get" scoped="" ref="0xb6a07390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6a07470"/>
        <function-ref name="set" scoped="" ref="0xb6a07550"/>
        <function-ref name="clr" scoped="" ref="0xb6a07630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb6a0b030" loc="40:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb6a0b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6a0b208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb6a0e980" loc="39:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb6a0e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb6a0eb58"/>
        <function-ref name="disable" scoped="" ref="0xb6a0ec38"/>
        <function-ref name="captured" scoped="" ref="0xb6a0ed18"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb6a0edf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb69f7500" loc="84:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb69f7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb69f76d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb69f77b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb69ffaa0" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb69ffaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb69ffc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6a0dd98" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6a0dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb69ff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb69ffe48" loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb69ffe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb69fe050"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb69fe130"/>
        <function-ref name="splitRead" scoped="" ref="0xb69fe210"/>
        <function-ref name="write" scoped="" ref="0xb69fe2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb69f7c50" loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb69f7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb69f7e28"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb69f7f08"/>
        <function-ref name="request" scoped="" ref="0xb69fd010"/>
        <function-ref name="granted" scoped="" ref="0xb69fd0f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb69fd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0xb69f52d8" loc="95:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb69f52d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb69f54b0"/>
        <function-ref name="configure" scoped="" ref="0xb69f5590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xb69d1390" loc="294:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xb69d1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb69d1568"/>
        <function-ref name="runTask" scoped="" ref="0xb69d1648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb69f6b38" loc="94:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb69f6b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb69f6d10"/>
        <function-ref name="sendDone" scoped="" ref="0xb69f6df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb69f6198" loc="92:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb69f6198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb69f6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb69fdd80" loc="91:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb69fdd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb69f6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xb69e41c8" loc="98:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xb69e41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb69e43a0"/>
        <function-ref name="sleep" scoped="" ref="0xb69f47f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb69e4560"/>
        <function-ref name="dataReady" scoped="" ref="0xb69f48d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb69e4720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb69e4800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb69e48e0"/>
        <function-ref name="read" scoped="" ref="0xb69e49c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb69e4aa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb69e4b80"/>
        <function-ref name="setClock" scoped="" ref="0xb69e4c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb69e4d40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb69e4e20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb69f4010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb69f40f0"/>
        <function-ref name="write" scoped="" ref="0xb69f41d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb69f42b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb69f4390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb69f4470"/>
        <function-ref name="getClock" scoped="" ref="0xb69f4550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb69f4630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb69e4480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb69e4640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb69f4710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb69f6520" loc="93:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb69f6520"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb69f66f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb69f67d8"/>
        <function-ref name="splitRead" scoped="" ref="0xb69f68b8"/>
        <function-ref name="write" scoped="" ref="0xb69f6998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb69f4a98" loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb69f4a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb69f4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xb69fce40" loc="76:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xb69fce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb69bf050"/>
        <function-ref name="sleep" scoped="" ref="0xb69be470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb69bf210"/>
        <function-ref name="dataReady" scoped="" ref="0xb69be550"/>
        <function-ref name="initMaster" scoped="" ref="0xb69bf3d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb69bf4b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb69bf590"/>
        <function-ref name="read" scoped="" ref="0xb69bf670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb69bf750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb69bf830"/>
        <function-ref name="setClock" scoped="" ref="0xb69bf910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb69bf9f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb69bfad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb69bfc30"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb69bfd10"/>
        <function-ref name="write" scoped="" ref="0xb69bfdf0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb69bfed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb69be010"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb69be0f0"/>
        <function-ref name="getClock" scoped="" ref="0xb69be1d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb69be2b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb69bf130"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb69bf2f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb69be390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xb69b8e88" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xb69b8e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb69b5070"/>
        <function-ref name="isInput" scoped="" ref="0xb69b5150"/>
        <function-ref name="toggle" scoped="" ref="0xb69b5230"/>
        <function-ref name="isOutput" scoped="" ref="0xb69b5310"/>
        <function-ref name="get" scoped="" ref="0xb69b53f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69b54d0"/>
        <function-ref name="set" scoped="" ref="0xb69b55b0"/>
        <function-ref name="clr" scoped="" ref="0xb69b5690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xb69b99e8" loc="79:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xb69b99e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb69b9bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb69b9ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb69b9d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb69b9e60"/>
        <function-ref name="get" scoped="" ref="0xb69b8010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69b80f0"/>
        <function-ref name="set" scoped="" ref="0xb69b81d0"/>
        <function-ref name="clr" scoped="" ref="0xb69b82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb69b9010" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb69b9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb69b91e8"/>
        <function-ref name="isInput" scoped="" ref="0xb69b92c8"/>
        <function-ref name="toggle" scoped="" ref="0xb69b93a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb69b9488"/>
        <function-ref name="get" scoped="" ref="0xb69b9568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69b9648"/>
        <function-ref name="set" scoped="" ref="0xb69b9728"/>
        <function-ref name="clr" scoped="" ref="0xb69b9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb69b7ac0" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb69b7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb69b7c98"/>
        <function-ref name="stop" scoped="" ref="0xb69b7d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xb69b5898" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xb69b5898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb69b5a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xb69bb1c8" loc="74:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xb69bb1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb69bb3a0"/>
        <function-ref name="sleep" scoped="" ref="0xb69ba7f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb69bb560"/>
        <function-ref name="dataReady" scoped="" ref="0xb69ba8d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb69bb720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb69bb800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb69bb8e0"/>
        <function-ref name="read" scoped="" ref="0xb69bb9c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb69bbaa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb69bbb80"/>
        <function-ref name="setClock" scoped="" ref="0xb69bbc60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb69bbd40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb69bbe20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb69ba010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb69ba0f0"/>
        <function-ref name="write" scoped="" ref="0xb69ba1d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb69ba2b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb69ba390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb69ba470"/>
        <function-ref name="getClock" scoped="" ref="0xb69ba550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb69ba630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb69bb480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb69bb640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb69ba710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xb69b84a0" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xb69b84a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb69b8678"/>
        <function-ref name="isInput" scoped="" ref="0xb69b8758"/>
        <function-ref name="toggle" scoped="" ref="0xb69b8838"/>
        <function-ref name="isOutput" scoped="" ref="0xb69b8918"/>
        <function-ref name="get" scoped="" ref="0xb69b89f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb69b8ad8"/>
        <function-ref name="set" scoped="" ref="0xb69b8bb8"/>
        <function-ref name="clr" scoped="" ref="0xb69b8c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb698e8d8" loc="86:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb698e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb698eac0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb698eba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb698d208" loc="89:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb698d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb698d3f0"/>
        <function-ref name="configure" scoped="" ref="0xb698d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb698e198" loc="85:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb698e198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb698e380"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb698e460"/>
        <function-ref name="request" scoped="" ref="0xb698e540"/>
        <function-ref name="granted" scoped="" ref="0xb698e620"/>
        <function-ref name="isOwner" scoped="" ref="0xb698e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb698ece0" loc="87:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb698ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb698eeb8"/>
        <function-ref name="userId" scoped="" ref="0xb698d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb64b89c8" loc="44:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb64b89c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb64b8ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb64b8d00" loc="45:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb64b8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb64b8ed8"/>
        <function-ref name="isEmpty" scoped="" ref="0xb64b6010"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb64b60f0"/>
        <function-ref name="dequeue" scoped="" ref="0xb64b61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb64b5490" loc="52:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb64b5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb64b5678"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb64b5758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb64b5d58" loc="56:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb64b5d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb64b3010"/>
        <function-ref name="configure" scoped="" ref="0xb64b30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb64b3250" loc="57:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb64b3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb64b3428"/>
        <function-ref name="isEmpty" scoped="" ref="0xb64b3508"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb64b35e8"/>
        <function-ref name="dequeue" scoped="" ref="0xb64b36c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb64b6d38" loc="51:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb64b6d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb64b6f20"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb64b5018"/>
        <function-ref name="request" scoped="" ref="0xb64b50f8"/>
        <function-ref name="granted" scoped="" ref="0xb64b51d8"/>
        <function-ref name="isOwner" scoped="" ref="0xb64b52b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb64b5898" loc="53:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb64b5898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb64b5a70"/>
        <function-ref name="userId" scoped="" ref="0xb64b5b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb64b3848" loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb64b3848"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb64b3a20"/>
        <function-ref name="runTask" scoped="" ref="0xb64b3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6985610" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6985610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb69857e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb69858c8"/>
        <function-ref name="getControlA" scoped="" ref="0xb69859a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6985a88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6985b68"/>
        <function-ref name="setControlB" scoped="" ref="0xb6985c48"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6985d28"/>
        <function-ref name="getControlB" scoped="" ref="0xb6985e08"/>
        <function-ref name="setControlC" scoped="" ref="0xb6985ee8"/>
        <function-ref name="setControlA" scoped="" ref="0xb6984010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6984348" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6984348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6983dc8"/>
        <function-ref name="test" scoped="" ref="0xb69838d8"/>
        <function-ref name="get" scoped="" ref="0xb6984990"/>
        <function-ref name="captured" scoped="" ref="0xb6984ea8"/>
        <function-ref name="reset" scoped="" ref="0xb6983170"/>
        <function-ref name="isOn" scoped="" ref="0xb6983b50"/>
        <function-ref name="set" scoped="" ref="0xb6984c08"/>
        <function-ref name="start" scoped="" ref="0xb69833e8"/>
        <function-ref name="stop" scoped="" ref="0xb6983660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6981538" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6981538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6980a98"/>
        <function-ref name="fired" scoped="" ref="0xb69800b8"/>
        <function-ref name="get" scoped="" ref="0xb6981b80"/>
        <function-ref name="reset" scoped="" ref="0xb6980330"/>
        <function-ref name="isOn" scoped="" ref="0xb6980d10"/>
        <function-ref name="set" scoped="" ref="0xb6981df8"/>
        <function-ref name="start" scoped="" ref="0xb69805a8"/>
        <function-ref name="stop" scoped="" ref="0xb6980820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6988328" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6988328"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6986d68"/>
        <function-ref name="test" scoped="" ref="0xb6986878"/>
        <function-ref name="get" scoped="" ref="0xb6988970"/>
        <function-ref name="setScale" scoped="" ref="0xb6985010"/>
        <function-ref name="getScale" scoped="" ref="0xb69852b0"/>
        <function-ref name="reset" scoped="" ref="0xb6986110"/>
        <function-ref name="overflow" scoped="" ref="0xb6988e88"/>
        <function-ref name="isOn" scoped="" ref="0xb6986af0"/>
        <function-ref name="set" scoped="" ref="0xb6988be8"/>
        <function-ref name="start" scoped="" ref="0xb6986388"/>
        <function-ref name="stop" scoped="" ref="0xb6986600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb697ad78" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb697ad78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb6979010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb69790f0"/>
        <function-ref name="getControlA" scoped="" ref="0xb69791d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb69792b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6979390"/>
        <function-ref name="setControlB" scoped="" ref="0xb6979470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6979550"/>
        <function-ref name="getControlB" scoped="" ref="0xb6979630"/>
        <function-ref name="setControlC" scoped="" ref="0xb6979710"/>
        <function-ref name="setControlA" scoped="" ref="0xb69797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb6976a80" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb6976a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6974010"/>
        <function-ref name="fired" scoped="" ref="0xb6975610"/>
        <function-ref name="get" scoped="" ref="0xb69750f8"/>
        <function-ref name="reset" scoped="" ref="0xb6975888"/>
        <function-ref name="isOn" scoped="" ref="0xb6974288"/>
        <function-ref name="set" scoped="" ref="0xb6975370"/>
        <function-ref name="start" scoped="" ref="0xb6975b00"/>
        <function-ref name="stop" scoped="" ref="0xb6975d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6979b28" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6979b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6976640"/>
        <function-ref name="test" scoped="" ref="0xb6976150"/>
        <function-ref name="get" scoped="" ref="0xb6978200"/>
        <function-ref name="captured" scoped="" ref="0xb6978718"/>
        <function-ref name="reset" scoped="" ref="0xb69789b8"/>
        <function-ref name="isOn" scoped="" ref="0xb69763c8"/>
        <function-ref name="set" scoped="" ref="0xb6978478"/>
        <function-ref name="start" scoped="" ref="0xb6978c30"/>
        <function-ref name="stop" scoped="" ref="0xb6978ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb69746a0" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb69746a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6972c90"/>
        <function-ref name="fired" scoped="" ref="0xb69722b0"/>
        <function-ref name="get" scoped="" ref="0xb6974ce8"/>
        <function-ref name="reset" scoped="" ref="0xb6972528"/>
        <function-ref name="isOn" scoped="" ref="0xb6972f08"/>
        <function-ref name="set" scoped="" ref="0xb6972010"/>
        <function-ref name="start" scoped="" ref="0xb69727a0"/>
        <function-ref name="stop" scoped="" ref="0xb6972a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb6971340" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb6971340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6970898"/>
        <function-ref name="fired" scoped="" ref="0xb6971ea0"/>
        <function-ref name="get" scoped="" ref="0xb6971988"/>
        <function-ref name="reset" scoped="" ref="0xb6970130"/>
        <function-ref name="isOn" scoped="" ref="0xb6970b10"/>
        <function-ref name="set" scoped="" ref="0xb6971c00"/>
        <function-ref name="start" scoped="" ref="0xb69703a8"/>
        <function-ref name="stop" scoped="" ref="0xb6970620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb697e9c0" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb697e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb697a500"/>
        <function-ref name="test" scoped="" ref="0xb697a010"/>
        <function-ref name="get" scoped="" ref="0xb697b048"/>
        <function-ref name="setScale" scoped="" ref="0xb697a778"/>
        <function-ref name="getScale" scoped="" ref="0xb697aa18"/>
        <function-ref name="reset" scoped="" ref="0xb697b7d8"/>
        <function-ref name="overflow" scoped="" ref="0xb697b560"/>
        <function-ref name="isOn" scoped="" ref="0xb697a288"/>
        <function-ref name="set" scoped="" ref="0xb697b2c0"/>
        <function-ref name="start" scoped="" ref="0xb697ba50"/>
        <function-ref name="stop" scoped="" ref="0xb697bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb692ee08" loc="30:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb692ee08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7378db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6906350"/>
        <function-ref name="fired" scoped="" ref="0xb692da88"/>
        <function-ref name="startAt" scoped="" ref="0xb6906010"/>
        <function-ref name="isRunning" scoped="" ref="0xb692dd00"/>
        <function-ref name="getAlarm" scoped="" ref="0xb69065c8"/>
        <function-ref name="start" scoped="" ref="0xb692d570"/>
        <function-ref name="stop" scoped="" ref="0xb692d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6927a00" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6927a00"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb74095d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb74095d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6927bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6927de8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6927de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6925878"/>
        <function-ref name="test" scoped="" ref="0xb6925388"/>
        <function-ref name="get" scoped="" ref="0xb6926468"/>
        <function-ref name="setScale" scoped="" ref="0xb6925af0"/>
        <function-ref name="getScale" scoped="" ref="0xb6925d90"/>
        <function-ref name="reset" scoped="" ref="0xb6926bf8"/>
        <function-ref name="overflow" scoped="" ref="0xb6926980"/>
        <function-ref name="isOn" scoped="" ref="0xb6925600"/>
        <function-ref name="set" scoped="" ref="0xb69266e0"/>
        <function-ref name="start" scoped="" ref="0xb6926e70"/>
        <function-ref name="stop" scoped="" ref="0xb6925110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb649eac0" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb649eac0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xb74093d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xb74093d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7378db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6498010"/>
        <function-ref name="fired" scoped="" ref="0xb6499740"/>
        <function-ref name="startAt" scoped="" ref="0xb6499c30"/>
        <function-ref name="isRunning" scoped="" ref="0xb64999b8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6498288"/>
        <function-ref name="start" scoped="" ref="0xb6499228"/>
        <function-ref name="stop" scoped="" ref="0xb64994c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xb64967e8" loc="58:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xb64967e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6494d58"/>
        <function-ref name="fired" scoped="" ref="0xb6494378"/>
        <function-ref name="get" scoped="" ref="0xb6496e30"/>
        <function-ref name="reset" scoped="" ref="0xb64945f0"/>
        <function-ref name="isOn" scoped="" ref="0xb6493010"/>
        <function-ref name="set" scoped="" ref="0xb64940d8"/>
        <function-ref name="start" scoped="" ref="0xb6494868"/>
        <function-ref name="stop" scoped="" ref="0xb6494ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xb6498548" loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xb6498548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6496010"/>
        <function-ref name="test" scoped="" ref="0xb6497ab8"/>
        <function-ref name="get" scoped="" ref="0xb6498b90"/>
        <function-ref name="setScale" scoped="" ref="0xb6496288"/>
        <function-ref name="getScale" scoped="" ref="0xb6496528"/>
        <function-ref name="reset" scoped="" ref="0xb6497350"/>
        <function-ref name="overflow" scoped="" ref="0xb64970d8"/>
        <function-ref name="isOn" scoped="" ref="0xb6497d30"/>
        <function-ref name="set" scoped="" ref="0xb6498e08"/>
        <function-ref name="start" scoped="" ref="0xb64975c8"/>
        <function-ref name="stop" scoped="" ref="0xb6497840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6905778" loc="39:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6905778"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6905dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6901868" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6901868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7378db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68fd010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68fd500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68fd288"/>
        <function-ref name="overflow" scoped="" ref="0xb68fd778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb68fca68" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb68fca68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7378db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68fb200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68fb6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68fb478"/>
        <function-ref name="overflow" scoped="" ref="0xb68fb968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb68fbc48" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb68fbc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb68f86a0"/>
        <function-ref name="test" scoped="" ref="0xb68f81b0"/>
        <function-ref name="get" scoped="" ref="0xb68fa2a8"/>
        <function-ref name="setScale" scoped="" ref="0xb68f8918"/>
        <function-ref name="getScale" scoped="" ref="0xb68f8bb8"/>
        <function-ref name="reset" scoped="" ref="0xb68faa38"/>
        <function-ref name="overflow" scoped="" ref="0xb68fa7c0"/>
        <function-ref name="isOn" scoped="" ref="0xb68f8428"/>
        <function-ref name="set" scoped="" ref="0xb68fa520"/>
        <function-ref name="start" scoped="" ref="0xb68facb0"/>
        <function-ref name="stop" scoped="" ref="0xb68faf28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb68f5ae8" loc="63:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb68f5ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68f4308"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68f47f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68f4580"/>
        <function-ref name="overflow" scoped="" ref="0xb68f4a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb68ff7f0" loc="62:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb68ff7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68f5010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68f5500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68f5288"/>
        <function-ref name="overflow" scoped="" ref="0xb68f5778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb68f3988" loc="48:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb68f3988"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68f1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb68f1360" loc="49:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb68f1360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68f1ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68f0010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68f1d28"/>
        <function-ref name="overflow" scoped="" ref="0xb68f0288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xb6902c20" loc="36:/home/wsn/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb6902c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb73a0dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb739e010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb68ec380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb68c1ed8" loc="49:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb68c1ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb68c00c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb68c01a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb68c0280"/>
        <function-ref name="cancel" scoped="" ref="0xb68c0360"/>
        <function-ref name="sendDone" scoped="" ref="0xb68c0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb68c0580" loc="50:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb68c0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb68c0758"/>
        <function-ref name="payloadLength" scoped="" ref="0xb68c0838"/>
        <function-ref name="getPayload" scoped="" ref="0xb68c0918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb68c09f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb68c0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb68c0c18" loc="51:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb68c0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb68c0df0"/>
        <function-ref name="source" scoped="" ref="0xb68c0ed0"/>
        <function-ref name="address" scoped="" ref="0xb6874010"/>
        <function-ref name="destination" scoped="" ref="0xb68740f0"/>
        <function-ref name="setSource" scoped="" ref="0xb68741d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb68742b0"/>
        <function-ref name="type" scoped="" ref="0xb6874390"/>
        <function-ref name="setType" scoped="" ref="0xb6874470"/>
        <function-ref name="isForMe" scoped="" ref="0xb6874550"/>
        <function-ref name="setGroup" scoped="" ref="0xb6874630"/>
        <function-ref name="localGroup" scoped="" ref="0xb6874710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb6874870" loc="52:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb6874870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6874a48"/>
        <function-ref name="noAck" scoped="" ref="0xb6874b28"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6874c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb647db50" loc="49:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb647db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb647dd28"/>
        <function-ref name="getPayload" scoped="" ref="0xb647de08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb647dee8"/>
        <function-ref name="cancel" scoped="" ref="0xb647a010"/>
        <function-ref name="sendDone" scoped="" ref="0xb647a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb647a230" loc="50:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb647a230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb647a408"/>
        <function-ref name="payloadLength" scoped="" ref="0xb647a4e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb647a5c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb647a6a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb647a788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb647a8c8" loc="51:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb647a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb647aaa0"/>
        <function-ref name="source" scoped="" ref="0xb647ab80"/>
        <function-ref name="address" scoped="" ref="0xb647ac60"/>
        <function-ref name="destination" scoped="" ref="0xb647ad40"/>
        <function-ref name="setSource" scoped="" ref="0xb647ae20"/>
        <function-ref name="setDestination" scoped="" ref="0xb647af00"/>
        <function-ref name="type" scoped="" ref="0xb6479010"/>
        <function-ref name="setType" scoped="" ref="0xb64790f0"/>
        <function-ref name="isForMe" scoped="" ref="0xb64791d0"/>
        <function-ref name="setGroup" scoped="" ref="0xb64792b0"/>
        <function-ref name="localGroup" scoped="" ref="0xb6479390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb64794f0" loc="52:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb64794f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb64796c8"/>
        <function-ref name="noAck" scoped="" ref="0xb64797a8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6479888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6473228" loc="44:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6473228"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6473400"/>
        <function-ref name="getPayload" scoped="" ref="0xb64734e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb64735c0"/>
        <function-ref name="cancel" scoped="" ref="0xb64736a0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6473780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb64738f0" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb64738f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6473ac8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6473ba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6473c88"/>
        <function-ref name="cancel" scoped="" ref="0xb6473d68"/>
        <function-ref name="sendDone" scoped="" ref="0xb6473e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb6472010" loc="47:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SerialAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6472010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb64721e8"/>
        <function-ref name="source" scoped="" ref="0xb64722c8"/>
        <function-ref name="address" scoped="" ref="0xb64723a8"/>
        <function-ref name="destination" scoped="" ref="0xb6472488"/>
        <function-ref name="setSource" scoped="" ref="0xb6472568"/>
        <function-ref name="setDestination" scoped="" ref="0xb6472648"/>
        <function-ref name="type" scoped="" ref="0xb6472728"/>
        <function-ref name="setType" scoped="" ref="0xb6472808"/>
        <function-ref name="isForMe" scoped="" ref="0xb64728e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb64729c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb6472aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb68a8100" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb68a8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb68a82d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb68a83b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb68a8498"/>
        <function-ref name="cancel" scoped="" ref="0xb68a8578"/>
        <function-ref name="sendDone" scoped="" ref="0xb68a8658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb687e780" loc="48:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb687e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb687e968"/>
        <function-ref name="getPayload" scoped="" ref="0xb687ea48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb687eb28"/>
        <function-ref name="cancel" scoped="" ref="0xb687ec08"/>
        <function-ref name="sendDone" scoped="" ref="0xb687ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb687e010" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb687e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb687e1f8"/>
        <function-ref name="getPayload" scoped="" ref="0xb687e2d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb687e3b8"/>
        <function-ref name="cancel" scoped="" ref="0xb687e498"/>
        <function-ref name="sendDone" scoped="" ref="0xb687e578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb687da50" loc="50:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb687da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb687dc28"/>
        <function-ref name="payloadLength" scoped="" ref="0xb687dd08"/>
        <function-ref name="getPayload" scoped="" ref="0xb687dde8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb687dec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb687c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xb687c190" loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xb687c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb687c368"/>
        <function-ref name="runTask" scoped="" ref="0xb687c448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xb687c5c8" loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xb687c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb687c7a0"/>
        <function-ref name="runTask" scoped="" ref="0xb687c880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb687ee28" loc="49:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb687ee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb687d050"/>
        <function-ref name="source" scoped="" ref="0xb687d130"/>
        <function-ref name="address" scoped="" ref="0xb687d210"/>
        <function-ref name="destination" scoped="" ref="0xb687d2f0"/>
        <function-ref name="setSource" scoped="" ref="0xb687d3d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb687d4b0"/>
        <function-ref name="type" scoped="" ref="0xb687d590"/>
        <function-ref name="setType" scoped="" ref="0xb687d670"/>
        <function-ref name="isForMe" scoped="" ref="0xb687d750"/>
        <function-ref name="setGroup" scoped="" ref="0xb687d830"/>
        <function-ref name="localGroup" scoped="" ref="0xb687d910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb68715d8" loc="46:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="SerialAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb68715d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb68717b0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6871890"/>
        <function-ref name="getPayload" scoped="" ref="0xb6871970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6871a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6871b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb68712c0" loc="45:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="SerialAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb68712c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6871498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6871c70" loc="47:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="SerialAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6871c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6871e48"/>
        <function-ref name="source" scoped="" ref="0xb6871f28"/>
        <function-ref name="address" scoped="" ref="0xb686d018"/>
        <function-ref name="destination" scoped="" ref="0xb686d0f8"/>
        <function-ref name="setSource" scoped="" ref="0xb686d1d8"/>
        <function-ref name="setDestination" scoped="" ref="0xb686d2b8"/>
        <function-ref name="type" scoped="" ref="0xb686d398"/>
        <function-ref name="setType" scoped="" ref="0xb686d478"/>
        <function-ref name="isForMe" scoped="" ref="0xb686d558"/>
        <function-ref name="setGroup" scoped="" ref="0xb686d638"/>
        <function-ref name="localGroup" scoped="" ref="0xb686d718"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb734ec00" loc="62:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb734e090" loc="60:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xb7345010" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xb7346dd8" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xb73485c0" loc="31:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xb7348bf8" loc="39:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7348aa0" loc="39:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xb73462d8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7346180" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xb7346830" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb7339d08" loc="44:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb7338138" loc="45:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb7339578" loc="42:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb7338908" loc="47:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7339938" loc="43:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb7338510" loc="46:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7340e18" loc="40:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xb73391c8" loc="41:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb754d9d0" loc="57:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb73ed3b0" loc="72:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb754de10" loc="65:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb73e82d0" loc="67:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb73e87e8" loc="75:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb7373b90" loc="76:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb7361e90" loc="62:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb73b9470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb73611a8" loc="52:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb7243020" loc="113:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7246eb8" loc="113:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb7243d68" loc="138:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7243c10" loc="138:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb72467d0" loc="104:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7243530" loc="130:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0xb720c490" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb720eec8" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb720c148" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb720c328" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7209190" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb720ad60" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7209010" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb720a800" loc="123:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb720b168" loc="96:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb720b010" loc="96:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb720be58" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb720bb00" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb720bcf8" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb7242ce8" loc="65:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7242b90" loc="65:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb72026c8" loc="78:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7202570" loc="78:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7201648" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb72012e8" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb72014c8" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7203ce8" loc="106:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb7203350" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7203010" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb72031f0" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb7206088" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
              <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7244b28" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb7244d08" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7244ee8" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb71efa18" loc="61:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb71efe60" loc="67:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb71ed2f0" loc="72:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb71edb60" loc="83:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb71ec880" loc="100:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb71ecd28" loc="117:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb71ed718" loc="77:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb71ea640" loc="134:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb71ea4e8" loc="134:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb71ef5f0" loc="56:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb71ec010" loc="89:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb71ec438" loc="94:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb71f4710" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71f45b8" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb71f3220" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71f30c8" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb71f3ca8" loc="85:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71f3b50" loc="85:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb71f89e8" loc="177:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb726ab10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71f8890" loc="177:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb71fd168" loc="88:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71fd010" loc="88:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb71ff010" loc="68:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb71ff6a8" loc="78:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71ff550" loc="78:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb71fcbd8" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71fc870" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb71fca78" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb71fdd50" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71fd9e8" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb71fdbf0" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb71fb310" loc="147:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71fb1b8" loc="147:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb71fbe48" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71fbb18" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb71fbce8" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb726a8b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb71f97c0" loc="136:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71f9668" loc="136:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb71f7688" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb726ab10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71f7328" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb71f7528" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb726ab10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb71f7f00" loc="195:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb726ab10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb71e3098" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71e6d48" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb71e6f28" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb71e2b98" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71e2838" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb71e2a18" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb71e22d8" loc="112:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb71e3cd8" loc="89:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71e3b80" loc="89:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb71e1990" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71e1638" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb71e1830" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0xb71aad28" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71aa998" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0xb71aabc8" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0xb71ada88" loc="15:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0xb71aa388" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71aa010" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0xb71aa228" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb718b5a0" loc="95:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb718ba68" loc="105:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0xb7195c48" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0xb7195810" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0xb718f4d8" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0xb718e158" loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0xb718d1e0" loc="94:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb718d088" loc="94:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0xb718e680" loc="79:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0xb718fc08" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb718fab0" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0xb718d6e8" loc="100:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0xb718ebe0" loc="85:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0xb7194540" loc="71:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0xb7194b08" loc="81:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0xb7197ea8" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0xb7197d50" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0xb7193280" loc="91:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7193128" loc="91:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0xb7192500" loc="62:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0xb7192ce8" loc="69:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7192b90" loc="69:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0xb71913a0" loc="80:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb7191248" loc="80:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb70e3af0" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb70e37a0" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb70e3990" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0xb70dfe88" loc="79:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb70dfd30" loc="79:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb70dd6a8" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb70dd358" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb70dd548" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0xb70df2f0" loc="65:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0xb70dc560" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb70dc010" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb70dc200" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb70dc3f8" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0xb70df878" loc="72:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb70de968" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb70de418" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb70de608" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb70de800" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb70cc8b8" loc="46:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb70cc760" loc="46:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb70c8170" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb70ccde8" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0xb70c8010" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb70c6bc0" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb70c6bc0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb70c6d28" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70c6d28"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb70c3230" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70c6d28"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb70c3c58" loc="76:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb70c3758" loc="71:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb70c2070" loc="82:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0xb70ba850" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0xb70ba010" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0xb70b9e38" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb70b9ce0" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0xb70b9538" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0xb70bd720" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0xb70bdb60" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0xb70ba450" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0xb70bac50" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0xb70b9188" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb70b9030" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0xb70b9908" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0xb7032bc0" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb70300f8" loc="87:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb7032348" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb7030b28" loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb70306b8" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb7030560" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb70316e0" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb7031588" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb702e168" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb702e010" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb7032798" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0xb7031c58" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb7031b00" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb7031168" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb7031010" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb70342f8" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70342f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xb702be18" loc="88:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xb702bcc0" loc="88:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb702b430" loc="76:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb70347f0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70342f8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb702c350" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70342f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb702c1f8" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70342f8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb702c790" loc="64:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb702b890" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7034d68" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70342f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb7034c10" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70342f8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb702cb98" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb702b010" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb7029320" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7029320"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xb7024260" loc="74:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7026210" loc="58:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7029818" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7029320"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb7026618" loc="62:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb70246c0" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7029da0" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7029320"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb7029c48" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7029320"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7026a20" loc="65:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7026e18" loc="68:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb703a3e8" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb703a3e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xb7037ba0" loc="98:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb7037310" loc="87:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb703a8d8" loc="61:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb703a3e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0xb7036168" loc="104:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb7036010" loc="104:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xb70365f8" loc="110:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb70386c8" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb70382a8" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb7037778" loc="93:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb703ae50" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb703a3e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb703acf8" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb703a3e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7038ad0" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7038ec8" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6f78308" loc="53:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6f78308"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb6f74a28" loc="136:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb6f77890" loc="83:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb6f75a00" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb6f756b8" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb6f758a0" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb6f75210" loc="98:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb6f733e8" loc="151:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb6f74e70" loc="144:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb6f77d20" loc="92:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb6f78960" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb6f78808" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb6f74408" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb6f740c0" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb6f742a8" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb6f77010" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb6f78ea0" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6f774e0" loc="78:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6f31ce8" loc="53:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6f31ce8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb6f2d1d8" loc="61:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6f2b570" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6f2b570"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb6f2b6d8" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6f2b6d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb6f269a8" loc="109:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6f2b6d8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb6f28670" loc="78:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb6f26360" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6f2b6d8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6f2b6d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb6f26010" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6f2b6d8"/></type-var>
          </variable>
          <variable name="dt" ref="0xb6f26200" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6f2b6d8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb6f28ab8" loc="88:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb6f26e38" loc="116:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6f2b6d8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6f2bd08" loc="66:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6f2b6d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb6f2bbb0" loc="66:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6f2b6d8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6f28210" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb6f0d158" loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb6f0e700" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb6f0f328" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb6f0ecc0" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb6f0eb68" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb6f0e290" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6f0e138" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb6f0d720" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb6f0d5c8" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb6f0f778" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb6f0fcf0" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6f0fb98" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0xb6f064f0" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0xb6f081a8" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0xb6f085d0" loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0xb6f08ab0" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xb6f069b0" loc="98:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0xb6f06010" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xb6f0b688" loc="57:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb73909e0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7390c08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xb6f0bc80" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb73909e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7390c08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xb6f0bb28" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb73909e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7390c08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0xb6e40098" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xb6e44d10" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb6e44f28" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0xb6e3dde0" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e3da48" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0xb6e3dc80" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0xb6e3c978" loc="71:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e3c820" loc="71:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0xb6e3d570" loc="57:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0xb6e41db0" loc="52:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0xb6e41c58" loc="52:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0xb6e39970" loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e39818" loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0xb6e3fd98" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e3fa00" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0xb6e3fc38" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0xb6e39020" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e38eb0" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0xb6e38990" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e385f8" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0xb6e38830" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0xb6e372e0" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e37188" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0xb6e3eaa8" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb6e3e5c8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb6e3e470" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb6e34010" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb6e34a00" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6e34a00"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb6e34b68" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6e34b68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xb6e33d70" loc="63:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6e34b68"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e33c18" loc="63:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xb6e329c0" loc="70:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e32868" loc="70:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xb6e33220" loc="49:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e330c8" loc="49:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6e314b8" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6e34b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e31148" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb6e31358" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6e34b68"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0xb6e24628" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb6e24628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0xb6e21900" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e217a8" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6e212e0" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb6e24628"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e21188" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xb6e24ca0" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e24b48" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6e20098" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb6e24628"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e21d10" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb6e21f28" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb6e24628"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0xb6e1a6a0" loc="47:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e1a548" loc="47:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb6e06508" loc="120:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb6e07bf0" loc="97:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb6e075f0" loc="88:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xb6e060c8" loc="102:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb6e06c00" loc="128:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0xb6e03be0" loc="41:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb721c9d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e03a88" loc="41:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb6e03010" loc="37:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb721c9d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb6e03610" loc="39:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb721c9d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e034b8" loc="39:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb6e02b70" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb721c9d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e027d0" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6e02a10" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb721c9d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb6e023d0" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb721c9d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e02030" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6e02270" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb721c9d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0xb6e01718" loc="49:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb721c738"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e015c0" loc="49:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0xb6e01e88" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xb721c738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e01af8" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb6e01d28" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xb721c738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb6e01168" loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e01010" loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0xb6dff320" loc="53:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb721c738"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb6e0c968" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb721c9d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb6e0c408" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb721c9d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb6e0c620" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6e0c800" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb6e09be0" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e09880" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6e09a60" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb6e09320" loc="110:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb6e0a310" loc="83:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e0a1b8" loc="83:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6e0acf0" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e0a998" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb6e0ab90" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0xb6df3e70" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0xb6ded4c0" loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0xb6dedb00" loc="79:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0xb6df3a70" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0xb6de2870" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0xb6dd8300" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dd81a8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0xb6dcf940" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb726ab10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dcf7e8" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0xb6dce748" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dce5f0" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb6dd1b78" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dd1a20" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb6de5dc8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6de5c70" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb6dcf378" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dcf010" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6dcf218" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb6dd15a8" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dd1240" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6dd1448" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb6dce170" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb726ab10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dcfd68" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb6dce010" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb726ab10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0xb6dd42a8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0xb6dd47f0" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0xb6dd3cf0" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dd3b98" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0xb6dd4ea0" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dd4d48" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0xb6dd35e0" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dd3488" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0xb6dba210" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0xb6dbb9a0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0xb721e3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0xb6dbb848" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0xb721e3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb6dbbde8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0xb6dbb310" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0xb6dba688" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb721e3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0xb6db67d8" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6db6680" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb6dcdd60" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dcdc08" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb6db8b00" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb6db8668" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6db8308" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb6db8508" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xb6dcd668" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dcd510" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xb6db61c0" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6db6068" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0xb6de49a0" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xb6de44a0" loc="40:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6de4348" loc="40:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xb6de3090" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6de4f28" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0xb6de3578" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0xb6de3ca8" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6de3b50" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0xb6dd95c0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dd9468" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0xb6ddeef0" loc="86:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0xb6ddea38" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6dde6c0" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6dde8d8" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb6de1ac8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6de1970" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0xb6ddf168" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ddf010" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0xb6ddfaa0" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6ddf728" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6ddf940" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0xb6de6c10" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xb6de1470" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6de1148" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6de1310" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb6dde1e0" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dde088" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0xb6dc4e18" loc="131:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc4cc0" loc="131:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0xb6dc4010" loc="120:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc5e80" loc="120:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0xb6dcb010" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dccc58" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0xb6dcce48" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0xb6dc9420" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc92c8" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0xb6dc0290" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc1ee8" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6dc0130" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0xb6dcbd18" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dcbbc0" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0xb6dc4808" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc44c8" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0xb6dc46a8" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0xb6dc8388" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6dc8010" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6dc8228" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0xb6dc1a70" loc="151:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc1918" loc="151:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0xb6dcb678" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dcb520" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0xb6dc7350" loc="99:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc71f8" loc="99:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0xb6dc8c90" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6dc8918" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6dc8b30" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0xb6dbf998" loc="178:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb721c9d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb6dc08b8" loc="162:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc0760" loc="162:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0xb6dbf4f8" loc="173:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb721c738"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0xb6dc1448" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc10e8" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6dc12e8" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0xb6dc9a50" loc="81:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc98f8" loc="81:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0xb6dc59f8" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc56a8" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0xb6dc5898" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0xb6dc3618" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc32c8" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0xb6dc34b8" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb6dbd010" loc="185:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dbfe18" loc="185:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xb6dc7b58" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc7830" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb6dc79f8" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0xb6dcc7a0" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dcc648" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb6dbf010" loc="168:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc0e70" loc="168:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0xb6dc3c48" loc="141:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc3af0" loc="141:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0xb6dc51c0" loc="110:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dc5068" loc="110:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0xb6dda170" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ddcd38" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0xb6dda010" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0xb6dda5d8" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xb6ddc220" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ddc0c8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0xb6ddc868" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ddc710" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0xb6dd7728" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dd75d0" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0xb6dd7090" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dd8f28" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0xb6dd7c20" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0xb6dd6300" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dd61a8" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0xb6d5f5d8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d5f480" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb6d5c700" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d5c5a8" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6d5c010" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d5fbf0" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb6d5fde8" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0xb6d5e6b8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
              <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6d5e540" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb6d4f168" loc="50:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xb6d4f9d8" loc="60:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb6d4f5d8" loc="55:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb726ab10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb6d52c60" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb726ab10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb6d528f8" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb726ab10"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb6d52b00" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb6cede00" loc="53:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb6ce9458" loc="61:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb6ce6038" loc="65:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xb6ceab48" loc="59:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb6ceb6c0" loc="90:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0xb6cebbc0" loc="98:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb6ce0940" loc="79:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6ce8310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6ce07e8" loc="79:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6ce8310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb6ce35c8" loc="53:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb6ce3c88" loc="62:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6ce8310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6ce3b30" loc="62:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6ce8310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb6ce0258" loc="70:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb6ce8310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0xb6c14e30" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
              <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6c14cb8" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0xb6c14640" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6c144e8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb6c07c58" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6c07b00" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0xb6c060f8" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6c071c0" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6c07068" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6c07708" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6c075b0" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0xb6c0bc08" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6c0bab0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0xb6c0a8f8" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6c0a7a0" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0xb6c0a318" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6c0a1c0" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0xb6c08010" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6c0ae58" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0xb6c0b588" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6c0b430" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb726ad70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0xb6bb9d48" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0xb6bb6740" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb6bb6d88" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb6bb6c30" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0xb6bb4210" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0xb6bb62c0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb6bb46c8" loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0xb6bb8720" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6bb85c8" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0xb6bb23e8" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6bb8e98" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb6bb8d40" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb6b71a08" loc="52:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb6b71560" loc="46:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75458a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb6b54098" loc="53:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6b54098"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb6b546e8" loc="64:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6b54098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb6b54590" loc="64:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6b54098"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0xb6b3f350" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6b3f1f8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6b40088" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6b43f10" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0xb6b40820" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6b404e0" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb6b406c0" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6b40da0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6b40c48" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb720fc88"/>
                <typename><typedef-ref name="message_t" ref="0xb720ea30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0xb6b22010" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb6b25e68" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb6b25988" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6a979f8" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6a979f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb6a97b60" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6a97b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0xb6a92188" loc="66:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6a97b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb6a92030" loc="66:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6a97b60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xb6a951a8" loc="54:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb6a95b58" loc="66:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb6a95710" loc="61:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb6a955b8" loc="61:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xb6a9ac80" loc="53:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0xb6a99718" loc="62:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6a995c0" loc="62:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0xb6a982b8" loc="74:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6a98160" loc="74:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0xb6a99c28" loc="68:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb6a98898" loc="81:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6a98740" loc="81:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb69fb368" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb69fed38" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb69fb010" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb69fb200" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb69fa9a8" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb69fa228" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb69fa440" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb69fa630" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7545228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb69fa838" loc="83:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb69ff868" loc="45:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb69ff710" loc="45:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0xb69ed1a8" loc="86:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xb69e78d8" loc="126:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xb69eaa00" loc="117:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xb69e7ec0" loc="128:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xb69e7d68" loc="128:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xb69eed28" loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xb69e99d8" loc="122:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xb69e9880" loc="122:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xb69ebc20" loc="113:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xb69ebac8" loc="113:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb69eda38" loc="97:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xb69e4010" loc="141:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb69e5e38" loc="141:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xb69ea090" loc="114:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0xb69e6868" loc="131:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xb69e6710" loc="131:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb69e5138" loc="136:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xb69e7490" loc="125:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xb69e7338" loc="125:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xb69e5a00" loc="140:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xb69e9010" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xb69eae38" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb69eb010" loc="103:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb69ede78" loc="103:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xb69ea5e0" loc="116:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xb69ea488" loc="116:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xb69e9e88" loc="123:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xb69e6308" loc="129:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0xb69e6c78" loc="132:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xb69e5590" loc="138:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xb69e9448" loc="120:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb740a6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0xb69ed5d0" loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb69eb5d8" loc="109:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb69eb480" loc="109:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7546b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb69b72f0" loc="95:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb69b77d8" loc="105:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73ebda0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
